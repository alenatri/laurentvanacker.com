**********************
Windows PowerShell transcript start
Start time: 20191213094756
Username: LAVANACK09\lavanack
RunAs User: LAVANACK09\lavanack
Configuration Name: 
Machine: LAVANACK09 (Microsoft Windows NT 10.0.18363.0)
Host Application: C:\WINDOWS\system32\WindowsPowerShell\v1.0\PowerShell_ISE.exe
Process ID: 21284
PSVersion: 5.1.18362.145
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.18362.145
BuildVersion: 10.0.18362.145
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is C:\Users\lavanack\OneDrive - Microsoft\Source Control\GitHub\laurentvanacker.com\PowerShell\IIS\AutomatedLab\NLB & IIS\AutomatedLab - NLB & IIS_20191213094756.txt
VERBOSE: [09:47:59][AutomatedLabUnattended.psm1] Importing from 2 folders
VERBOSE: Exporting function 'Add-UnattendedNetworkAdapter'.
VERBOSE: Exporting function 'Add-UnattendedRenameNetworkAdapters'.
VERBOSE: Exporting function 'Add-UnattendedSynchronousCommand'.
VERBOSE: Exporting function 'Export-UnattendedFile'.
VERBOSE: Exporting function 'Get-UnattendedContent'.
VERBOSE: Exporting function 'Import-UnattendedContent'.
VERBOSE: Exporting function 'Set-UnattendedAdministratorName'.
VERBOSE: Exporting function 'Set-UnattendedAdministratorPassword'.
VERBOSE: Exporting function 'Set-UnattendedAntiMalware'.
VERBOSE: Exporting function 'Set-UnattendedAutoLogon'.
VERBOSE: Exporting function 'Set-UnattendedComputerName'.
VERBOSE: Exporting function 'Set-UnattendedDomain'.
VERBOSE: Exporting function 'Set-UnattendedFirewallState'.
VERBOSE: Exporting function 'Set-UnattendedIpSettings'.
VERBOSE: Exporting function 'Set-UnattendedLocalIntranetSites'.
VERBOSE: Exporting function 'Set-UnattendedPackage'.
VERBOSE: Exporting function 'Set-UnattendedProductKey'.
VERBOSE: Exporting function 'Set-UnattendedTimeZone'.
VERBOSE: Exporting function 'Set-UnattendedUserLocale'.
VERBOSE: Exporting function 'Set-UnattendedWorkgroup'.
VERBOSE: Importing function 'Add-UnattendedNetworkAdapter'.
VERBOSE: Importing function 'Add-UnattendedRenameNetworkAdapters'.
VERBOSE: Importing function 'Add-UnattendedSynchronousCommand'.
VERBOSE: Importing function 'Export-UnattendedFile'.
VERBOSE: Importing function 'Get-UnattendedContent'.
VERBOSE: Importing function 'Import-UnattendedContent'.
VERBOSE: Importing function 'Set-UnattendedAdministratorName'.
VERBOSE: Importing function 'Set-UnattendedAdministratorPassword'.
VERBOSE: Importing function 'Set-UnattendedAntiMalware'.
VERBOSE: Importing function 'Set-UnattendedAutoLogon'.
VERBOSE: Importing function 'Set-UnattendedComputerName'.
VERBOSE: Importing function 'Set-UnattendedDomain'.
VERBOSE: Importing function 'Set-UnattendedFirewallState'.
VERBOSE: Importing function 'Set-UnattendedIpSettings'.
VERBOSE: Importing function 'Set-UnattendedLocalIntranetSites'.
VERBOSE: Importing function 'Set-UnattendedPackage'.
VERBOSE: Importing function 'Set-UnattendedProductKey'.
VERBOSE: Importing function 'Set-UnattendedTimeZone'.
VERBOSE: Importing function 'Set-UnattendedUserLocale'.
VERBOSE: Importing function 'Set-UnattendedWorkgroup'.
VERBOSE: Populating RepositorySourceLocation property for module AutomatedLabDefinition.
VERBOSE: Loading module from path 'C:\Program Files\WindowsPowerShell\Modules\AutomatedLabDefinition\5.16.0\AutomatedLabDefinitionNetwork.psm1'.
VERBOSE: Exporting function 'Add-LabVirtualNetworkDefinition'.
VERBOSE: Exporting function 'Get-LabVirtualNetworkDefinition'.
VERBOSE: Exporting function 'Remove-LabVirtualNetworkDefinition'.
VERBOSE: Exporting function 'New-LabNetworkAdapterDefinition'.
VERBOSE: Importing function 'Add-LabVirtualNetworkDefinition'.
VERBOSE: Importing function 'Get-LabVirtualNetworkDefinition'.
VERBOSE: Importing function 'New-LabNetworkAdapterDefinition'.
VERBOSE: Importing function 'Remove-LabVirtualNetworkDefinition'.
VERBOSE: Loading module from path 'C:\Program Files\WindowsPowerShell\Modules\AutomatedLabDefinition\5.16.0\AutomatedLabDefinitionAzureServices.psm1'.
VERBOSE: Exporting function 'Add-LabAzureWebAppDefinition'.
VERBOSE: Exporting function 'Get-LabAzureWebAppDefinition'.
VERBOSE: Exporting function 'Add-LabAzureAppServicePlanDefinition'.
VERBOSE: Exporting function 'Get-LabAzureAppServicePlanDefinition'.
VERBOSE: Importing function 'Add-LabAzureAppServicePlanDefinition'.
VERBOSE: Importing function 'Add-LabAzureWebAppDefinition'.
VERBOSE: Importing function 'Get-LabAzureAppServicePlanDefinition'.
VERBOSE: Importing function 'Get-LabAzureWebAppDefinition'.
VERBOSE: Loading module from path 'C:\Program Files\WindowsPowerShell\Modules\AutomatedLabDefinition\5.16.0\AutomatedLabDefinition.psm1'.
VERBOSE: Exporting function 'Add-LabVirtualNetworkDefinition'.
VERBOSE: Exporting function 'Get-LabVirtualNetworkDefinition'.
VERBOSE: Exporting function 'New-LabNetworkAdapterDefinition'.
VERBOSE: Exporting function 'Remove-LabVirtualNetworkDefinition'.
VERBOSE: Exporting function 'Add-LabAzureAppServicePlanDefinition'.
VERBOSE: Exporting function 'Add-LabAzureWebAppDefinition'.
VERBOSE: Exporting function 'Get-LabAzureAppServicePlanDefinition'.
VERBOSE: Exporting function 'Get-LabAzureWebAppDefinition'.
VERBOSE: Exporting function 'Get-LabVolumesOnPhysicalDisks'.
VERBOSE: Exporting function 'Get-LabFreeDiskSpace'.
VERBOSE: Exporting function 'New-LabDefinition'.
VERBOSE: Exporting function 'Get-LabDefinition'.
VERBOSE: Exporting function 'Set-LabDefinition'.
VERBOSE: Exporting function 'Export-LabDefinition'.
VERBOSE: Exporting function 'Test-LabDefinition'.
VERBOSE: Exporting function 'Add-LabDomainDefinition'.
VERBOSE: Exporting function 'Get-LabDomainDefinition'.
VERBOSE: Exporting function 'Remove-LabDomainDefinition'.
VERBOSE: Exporting function 'Add-LabIsoImageDefinition'.
VERBOSE: Exporting function 'Get-LabIsoImageDefinition'.
VERBOSE: Exporting function 'Remove-LabIsoImageDefinition'.
VERBOSE: Exporting function 'Add-LabDiskDefinition'.
VERBOSE: Exporting function 'Add-LabMachineDefinition'.
VERBOSE: Exporting function 'Get-LabMachineDefinition'.
VERBOSE: Exporting function 'Remove-LabMachineDefinition'.
VERBOSE: Exporting function 'Get-LabMachineRoleDefinition'.
VERBOSE: Exporting function 'Get-LabPostInstallationActivity'.
VERBOSE: Exporting function 'Get-DiskSpeed'.
VERBOSE: Exporting function 'Set-LabLocalVirtualMachineDiskAuto'.
VERBOSE: Exporting function 'Get-LabVirtualNetwork'.
VERBOSE: Exporting function 'Get-LabAvailableAddresseSpace'.
VERBOSE: Exporting function 'Repair-LabDuplicateIpAddresses'.
VERBOSE: Exporting function 'Set-LinuxPackage'.
VERBOSE: Importing function 'Add-LabAzureAppServicePlanDefinition'.
VERBOSE: Importing function 'Add-LabAzureWebAppDefinition'.
VERBOSE: Importing function 'Add-LabDiskDefinition'.
VERBOSE: Importing function 'Add-LabDomainDefinition'.
VERBOSE: Importing function 'Add-LabIsoImageDefinition'.
VERBOSE: Importing function 'Add-LabMachineDefinition'.
VERBOSE: Importing function 'Add-LabVirtualNetworkDefinition'.
VERBOSE: Importing function 'Export-LabDefinition'.
VERBOSE: Importing function 'Get-DiskSpeed'.
VERBOSE: Importing function 'Get-LabAvailableAddresseSpace'.
VERBOSE: Importing function 'Get-LabAzureAppServicePlanDefinition'.
VERBOSE: Importing function 'Get-LabAzureWebAppDefinition'.
VERBOSE: Importing function 'Get-LabDefinition'.
VERBOSE: Importing function 'Get-LabDomainDefinition'.
VERBOSE: Importing function 'Get-LabIsoImageDefinition'.
VERBOSE: Importing function 'Get-LabMachineDefinition'.
VERBOSE: Importing function 'Get-LabMachineRoleDefinition'.
VERBOSE: Importing function 'Get-LabPostInstallationActivity'.
VERBOSE: Importing function 'Get-LabVirtualNetwork'.
VERBOSE: Importing function 'Get-LabVirtualNetworkDefinition'.
VERBOSE: Importing function 'Get-LabVolumesOnPhysicalDisks'.
VERBOSE: Importing function 'New-LabDefinition'.
VERBOSE: Importing function 'New-LabNetworkAdapterDefinition'.
VERBOSE: Importing function 'Remove-LabDomainDefinition'.
VERBOSE: Importing function 'Remove-LabIsoImageDefinition'.
VERBOSE: Importing function 'Remove-LabMachineDefinition'.
VERBOSE: Importing function 'Remove-LabVirtualNetworkDefinition'.
VERBOSE: Importing function 'Repair-LabDuplicateIpAddresses'.
VERBOSE: Importing function 'Set-LabDefinition'.
VERBOSE: Importing function 'Set-LabLocalVirtualMachineDiskAuto'.
VERBOSE: Importing function 'Test-LabDefinition'.
VERBOSE: Populating RepositorySourceLocation property for module AutomatedLab.Common.
VERBOSE: Loading module from path 'C:\Program Files\WindowsPowerShell\Modules\AutomatedLab.Common\2.0.178\AutomatedLab.Common.psm1'.
VERBOSE: Exporting function 'Add-AccountPrivilege'.
VERBOSE: Exporting function 'Add-FunctionToPSSession'.
VERBOSE: Exporting function 'Add-StringIncrement'.
VERBOSE: Exporting function 'Add-VariableToPSSession'.
VERBOSE: Exporting function 'Get-ConsoleText'.
VERBOSE: Exporting function 'Get-DotNetFrameworkVersion'.
VERBOSE: Exporting function 'Get-FullMesh'.
VERBOSE: Exporting function 'Get-RunspacePool'.
VERBOSE: Exporting function 'Get-StringSection'.
VERBOSE: Exporting function 'Get-Type'.
VERBOSE: Exporting function 'Install-SoftwarePackage'.
VERBOSE: Exporting function 'Invoke-Ternary'.
VERBOSE: Exporting function 'New-RunspacePool'.
VERBOSE: Exporting function 'Read-Choice'.
VERBOSE: Exporting function 'Read-HashTable'.
VERBOSE: Exporting function 'Receive-RunspaceJob'.
VERBOSE: Exporting function 'Remove-RunspacePool'.
VERBOSE: Exporting function 'Send-ModuleToPSSession'.
VERBOSE: Exporting function 'Split-Array'.
VERBOSE: Exporting function 'Start-RunspaceJob'.
VERBOSE: Exporting function 'Sync-Parameter'.
VERBOSE: Exporting function 'Test-HashtableKeys'.
VERBOSE: Exporting function 'Test-IsAdministrator'.
VERBOSE: Exporting function 'Wait-RunspaceJob'.
VERBOSE: Exporting function 'Get-DscConfigurationImportedResource'.
VERBOSE: Exporting function 'ConvertTo-BinaryIP'.
VERBOSE: Exporting function 'ConvertTo-DecimalIP'.
VERBOSE: Exporting function 'ConvertTo-DottedDecimalIP'.
VERBOSE: Exporting function 'ConvertTo-Mask'.
VERBOSE: Exporting function 'ConvertTo-MaskLength'.
VERBOSE: Exporting function 'Get-BroadcastAddress'.
VERBOSE: Exporting function 'Get-NetworkAddress'.
VERBOSE: Exporting function 'Get-NetworkRange'.
VERBOSE: Exporting function 'Get-NetworkSummary'.
VERBOSE: Exporting function 'Get-PublicIpAddress'.
VERBOSE: Exporting function 'Test-Port'.
VERBOSE: Exporting function 'Get-PerformanceCounterID'.
VERBOSE: Exporting function 'Get-PerformanceCounterLocalName'.
VERBOSE: Exporting function 'Get-PerformanceDataCollectorSet'.
VERBOSE: Exporting function 'New-PerformanceDataCollectorSet'.
VERBOSE: Exporting function 'Remove-PerformanceDataCollectorSet'.
VERBOSE: Exporting function 'Start-PerformanceDataCollectorSet'.
VERBOSE: Exporting function 'Stop-PerformanceDataCollectorSet'.
VERBOSE: Exporting function 'Add-CATemplateStandardPermission'.
VERBOSE: Exporting function 'Add-Certificate2'.
VERBOSE: Exporting function 'Enable-AutoEnrollment'.
VERBOSE: Exporting function 'Find-CertificateAuthority'.
VERBOSE: Exporting function 'Get-CATemplate'.
VERBOSE: Exporting function 'Get-Certificate2'.
VERBOSE: Exporting function 'Get-NextOid'.
VERBOSE: Exporting function 'New-CATemplate'.
VERBOSE: Exporting function 'Publish-CaTemplate'.
VERBOSE: Exporting function 'Request-Certificate'.
VERBOSE: Exporting function 'Test-CATemplate'.
VERBOSE: Exporting function 'Get-TfsAccessTokenString'.
VERBOSE: Exporting function 'Get-TfsAgentPool'.
VERBOSE: Exporting function 'Get-TfsAgentQueue'.
VERBOSE: Exporting function 'Get-TfsBuildDefinition'.
VERBOSE: Exporting function 'Get-TfsBuildDefinitionTemplate'.
VERBOSE: Exporting function 'Get-TfsBuildStep'.
VERBOSE: Exporting function 'Get-TfsGitRepository'.
VERBOSE: Exporting function 'Get-TfsProcessTemplate'.
VERBOSE: Exporting function 'Get-TfsProject'.
VERBOSE: Exporting function 'Get-TfsReleaseDefinition'.
VERBOSE: Exporting function 'Get-TfsReleaseStep'.
VERBOSE: Exporting function 'New-TfsAgentQueue'.
VERBOSE: Exporting function 'New-TfsBuildDefinition'.
VERBOSE: Exporting function 'New-TfsProject'.
VERBOSE: Exporting function 'New-TfsReleaseDefinition'.
VERBOSE: Exporting function 'Set-TfsProject'.
VERBOSE: Importing function 'Add-AccountPrivilege'.
VERBOSE: Importing function 'Add-CATemplateStandardPermission'.
VERBOSE: Importing function 'Add-Certificate2'.
VERBOSE: Importing function 'Add-FunctionToPSSession'.
VERBOSE: Importing function 'Add-StringIncrement'.
VERBOSE: Importing function 'Add-VariableToPSSession'.
VERBOSE: Importing function 'ConvertTo-BinaryIP'.
VERBOSE: Importing function 'ConvertTo-DecimalIP'.
VERBOSE: Importing function 'ConvertTo-DottedDecimalIP'.
VERBOSE: Importing function 'ConvertTo-Mask'.
VERBOSE: Importing function 'ConvertTo-MaskLength'.
VERBOSE: Importing function 'Enable-AutoEnrollment'.
VERBOSE: Importing function 'Find-CertificateAuthority'.
VERBOSE: Importing function 'Get-BroadcastAddress'.
VERBOSE: Importing function 'Get-CATemplate'.
VERBOSE: Importing function 'Get-Certificate2'.
VERBOSE: Importing function 'Get-ConsoleText'.
VERBOSE: Importing function 'Get-DotNetFrameworkVersion'.
VERBOSE: Importing function 'Get-DscConfigurationImportedResource'.
VERBOSE: Importing function 'Get-FullMesh'.
VERBOSE: Importing function 'Get-NetworkAddress'.
VERBOSE: Importing function 'Get-NetworkRange'.
VERBOSE: Importing function 'Get-NetworkSummary'.
VERBOSE: Importing function 'Get-NextOid'.
VERBOSE: Importing function 'Get-PerformanceCounterID'.
VERBOSE: Importing function 'Get-PerformanceCounterLocalName'.
VERBOSE: Importing function 'Get-PerformanceDataCollectorSet'.
VERBOSE: Importing function 'Get-PublicIpAddress'.
VERBOSE: Importing function 'Get-RunspacePool'.
VERBOSE: Importing function 'Get-StringSection'.
VERBOSE: Importing function 'Get-TfsAccessTokenString'.
VERBOSE: Importing function 'Get-TfsAgentPool'.
VERBOSE: Importing function 'Get-TfsAgentQueue'.
VERBOSE: Importing function 'Get-TfsBuildDefinition'.
VERBOSE: Importing function 'Get-TfsBuildDefinitionTemplate'.
VERBOSE: Importing function 'Get-TfsBuildStep'.
VERBOSE: Importing function 'Get-TfsGitRepository'.
VERBOSE: Importing function 'Get-TfsProcessTemplate'.
VERBOSE: Importing function 'Get-TfsProject'.
VERBOSE: Importing function 'Get-TfsReleaseDefinition'.
VERBOSE: Importing function 'Get-TfsReleaseStep'.
VERBOSE: Importing function 'Get-Type'.
VERBOSE: Importing function 'Install-SoftwarePackage'.
VERBOSE: Importing function 'Invoke-Ternary'.
VERBOSE: Importing function 'New-CATemplate'.
VERBOSE: Importing function 'New-PerformanceDataCollectorSet'.
VERBOSE: Importing function 'New-RunspacePool'.
VERBOSE: Importing function 'New-TfsAgentQueue'.
VERBOSE: Importing function 'New-TfsBuildDefinition'.
VERBOSE: Importing function 'New-TfsProject'.
VERBOSE: Importing function 'New-TfsReleaseDefinition'.
VERBOSE: Importing function 'Publish-CaTemplate'.
VERBOSE: Importing function 'Read-Choice'.
VERBOSE: Importing function 'Read-HashTable'.
VERBOSE: Importing function 'Receive-RunspaceJob'.
VERBOSE: Importing function 'Remove-PerformanceDataCollectorSet'.
VERBOSE: Importing function 'Remove-RunspacePool'.
VERBOSE: Importing function 'Request-Certificate'.
VERBOSE: Importing function 'Send-ModuleToPSSession'.
VERBOSE: Importing function 'Set-TfsProject'.
VERBOSE: Importing function 'Split-Array'.
VERBOSE: Importing function 'Start-PerformanceDataCollectorSet'.
VERBOSE: Importing function 'Start-RunspaceJob'.
VERBOSE: Importing function 'Stop-PerformanceDataCollectorSet'.
VERBOSE: Importing function 'Sync-Parameter'.
VERBOSE: Importing function 'Test-CATemplate'.
VERBOSE: Importing function 'Test-HashtableKeys'.
VERBOSE: Importing function 'Test-IsAdministrator'.
VERBOSE: Importing function 'Test-Port'.
VERBOSE: Importing function 'Wait-RunspaceJob'.
VERBOSE: Populating RepositorySourceLocation property for module AutomatedLabWorker.
VERBOSE: Loading module from path 'C:\Program Files\WindowsPowerShell\Modules\AutomatedLabWorker\5.16.0\AutomatedLabWorkerInternals.psm1'.
VERBOSE: Exporting function 'Test-IpInSameSameNetwork'.
VERBOSE: Importing function 'Test-IpInSameSameNetwork'.
VERBOSE: Loading module from path 'C:\Program Files\WindowsPowerShell\Modules\AutomatedLabWorker\5.16.0\AutomatedLabWorkerADCS.psm1'.
VERBOSE: Exporting function 'Install-LWLabCAServers'.
VERBOSE: Exporting function 'Install-LWLabCAServers2008'.
VERBOSE: Importing function 'Install-LWLabCAServers'.
VERBOSE: Importing function 'Install-LWLabCAServers2008'.
VERBOSE: Loading module from path 'C:\Program Files\WindowsPowerShell\Modules\AutomatedLabWorker\5.16.0\AutomatedLabWorkerDisks.psm1'.
VERBOSE: Exporting function 'New-LWReferenceVHDX'.
VERBOSE: Exporting function 'New-LWVHDX'.
VERBOSE: Exporting function 'Remove-LWVHDX'.
VERBOSE: Exporting function 'Add-LWVMVHDX'.
VERBOSE: Importing function 'Add-LWVMVHDX'.
VERBOSE: Importing function 'New-LWReferenceVHDX'.
VERBOSE: Importing function 'New-LWVHDX'.
VERBOSE: Importing function 'Remove-LWVHDX'.
VERBOSE: Loading module from path 'C:\Program Files\WindowsPowerShell\Modules\AutomatedLabWorker\5.16.0\AutomatedLabWorkerVirtualMachines.psm1'.
VERBOSE: Exporting function 'New-LWHypervVM'.
VERBOSE: Exporting function 'New-LWHypervLinuxVm'.
VERBOSE: Exporting function 'Remove-LWHypervVM'.
VERBOSE: Exporting function 'Wait-LWHypervVMRestart'.
VERBOSE: Exporting function 'Start-LWHypervVM'.
VERBOSE: Exporting function 'Stop-LWHypervVM'.
VERBOSE: Exporting function 'Save-LWHypervVM'.
VERBOSE: Exporting function 'Checkpoint-LWHypervVM'.
VERBOSE: Exporting function 'Remove-LWHypervVMSnapshot'.
VERBOSE: Exporting function 'Restore-LWHypervVMSnapshot'.
VERBOSE: Exporting function 'Get-LWHypervVMSnapshot'.
VERBOSE: Exporting function 'Get-LWHypervVMStatus'.
VERBOSE: Exporting function 'Enable-LWHypervVMRemoting'.
VERBOSE: Exporting function 'Mount-LWIsoImage'.
VERBOSE: Exporting function 'Dismount-LWIsoImage'.
VERBOSE: Exporting function 'Repair-LWHypervNetworkConfig'.
VERBOSE: Exporting function 'Set-LWHypervVMDescription'.
VERBOSE: Exporting function 'Get-LWHypervVMDescription'.
VERBOSE: Importing function 'Checkpoint-LWHypervVM'.
VERBOSE: Importing function 'Dismount-LWIsoImage'.
VERBOSE: Importing function 'Enable-LWHypervVMRemoting'.
VERBOSE: Importing function 'Get-LWHypervVMDescription'.
VERBOSE: Importing function 'Get-LWHypervVMSnapshot'.
VERBOSE: Importing function 'Get-LWHypervVMStatus'.
VERBOSE: Importing function 'Mount-LWIsoImage'.
VERBOSE: Importing function 'New-LWHypervLinuxVm'.
VERBOSE: Importing function 'New-LWHypervVM'.
VERBOSE: Importing function 'Remove-LWHypervVM'.
VERBOSE: Importing function 'Remove-LWHypervVMSnapshot'.
VERBOSE: Importing function 'Repair-LWHypervNetworkConfig'.
VERBOSE: Importing function 'Restore-LWHypervVMSnapshot'.
VERBOSE: Importing function 'Save-LWHypervVM'.
VERBOSE: Importing function 'Set-LWHypervVMDescription'.
VERBOSE: Importing function 'Start-LWHypervVM'.
VERBOSE: Importing function 'Stop-LWHypervVM'.
VERBOSE: Importing function 'Wait-LWHypervVMRestart'.
VERBOSE: Loading module from path 'C:\Program Files\WindowsPowerShell\Modules\AutomatedLabWorker\5.16.0\AutomatedLabWorkerNetwork.psm1'.
VERBOSE: Exporting function 'New-LWHypervNetworkSwitch'.
VERBOSE: Exporting function 'Remove-LWNetworkSwitch'.
VERBOSE: Importing function 'New-LWHypervNetworkSwitch'.
VERBOSE: Importing function 'Remove-LWNetworkSwitch'.
VERBOSE: Loading module from path 'C:\Program Files\WindowsPowerShell\Modules\AutomatedLabWorker\5.16.0\AutomatedLabAzureWorkerNetwork.psm1'.
VERBOSE: Exporting function 'New-LWAzureNetworkSwitch'.
VERBOSE: Exporting function 'Remove-LWAzureNetworkSwitch'.
VERBOSE: Exporting function 'Get-LWAzureNetworkSwitch'.
VERBOSE: Exporting function 'New-LWAzureLoadBalancer'.
VERBOSE: Exporting function 'Remove-LWAzureLoadBalancer'.
VERBOSE: Exporting function 'Set-LWAzureDnsServer'.
VERBOSE: Exporting function 'Add-LWAzureLoadBalancedPort'.
VERBOSE: Exporting function 'Get-LWAzureLoadBalancedPort'.
VERBOSE: Exporting function 'Get-LabAzureLoadBalancedPort'.
VERBOSE: Importing function 'Add-LWAzureLoadBalancedPort'.
VERBOSE: Importing function 'Get-LabAzureLoadBalancedPort'.
VERBOSE: Importing function 'Get-LWAzureLoadBalancedPort'.
VERBOSE: Importing function 'Get-LWAzureNetworkSwitch'.
VERBOSE: Importing function 'New-LWAzureLoadBalancer'.
VERBOSE: Importing function 'New-LWAzureNetworkSwitch'.
VERBOSE: Importing function 'Remove-LWAzureLoadBalancer'.
VERBOSE: Importing function 'Remove-LWAzureNetworkSwitch'.
VERBOSE: Importing function 'Set-LWAzureDnsServer'.
VERBOSE: Loading module from path 'C:\Program Files\WindowsPowerShell\Modules\AutomatedLabWorker\5.16.0\AutomatedLabAzureWorkerVirtualMachines.psm1'.
VERBOSE: Exporting function 'New-LWAzureVM'.
VERBOSE: Exporting function 'Initialize-LWAzureVM'.
VERBOSE: Exporting function 'Remove-LWAzureVM'.
VERBOSE: Exporting function 'Start-LWAzureVM'.
VERBOSE: Exporting function 'Stop-LWAzureVM'.
VERBOSE: Exporting function 'Wait-LWAzureRestartVM'.
VERBOSE: Exporting function 'Get-LWAzureVMStatus'.
VERBOSE: Exporting function 'Get-LWAzureVMConnectionInfo'.
VERBOSE: Exporting function 'Enable-LWAzureVMRemoting'.
VERBOSE: Exporting function 'Enable-LWAzureWinRm'.
VERBOSE: Exporting function 'Connect-LWAzureLabSourcesDrive'.
VERBOSE: Exporting function 'Mount-LWAzureIsoImage'.
VERBOSE: Exporting function 'Dismount-LWAzureIsoImage'.
VERBOSE: Exporting function 'Checkpoint-LWAzureVM'.
VERBOSE: Exporting function 'Restore-LWAzureVmSnapshot'.
VERBOSE: Exporting function 'Remove-LWAzureVmSnapshot'.
VERBOSE: Exporting function 'Get-LWAzureVmSnapshot'.
VERBOSE: Importing function 'Checkpoint-LWAzureVM'.
VERBOSE: Importing function 'Connect-LWAzureLabSourcesDrive'.
VERBOSE: Importing function 'Dismount-LWAzureIsoImage'.
VERBOSE: Importing function 'Enable-LWAzureVMRemoting'.
VERBOSE: Importing function 'Enable-LWAzureWinRm'.
VERBOSE: Importing function 'Get-LWAzureVMConnectionInfo'.
VERBOSE: Importing function 'Get-LWAzureVmSnapshot'.
VERBOSE: Importing function 'Get-LWAzureVMStatus'.
VERBOSE: Importing function 'Initialize-LWAzureVM'.
VERBOSE: Importing function 'Mount-LWAzureIsoImage'.
VERBOSE: Importing function 'New-LWAzureVM'.
VERBOSE: Importing function 'Remove-LWAzureVM'.
VERBOSE: Importing function 'Remove-LWAzureVmSnapshot'.
VERBOSE: Importing function 'Restore-LWAzureVmSnapshot'.
VERBOSE: Importing function 'Start-LWAzureVM'.
VERBOSE: Importing function 'Stop-LWAzureVM'.
VERBOSE: Importing function 'Wait-LWAzureRestartVM'.
VERBOSE: Loading module from path 'C:\Program Files\WindowsPowerShell\Modules\AutomatedLabWorker\5.16.0\AutomatedLabVMWareWorkerVirtualMachines.psm1'.
VERBOSE: Exporting function 'New-LWVMWareVM'.
VERBOSE: Exporting function 'Remove-LWVMWareVM'.
VERBOSE: Exporting function 'Start-LWVMWareVM'.
VERBOSE: Exporting function 'Save-LWVMWareVM'.
VERBOSE: Exporting function 'Stop-LWVMWareVM'.
VERBOSE: Exporting function 'Wait-LWVMWareRestartVM'.
VERBOSE: Exporting function 'Get-LWVMWareVMStatus'.
VERBOSE: Exporting function 'Enable-LWVMWareVMRemoting'.
VERBOSE: Importing function 'Enable-LWVMWareVMRemoting'.
VERBOSE: Importing function 'Get-LWVMWareVMStatus'.
VERBOSE: Importing function 'New-LWVMWareVM'.
VERBOSE: Importing function 'Remove-LWVMWareVM'.
VERBOSE: Importing function 'Save-LWVMWareVM'.
VERBOSE: Importing function 'Start-LWVMWareVM'.
VERBOSE: Importing function 'Stop-LWVMWareVM'.
VERBOSE: Importing function 'Wait-LWVMWareRestartVM'.
VERBOSE: Loading module from path 'C:\Program Files\WindowsPowerShell\Modules\AutomatedLabWorker\5.16.0\AutomatedLabVMWareWorkerNetwork.psm1'.
VERBOSE: Exporting function 'Get-LWVMWareNetworkSwitch'.
VERBOSE: Importing function 'Get-LWVMWareNetworkSwitch'.
VERBOSE: Loading module from path 'C:\Program Files\WindowsPowerShell\Modules\AutomatedLabWorker\5.16.0\AutomatedLabWorker.psm1'.
VERBOSE: Exporting function 'Test-IpInSameSameNetwork'.
VERBOSE: Exporting function 'Install-LWLabCAServers'.
VERBOSE: Exporting function 'Install-LWLabCAServers2008'.
VERBOSE: Exporting function 'Add-LWVMVHDX'.
VERBOSE: Exporting function 'New-LWReferenceVHDX'.
VERBOSE: Exporting function 'New-LWVHDX'.
VERBOSE: Exporting function 'Remove-LWVHDX'.
VERBOSE: Exporting function 'Checkpoint-LWHypervVM'.
VERBOSE: Exporting function 'Dismount-LWIsoImage'.
VERBOSE: Exporting function 'Enable-LWHypervVMRemoting'.
VERBOSE: Exporting function 'Get-LWHypervVMDescription'.
VERBOSE: Exporting function 'Get-LWHypervVMSnapshot'.
VERBOSE: Exporting function 'Get-LWHypervVMStatus'.
VERBOSE: Exporting function 'Mount-LWIsoImage'.
VERBOSE: Exporting function 'New-LWHypervLinuxVm'.
VERBOSE: Exporting function 'New-LWHypervVM'.
VERBOSE: Exporting function 'Remove-LWHypervVM'.
VERBOSE: Exporting function 'Remove-LWHypervVMSnapshot'.
VERBOSE: Exporting function 'Repair-LWHypervNetworkConfig'.
VERBOSE: Exporting function 'Restore-LWHypervVMSnapshot'.
VERBOSE: Exporting function 'Save-LWHypervVM'.
VERBOSE: Exporting function 'Set-LWHypervVMDescription'.
VERBOSE: Exporting function 'Start-LWHypervVM'.
VERBOSE: Exporting function 'Stop-LWHypervVM'.
VERBOSE: Exporting function 'Wait-LWHypervVMRestart'.
VERBOSE: Exporting function 'New-LWHypervNetworkSwitch'.
VERBOSE: Exporting function 'Remove-LWNetworkSwitch'.
VERBOSE: Exporting function 'Add-LWAzureLoadBalancedPort'.
VERBOSE: Exporting function 'Get-LabAzureLoadBalancedPort'.
VERBOSE: Exporting function 'Get-LWAzureLoadBalancedPort'.
VERBOSE: Exporting function 'Get-LWAzureNetworkSwitch'.
VERBOSE: Exporting function 'New-LWAzureLoadBalancer'.
VERBOSE: Exporting function 'New-LWAzureNetworkSwitch'.
VERBOSE: Exporting function 'Remove-LWAzureLoadBalancer'.
VERBOSE: Exporting function 'Remove-LWAzureNetworkSwitch'.
VERBOSE: Exporting function 'Set-LWAzureDnsServer'.
VERBOSE: Exporting function 'Checkpoint-LWAzureVM'.
VERBOSE: Exporting function 'Connect-LWAzureLabSourcesDrive'.
VERBOSE: Exporting function 'Dismount-LWAzureIsoImage'.
VERBOSE: Exporting function 'Enable-LWAzureVMRemoting'.
VERBOSE: Exporting function 'Enable-LWAzureWinRm'.
VERBOSE: Exporting function 'Get-LWAzureVMConnectionInfo'.
VERBOSE: Exporting function 'Get-LWAzureVmSnapshot'.
VERBOSE: Exporting function 'Get-LWAzureVMStatus'.
VERBOSE: Exporting function 'Initialize-LWAzureVM'.
VERBOSE: Exporting function 'Mount-LWAzureIsoImage'.
VERBOSE: Exporting function 'New-LWAzureVM'.
VERBOSE: Exporting function 'Remove-LWAzureVM'.
VERBOSE: Exporting function 'Remove-LWAzureVmSnapshot'.
VERBOSE: Exporting function 'Restore-LWAzureVmSnapshot'.
VERBOSE: Exporting function 'Start-LWAzureVM'.
VERBOSE: Exporting function 'Stop-LWAzureVM'.
VERBOSE: Exporting function 'Wait-LWAzureRestartVM'.
VERBOSE: Exporting function 'Enable-LWVMWareVMRemoting'.
VERBOSE: Exporting function 'Get-LWVMWareVMStatus'.
VERBOSE: Exporting function 'New-LWVMWareVM'.
VERBOSE: Exporting function 'Remove-LWVMWareVM'.
VERBOSE: Exporting function 'Save-LWVMWareVM'.
VERBOSE: Exporting function 'Start-LWVMWareVM'.
VERBOSE: Exporting function 'Stop-LWVMWareVM'.
VERBOSE: Exporting function 'Wait-LWVMWareRestartVM'.
VERBOSE: Exporting function 'Get-LWVMWareNetworkSwitch'.
VERBOSE: Exporting function 'Invoke-LWCommand'.
VERBOSE: Exporting function 'Get-LWHypervWindowsFeature'.
VERBOSE: Exporting function 'Get-LWAzureWindowsFeature'.
VERBOSE: Exporting function 'Install-LWHypervWindowsFeature'.
VERBOSE: Exporting function 'Install-LWAzureWindowsFeature'.
VERBOSE: Exporting function 'Uninstall-LWHypervWindowsFeature'.
VERBOSE: Exporting function 'Uninstall-LWAzureWindowsFeature'.
VERBOSE: Exporting function 'Wait-LWLabJob'.
VERBOSE: Importing function 'Add-LWAzureLoadBalancedPort'.
VERBOSE: Importing function 'Add-LWVMVHDX'.
VERBOSE: Importing function 'Checkpoint-LWAzureVM'.
VERBOSE: Importing function 'Checkpoint-LWHypervVM'.
VERBOSE: Importing function 'Connect-LWAzureLabSourcesDrive'.
VERBOSE: Importing function 'Dismount-LWAzureIsoImage'.
VERBOSE: Importing function 'Dismount-LWIsoImage'.
VERBOSE: Importing function 'Enable-LWAzureVMRemoting'.
VERBOSE: Importing function 'Enable-LWAzureWinRm'.
VERBOSE: Importing function 'Enable-LWHypervVMRemoting'.
VERBOSE: Importing function 'Enable-LWVMWareVMRemoting'.
VERBOSE: Importing function 'Get-LabAzureLoadBalancedPort'.
VERBOSE: Importing function 'Get-LWAzureLoadBalancedPort'.
VERBOSE: Importing function 'Get-LWAzureNetworkSwitch'.
VERBOSE: Importing function 'Get-LWAzureVMConnectionInfo'.
VERBOSE: Importing function 'Get-LWAzureVmSnapshot'.
VERBOSE: Importing function 'Get-LWAzureVMStatus'.
VERBOSE: Importing function 'Get-LWAzureWindowsFeature'.
VERBOSE: Importing function 'Get-LWHypervVMDescription'.
VERBOSE: Importing function 'Get-LWHypervVMSnapshot'.
VERBOSE: Importing function 'Get-LWHypervVMStatus'.
VERBOSE: Importing function 'Get-LWHypervWindowsFeature'.
VERBOSE: Importing function 'Get-LWVMWareNetworkSwitch'.
VERBOSE: Importing function 'Get-LWVMWareVMStatus'.
VERBOSE: Importing function 'Initialize-LWAzureVM'.
VERBOSE: Importing function 'Install-LWAzureWindowsFeature'.
VERBOSE: Importing function 'Install-LWHypervWindowsFeature'.
VERBOSE: Importing function 'Install-LWLabCAServers'.
VERBOSE: Importing function 'Install-LWLabCAServers2008'.
VERBOSE: Importing function 'Invoke-LWCommand'.
VERBOSE: Importing function 'Mount-LWAzureIsoImage'.
VERBOSE: Importing function 'Mount-LWIsoImage'.
VERBOSE: Importing function 'New-LWAzureLoadBalancer'.
VERBOSE: Importing function 'New-LWAzureNetworkSwitch'.
VERBOSE: Importing function 'New-LWAzureVM'.
VERBOSE: Importing function 'New-LWHypervLinuxVm'.
VERBOSE: Importing function 'New-LWHypervNetworkSwitch'.
VERBOSE: Importing function 'New-LWHypervVM'.
VERBOSE: Importing function 'New-LWReferenceVHDX'.
VERBOSE: Importing function 'New-LWVHDX'.
VERBOSE: Importing function 'New-LWVMWareVM'.
VERBOSE: Importing function 'Remove-LWAzureLoadBalancer'.
VERBOSE: Importing function 'Remove-LWAzureNetworkSwitch'.
VERBOSE: Importing function 'Remove-LWAzureVM'.
VERBOSE: Importing function 'Remove-LWAzureVmSnapshot'.
VERBOSE: Importing function 'Remove-LWHypervVM'.
VERBOSE: Importing function 'Remove-LWHypervVMSnapshot'.
VERBOSE: Importing function 'Remove-LWNetworkSwitch'.
VERBOSE: Importing function 'Remove-LWVHDX'.
VERBOSE: Importing function 'Remove-LWVMWareVM'.
VERBOSE: Importing function 'Repair-LWHypervNetworkConfig'.
VERBOSE: Importing function 'Restore-LWAzureVmSnapshot'.
VERBOSE: Importing function 'Restore-LWHypervVMSnapshot'.
VERBOSE: Importing function 'Save-LWHypervVM'.
VERBOSE: Importing function 'Save-LWVMWareVM'.
VERBOSE: Importing function 'Set-LWAzureDnsServer'.
VERBOSE: Importing function 'Set-LWHypervVMDescription'.
VERBOSE: Importing function 'Start-LWAzureVM'.
VERBOSE: Importing function 'Start-LWHypervVM'.
VERBOSE: Importing function 'Start-LWVMWareVM'.
VERBOSE: Importing function 'Stop-LWAzureVM'.
VERBOSE: Importing function 'Stop-LWHypervVM'.
VERBOSE: Importing function 'Stop-LWVMWareVM'.
VERBOSE: Importing function 'Test-IpInSameSameNetwork'.
VERBOSE: Importing function 'Uninstall-LWAzureWindowsFeature'.
VERBOSE: Importing function 'Uninstall-LWHypervWindowsFeature'.
VERBOSE: Importing function 'Wait-LWAzureRestartVM'.
VERBOSE: Importing function 'Wait-LWHypervVMRestart'.
VERBOSE: Importing function 'Wait-LWLabJob'.
VERBOSE: Importing function 'Wait-LWVMWareRestartVM'.
VERBOSE: [09:48:03][AutomatedLab.psm1] Trying to check if user postponed telemetry setting
VERBOSE: [09:48:03][AutomatedLab.psm1] Next check is ''.
VERBOSE: Import-Lab Entering... (Path=C:\ProgramData\AutomatedLab\Labs\NLBIISLab\Lab.xml,ErrorAction=<null>,PassThru=True)
VERBOSE: Clear-Lab Entering... )
VERBOSE: Clear-Lab...leaving...(Time elapsed: 00:00:00:025)
VERBOSE: Test-LabHostRemoting Entering... )
VERBOSE: Test-LabHostRemoting...leaving...(Time elapsed: 00:00:00:246)
VERBOSE: [09:48:04][Write-ScreenInfo] Validating lab definition
VERBOSE: [09:48:04][Write-ScreenInfo] 09:48:04|00:00:00|00:00:00.001| Validating lab definition
09:48:04|00:00:00|00:00:00.001| Validating lab definition
VERBOSE: Get-LabMachineDefinition Entering... )
VERBOSE: Test-LabDefinition Entering... (Path=C:\ProgramData\AutomatedLab\Labs\NLBIISLab\Lab.xml,Quiet=True)
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: [09:48:04][Test-LabDefinition] There are 1 machine XML file referenced in the lab xml file
VERBOSE: [09:48:04][Test-LabDefinition] Starting validation against all xml files
VERBOSE: [09:48:07][Write-ScreenInfo] Could not invoke validator AutomatedLab.UnknownRoleProperties
VERBOSE: [09:48:07][Write-ScreenInfo] 09:48:07|00:00:03|00:00:03.610| - Could not invoke validator AutomatedLab.UnknownRoleProperties
09:48:07|00:00:03|00:00:03.610| - Could not invoke validator AutomatedLab.UnknownRoleProperties
VERBOSE: [09:48:07][Test-LabDefinition] Lab Validation complete, overvall runtime was 00:00:00.6040264
VERBOSE: Test-LabDefinition...leaving...(Time elapsed: 00:00:03:838)
VERBOSE: [09:48:08][Write-ScreenInfo] Success
VERBOSE: [09:48:08][Write-ScreenInfo] 09:48:08|00:00:03|00:00:03.949| - Success
09:48:08|00:00:03|00:00:03.949| - Success
VERBOSE: [09:48:08][Write-ScreenInfo] Lab 'NLBIISLab' hosted on 'HyperV' imported with 4 machines
VERBOSE: [09:48:08][Write-ScreenInfo] 09:48:08|00:00:04|00:00:00.000| Lab 'NLBIISLab' hosted on 'HyperV' imported with 4 machines
09:48:08|00:00:04|00:00:00.000| Lab 'NLBIISLab' hosted on 'HyperV' imported with 4 machines
VERBOSE: Get-LabAzureDefaultLocation Entering... (ErrorAction=<null>)
VERBOSE: Get-LabAzureDefaultLocation Entering... (ErrorAction=<null>)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: Import-Lab...leaving - return value is 'True'...(Time elapsed: 00:00:01:693)
VERBOSE: Get-LabVM Entering... )
VERBOSE: Remove-Lab Entering... (Name=NLBIISLab,Verbose=True,Confirm=<null>,ErrorAction=<null>)
VERBOSE: Import-Lab Entering... (Path=C:\ProgramData\AutomatedLab\Labs\NLBIISLab,NoValidation=True)
VERBOSE: Clear-Lab Entering... )
VERBOSE: Clear-Lab...leaving...(Time elapsed: 00:00:00:009)
VERBOSE: Test-LabHostRemoting Entering... )
VERBOSE: Test-LabHostRemoting...leaving...(Time elapsed: 00:00:00:077)
VERBOSE: [09:48:11][Write-ScreenInfo] Lab 'NLBIISLab' hosted on 'HyperV' imported with 4 machines
VERBOSE: [09:48:11][Write-ScreenInfo] 09:48:11|00:00:06|00:00:02.726| Lab 'NLBIISLab' hosted on 'HyperV' imported with 4 machines
09:48:11|00:00:06|00:00:02.726| Lab 'NLBIISLab' hosted on 'HyperV' imported with 4 machines
VERBOSE: Get-LabAzureDefaultLocation Entering... (ErrorAction=<null>)
VERBOSE: Get-LabAzureDefaultLocation Entering... (ErrorAction=<null>)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: Import-Lab...leaving - return value is 'True'...(Time elapsed: 00:00:00:052)
VERBOSE: Performing the operation "Remove the lab completely" on target "NLBIISLab".
VERBOSE: [09:48:11][Write-ScreenInfo] Removing lab 'NLBIISLab'
VERBOSE: [09:48:11][Write-ScreenInfo] 09:48:11|00:00:07|00:00:00.000| Removing lab 'NLBIISLab'
09:48:11|00:00:07|00:00:00.000| Removing lab 'NLBIISLab'
VERBOSE: [09:48:11][Write-ScreenInfo] Removing lab sessions
VERBOSE: [09:48:11][Write-ScreenInfo] 09:48:11|00:00:07|00:00:00.101| - Removing lab sessions
09:48:11|00:00:07|00:00:00.101| - Removing lab sessions
VERBOSE: Remove-LabPSSession Entering... (All=True)
VERBOSE: Get-LabVM Entering... (All=True,IncludeLinux=True)
VERBOSE: [09:48:11][Remove-LabPSSession] Removed 0 PSSessions...
VERBOSE: Remove-LabPSSession...leaving...(Time elapsed: 00:00:00:072)
VERBOSE: [09:48:11][Remove-Lab] ...done
VERBOSE: [09:48:11][Write-ScreenInfo] Removing lab background jobs
VERBOSE: [09:48:11][Write-ScreenInfo] 09:48:11|00:00:07|00:00:00.202| - Removing lab background jobs
09:48:11|00:00:07|00:00:00.202| - Removing lab background jobs
VERBOSE: [09:48:11][Remove-Lab] Removing remaining 1 jobs...
VERBOSE: [09:48:11][Remove-Lab] ...done
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LWHypervVMDescription Entering... (ComputerName=DC01,ErrorAction=<null>)
VERBOSE: Get-LWHypervVMDescription Entering... (ComputerName=CA01,ErrorAction=<null>)
VERBOSE: Get-LWHypervVMDescription Entering... (ComputerName=IISNODE01,ErrorAction=<null>)
VERBOSE: Get-LWHypervVMDescription Entering... (ComputerName=IISNODE02,ErrorAction=<null>)
VERBOSE: Remove-LabVM Entering... (Name=System.Object[])
VERBOSE: [09:48:11][Write-ScreenInfo] Removing Lab VM 'DC01' (and its associated disks)
VERBOSE: [09:48:11][Write-ScreenInfo] 09:48:11|00:00:07|00:00:00.527| - Removing Lab VM 'DC01' (and its associated disks)
09:48:11|00:00:07|00:00:00.527| - Removing Lab VM 'DC01' (and its associated disks)
VERBOSE: Remove-LWHypervVM Entering... (Name=DC01)
VERBOSE: Remove-LWHypervVM...leaving...(Time elapsed: 00:00:00:022)
VERBOSE: [09:48:11][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:12][Get-HostFile] File loaded with 8 lines
VERBOSE: [09:48:12][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:12][Get-HostFile] File loaded with 8 lines
VERBOSE: [09:48:12][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:12][Get-HostFile] File loaded with 40 lines
VERBOSE: [09:48:12][Write-ScreenInfo] Lab VM 'DC01' has been removed
VERBOSE: [09:48:12][Write-ScreenInfo] 09:48:12|00:00:08|00:00:00.975| - Lab VM 'DC01' has been removed
09:48:12|00:00:08|00:00:00.975| - Lab VM 'DC01' has been removed
VERBOSE: [09:48:12][Write-ScreenInfo] Removing Lab VM 'CA01' (and its associated disks)
VERBOSE: [09:48:12][Write-ScreenInfo] 09:48:12|00:00:08|00:00:01.020| - Removing Lab VM 'CA01' (and its associated disks)
09:48:12|00:00:08|00:00:01.020| - Removing Lab VM 'CA01' (and its associated disks)
VERBOSE: Remove-LWHypervVM Entering... (Name=CA01)
VERBOSE: Remove-LWHypervVM...leaving...(Time elapsed: 00:00:00:015)
VERBOSE: [09:48:12][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:12][Get-HostFile] File loaded with 7 lines
VERBOSE: [09:48:12][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:12][Get-HostFile] File loaded with 7 lines
VERBOSE: [09:48:12][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:12][Get-HostFile] File loaded with 39 lines
VERBOSE: [09:48:12][Write-ScreenInfo] Lab VM 'CA01' has been removed
VERBOSE: [09:48:12][Write-ScreenInfo] 09:48:12|00:00:08|00:00:01.101| - Lab VM 'CA01' has been removed
09:48:12|00:00:08|00:00:01.101| - Lab VM 'CA01' has been removed
VERBOSE: [09:48:12][Write-ScreenInfo] Removing Lab VM 'IISNODE01' (and its associated disks)
VERBOSE: [09:48:12][Write-ScreenInfo] 09:48:12|00:00:08|00:00:01.128| - Removing Lab VM 'IISNODE01' (and its associated disks)
09:48:12|00:00:08|00:00:01.128| - Removing Lab VM 'IISNODE01' (and its associated disks)
VERBOSE: Remove-LWHypervVM Entering... (Name=IISNODE01)
VERBOSE: Remove-LWHypervVM...leaving...(Time elapsed: 00:00:00:014)
VERBOSE: [09:48:12][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:12][Get-HostFile] File loaded with 6 lines
VERBOSE: [09:48:12][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:12][Get-HostFile] File loaded with 6 lines
VERBOSE: [09:48:12][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:12][Get-HostFile] File loaded with 38 lines
VERBOSE: [09:48:12][Write-ScreenInfo] Lab VM 'IISNODE01' has been removed
VERBOSE: [09:48:12][Write-ScreenInfo] 09:48:12|00:00:08|00:00:01.214| - Lab VM 'IISNODE01' has been removed
09:48:12|00:00:08|00:00:01.214| - Lab VM 'IISNODE01' has been removed
VERBOSE: [09:48:12][Write-ScreenInfo] Removing Lab VM 'IISNODE02' (and its associated disks)
VERBOSE: [09:48:12][Write-ScreenInfo] 09:48:12|00:00:08|00:00:01.239| - Removing Lab VM 'IISNODE02' (and its associated disks)
09:48:12|00:00:08|00:00:01.239| - Removing Lab VM 'IISNODE02' (and its associated disks)
VERBOSE: Remove-LWHypervVM Entering... (Name=IISNODE02)
VERBOSE: Remove-LWHypervVM...leaving...(Time elapsed: 00:00:00:014)
VERBOSE: [09:48:12][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:12][Get-HostFile] File loaded with 5 lines
VERBOSE: [09:48:12][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:12][Get-HostFile] File loaded with 5 lines
VERBOSE: [09:48:12][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:12][Get-HostFile] File loaded with 37 lines
VERBOSE: [09:48:12][Write-ScreenInfo] Lab VM 'IISNODE02' has been removed
VERBOSE: [09:48:12][Write-ScreenInfo] 09:48:12|00:00:08|00:00:01.311| - Lab VM 'IISNODE02' has been removed
09:48:12|00:00:08|00:00:01.311| - Lab VM 'IISNODE02' has been removed
VERBOSE: Get-LabVHDX Entering... (All=True)
VERBOSE: [09:48:12][Remove-Lab] Lab knows about 0 disks
VERBOSE: [09:48:12][Write-ScreenInfo] Removing entries in the hosts file
VERBOSE: [09:48:12][Write-ScreenInfo] 09:48:12|00:00:08|00:00:01.344| - Removing entries in the hosts file
09:48:12|00:00:08|00:00:01.344| - Removing entries in the hosts file
VERBOSE: [09:48:12][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:12][Get-HostFile] File loaded with 36 lines
VERBOSE: [09:48:12][Write-ScreenInfo] Removing virtual networks
VERBOSE: [09:48:12][Write-ScreenInfo] 09:48:12|00:00:08|00:00:01.379| - Removing virtual networks
09:48:12|00:00:08|00:00:01.379| - Removing virtual networks
VERBOSE: Remove-LabNetworkSwitches Entering... )
VERBOSE: [09:48:12][Remove-LabNetworkSwitches] Removing Hyper-V network switch 'NLBIISLab'...
VERBOSE: Remove-LWNetworkSwitch Entering... (Name=NLBIISLab)
VERBOSE: [09:48:18][Remove-LWNetworkSwitch] Network switch 'NLBIISLab' removed
VERBOSE: Remove-LWNetworkSwitch...leaving...(Time elapsed: 00:00:05:648)
VERBOSE: [09:48:18][Remove-LabNetworkSwitches] ...done
VERBOSE: [09:48:18][Remove-LabNetworkSwitches] done
VERBOSE: Remove-LabNetworkSwitches...leaving...(Time elapsed: 00:00:05:659)
VERBOSE: [09:48:18][Write-ScreenInfo] Removing Lab XML files
VERBOSE: [09:48:18][Write-ScreenInfo] 09:48:18|00:00:14|00:00:07.098| - Removing Lab XML files
09:48:18|00:00:14|00:00:07.098| - Removing Lab XML files
VERBOSE: [09:48:18][Write-ScreenInfo] Done removing lab 'NLBIISLab'
VERBOSE: [09:48:18][Write-ScreenInfo] 09:48:18|00:00:14|00:00:07.167| - Done removing lab 'NLBIISLab'
09:48:18|00:00:14|00:00:07.167| - Done removing lab 'NLBIISLab'
VERBOSE: Remove-Lab...leaving...(Time elapsed: 00:00:05:752)
VERBOSE: New-LabDefinition Entering... (Name=NLBIISLab,DefaultVirtualizationEngine=HyperV)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = root\cimv2,'className' = Win32_OperatingSystem'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: [09:48:18][Write-ScreenInfo] Initialization
VERBOSE: [09:48:18][Write-ScreenInfo] 09:48:18|00:00:00|00:00:00.000| Initialization
09:48:18|00:00:00|00:00:00.000| Initialization
VERBOSE: [09:48:18][Write-ScreenInfo] Host operating system version: '10.0.18363'
VERBOSE: [09:48:18][Write-ScreenInfo] 09:48:18|00:00:00|00:00:00.013| - Host operating system version: '10.0.18363'
09:48:18|00:00:00|00:00:00.013| - Host operating system version: '10.0.18363'
VERBOSE: [09:48:18][Write-ScreenInfo] Creating new lab definition with name 'NLBIISLab'
VERBOSE: [09:48:18][Write-ScreenInfo] 09:48:18|00:00:00|00:00:00.019| - Creating new lab definition with name 'NLBIISLab'
09:48:18|00:00:00|00:00:00.019| - Creating new lab definition with name 'NLBIISLab'
VERBOSE: [09:48:18][Write-ScreenInfo] Location of lab definition files will be 'C:\ProgramData\AutomatedLab\Labs\NLBIISLab'
VERBOSE: [09:48:18][Write-ScreenInfo] 09:48:18|00:00:00|00:00:00.034| - Location of lab definition files will be 'C:\ProgramData\AutomatedLab\Labs\NLBIISLab'
09:48:18|00:00:00|00:00:00.034| - Location of lab definition files will be 'C:\ProgramData\AutomatedLab\Labs\NLBIISLab'
VERBOSE: [09:48:18][Update-LabSysinternalsTools] Get last check time of SysInternals suite
VERBOSE: [09:48:18][Update-LabSysinternalsTools] Last check was '12/12/2019 16:14:48'.
VERBOSE: Get-LabVirtualNetworkDefinition Entering... )
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: [09:48:18][Write-ScreenInfo] Location of LabSources folder is 'C:\LabSources'
VERBOSE: [09:48:18][Write-ScreenInfo] 09:48:18|00:00:00|00:00:00.171| - Location of LabSources folder is 'C:\LabSources'
09:48:18|00:00:00|00:00:00.171| - Location of LabSources folder is 'C:\LabSources'
VERBOSE: Get-LabIsoImageDefinition Entering... )
VERBOSE: Get-LabIsoImageDefinition...leaving...(Time elapsed: 00:00:00:015)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: [09:48:18][Write-ScreenInfo] Auto-adding ISO files
VERBOSE: [09:48:18][Write-ScreenInfo] 09:48:18|00:00:00|00:00:00.000| - Auto-adding ISO files
09:48:18|00:00:00|00:00:00.000| - Auto-adding ISO files
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: Get-LabAvailableOperatingSystem Entering... (Path=C:\LabSources\ISOs)
VERBOSE: [09:48:18][Get-LabAvailableOperatingSystem] Found 8 ISO files
VERBOSE: [09:48:18][Write-ScreenInfo] found 18 OS images in the cache
VERBOSE: [09:48:18][Write-ScreenInfo] 09:48:18|00:00:00|00:00:00.144|   - found 18 OS images in the cache
09:48:18|00:00:00|00:00:00.144|   - found 18 OS images in the cache
VERBOSE: [09:48:18][Get-LabAvailableOperatingSystem] Cached data is still up to date
VERBOSE: Get-LabAvailableOperatingSystem...leaving - return value is 'Windows Server 2019 Standard Windows Server 2019 Standard (Desktop Experience) Windows Server 2019 Datacenter Windows Server 2019 Datacenter (Desktop Experience) Windows Server 2016 Standard Windows Server 2016 Standard (Desktop Experience) Windows Server 2016 Datacenter Windows Server 2016 Datacenter (Desktop Experience) Windows 10 Enterprise LTSC Windows 10 Enterprise N LTSC Windows Server 2016 Standard Windows Server 2016 Standard (Desktop Experience) Windows Server 2016 Datacenter Windows Server 2016 Datacenter (Desktop Experience) Windows Server 2012 R2 Standard (Server Core Installation) Windows Server 2012 R2 Standard (Server with a GUI) Windows Server 2012 R2 Datacenter (Server Core Installation) Windows Server 2012 R2 Datacenter (Server with a GUI)'...(Time elapsed: 00:00:00:095)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: Add-LabIsoImageDefinition Entering... (Path=C:\LabSources\ISOs)
VERBOSE: [09:48:19][Add-LabIsoImageDefinition] Read 8 ISO images from the cache
VERBOSE: Get-LabAzureLabSourcesStorage Entering... (ErrorAction=<null>)
VERBOSE: Loading module from path 'C:\Program Files\WindowsPowerShell\Modules\Az.Accounts\1.6.4\Microsoft.Azure.PowerShell.Cmdlets.Accounts.dll'.
VERBOSE: Importing cmdlet 'Get-AzProfile'.
VERBOSE: Importing cmdlet 'Register-AzModule'.
VERBOSE: Importing cmdlet 'Select-AzProfile'.
VERBOSE: Importing cmdlet 'Connect-AzAccount'.
VERBOSE: Importing cmdlet 'Disconnect-AzAccount'.
VERBOSE: Importing cmdlet 'Get-AzContext'.
VERBOSE: Importing cmdlet 'Import-AzContext'.
VERBOSE: Importing cmdlet 'Save-AzContext'.
VERBOSE: Importing cmdlet 'Set-AzContext'.
VERBOSE: Importing cmdlet 'Disable-AzDataCollection'.
VERBOSE: Importing cmdlet 'Enable-AzDataCollection'.
VERBOSE: Importing cmdlet 'Add-AzEnvironment'.
VERBOSE: Importing cmdlet 'Get-AzEnvironment'.
VERBOSE: Importing cmdlet 'Remove-AzEnvironment'.
VERBOSE: Importing cmdlet 'Set-AzEnvironment'.
VERBOSE: Importing cmdlet 'Send-Feedback'.
VERBOSE: Importing cmdlet 'Get-AzSubscription'.
VERBOSE: Importing cmdlet 'Get-AzTenant'.
VERBOSE: Importing cmdlet 'Uninstall-AzureRm'.
VERBOSE: Importing cmdlet 'Resolve-AzError'.
VERBOSE: Importing cmdlet 'Clear-AzDefault'.
VERBOSE: Importing cmdlet 'Get-AzDefault'.
VERBOSE: Importing cmdlet 'Set-AzDefault'.
VERBOSE: Importing cmdlet 'Disable-AzureRmAlias'.
VERBOSE: Importing cmdlet 'Enable-AzureRmAlias'.
VERBOSE: Importing cmdlet 'Disable-AzContextAutosave'.
VERBOSE: Importing cmdlet 'Enable-AzContextAutosave'.
VERBOSE: Importing cmdlet 'Get-AzContextAutosaveSetting'.
VERBOSE: Importing cmdlet 'Clear-AzContext'.
VERBOSE: Importing cmdlet 'Remove-AzContext'.
VERBOSE: Importing cmdlet 'Rename-AzContext'.
VERBOSE: Importing cmdlet 'Select-AzContext'.
VERBOSE: Importing alias 'Login-AzAccount'.
VERBOSE: Importing alias 'Login-AzureRmAccount'.
VERBOSE: Importing alias 'Add-AzAccount'.
VERBOSE: Importing alias 'Logout-AzAccount'.
VERBOSE: Importing alias 'Logout-AzureRmAccount'.
VERBOSE: Importing alias 'Remove-AzAccount'.
VERBOSE: Importing alias 'Save-AzProfile'.
VERBOSE: Importing alias 'Select-AzSubscription'.
VERBOSE: Importing alias 'Get-AzureRmDomain'.
VERBOSE: Importing alias 'Get-AzDomain'.
VERBOSE: Importing alias 'Resolve-Error'.
VERBOSE: Loading module from path 'C:\Program Files\WindowsPowerShell\Modules\Az.Storage\1.9.0\Microsoft.Azure.PowerShell.Cmdlets.Storage.Management.dll'.
VERBOSE: Importing cmdlet 'Add-AzRmStorageContainerLegalHold'.
VERBOSE: Importing cmdlet 'Disable-AzStorageBlobDeleteRetentionPolicy'.
VERBOSE: Importing cmdlet 'Enable-AzStorageBlobDeleteRetentionPolicy'.
VERBOSE: Importing cmdlet 'Get-AzStorageBlobServiceProperty'.
VERBOSE: Importing cmdlet 'Get-AzRmStorageContainer'.
VERBOSE: Importing cmdlet 'Get-AzRmStorageContainerImmutabilityPolicy'.
VERBOSE: Importing cmdlet 'Lock-AzRmStorageContainerImmutabilityPolicy'.
VERBOSE: Importing cmdlet 'New-AzRmStorageContainer'.
VERBOSE: Importing cmdlet 'Remove-AzRmStorageContainer'.
VERBOSE: Importing cmdlet 'Remove-AzRmStorageContainerImmutabilityPolicy'.
VERBOSE: Importing cmdlet 'Remove-AzRmStorageContainerLegalHold'.
VERBOSE: Importing cmdlet 'Set-AzRmStorageContainerImmutabilityPolicy'.
VERBOSE: Importing cmdlet 'Update-AzStorageBlobServiceProperty'.
VERBOSE: Importing cmdlet 'Update-AzRmStorageContainer'.
VERBOSE: Importing cmdlet 'Get-AzRmStorageShare'.
VERBOSE: Importing cmdlet 'New-AzRmStorageShare'.
VERBOSE: Importing cmdlet 'Remove-AzRmStorageShare'.
VERBOSE: Importing cmdlet 'Update-AzRmStorageShare'.
VERBOSE: Importing cmdlet 'Add-AzStorageAccountManagementPolicyAction'.
VERBOSE: Importing cmdlet 'Add-AzStorageAccountNetworkRule'.
VERBOSE: Importing cmdlet 'Get-AzStorageAccount'.
VERBOSE: Importing cmdlet 'Get-AzStorageAccountKey'.
VERBOSE: Importing cmdlet 'Get-AzStorageAccountManagementPolicy'.
VERBOSE: Importing cmdlet 'Get-AzStorageAccountNetworkRuleSet'.
VERBOSE: Importing cmdlet 'New-AzStorageAccount'.
VERBOSE: Importing cmdlet 'New-AzStorageAccountKey'.
VERBOSE: Importing cmdlet 'New-AzStorageAccountManagementPolicyFilter'.
VERBOSE: Importing cmdlet 'New-AzStorageAccountManagementPolicyRule'.
VERBOSE: Importing cmdlet 'Remove-AzStorageAccount'.
VERBOSE: Importing cmdlet 'Remove-AzStorageAccountManagementPolicy'.
VERBOSE: Importing cmdlet 'Remove-AzStorageAccountNetworkRule'.
VERBOSE: Importing cmdlet 'Set-AzCurrentStorageAccount'.
VERBOSE: Importing cmdlet 'Set-AzStorageAccount'.
VERBOSE: Importing cmdlet 'Set-AzStorageAccountManagementPolicy'.
VERBOSE: Importing cmdlet 'Update-AzStorageAccountNetworkRuleSet'.
VERBOSE: Importing cmdlet 'Get-AzStorageAccountNameAvailability'.
VERBOSE: Importing cmdlet 'Get-AzStorageUsage'.
VERBOSE: Loading module from path 'C:\Program Files\WindowsPowerShell\Modules\Az.Storage\1.9.0\Microsoft.Azure.PowerShell.Cmdlets.Storage.dll'.
VERBOSE: Importing cmdlet 'Get-AzStorageTableStoredAccessPolicy'.
VERBOSE: Importing cmdlet 'Get-AzStorageTable'.
VERBOSE: Importing cmdlet 'New-AzStorageTableSASToken'.
VERBOSE: Importing cmdlet 'New-AzStorageTableStoredAccessPolicy'.
VERBOSE: Importing cmdlet 'New-AzStorageTable'.
VERBOSE: Importing cmdlet 'Remove-AzStorageTableStoredAccessPolicy'.
VERBOSE: Importing cmdlet 'Remove-AzStorageTable'.
VERBOSE: Importing cmdlet 'Set-AzStorageTableStoredAccessPolicy'.
VERBOSE: Importing cmdlet 'Get-AzStorageQueue'.
VERBOSE: Importing cmdlet 'New-AzStorageQueue'.
VERBOSE: Importing cmdlet 'Remove-AzStorageQueue'.
VERBOSE: Importing cmdlet 'Get-AzStorageQueueStoredAccessPolicy'.
VERBOSE: Importing cmdlet 'New-AzStorageQueueSASToken'.
VERBOSE: Importing cmdlet 'New-AzStorageQueueStoredAccessPolicy'.
VERBOSE: Importing cmdlet 'Remove-AzStorageQueueStoredAccessPolicy'.
VERBOSE: Importing cmdlet 'Set-AzStorageQueueStoredAccessPolicy'.
VERBOSE: Importing cmdlet 'Close-AzStorageFileHandle'.
VERBOSE: Importing cmdlet 'Get-AzStorageFile'.
VERBOSE: Importing cmdlet 'Get-AzStorageFileContent'.
VERBOSE: Importing cmdlet 'Get-AzStorageFileCopyState'.
VERBOSE: Importing cmdlet 'Get-AzStorageFileHandle'.
VERBOSE: Importing cmdlet 'Get-AzStorageShare'.
VERBOSE: Importing cmdlet 'Get-AzStorageShareStoredAccessPolicy'.
VERBOSE: Importing cmdlet 'New-AzStorageDirectory'.
VERBOSE: Importing cmdlet 'New-AzStorageFileSASToken'.
VERBOSE: Importing cmdlet 'New-AzStorageShare'.
VERBOSE: Importing cmdlet 'New-AzStorageShareSASToken'.
VERBOSE: Importing cmdlet 'New-AzStorageShareStoredAccessPolicy'.
VERBOSE: Importing cmdlet 'Remove-AzStorageDirectory'.
VERBOSE: Importing cmdlet 'Remove-AzStorageFile'.
VERBOSE: Importing cmdlet 'Remove-AzStorageShare'.
VERBOSE: Importing cmdlet 'Remove-AzStorageShareStoredAccessPolicy'.
VERBOSE: Importing cmdlet 'Set-AzStorageFileContent'.
VERBOSE: Importing cmdlet 'Set-AzStorageShareQuota'.
VERBOSE: Importing cmdlet 'Set-AzStorageShareStoredAccessPolicy'.
VERBOSE: Importing cmdlet 'Start-AzStorageFileCopy'.
VERBOSE: Importing cmdlet 'Stop-AzStorageFileCopy'.
VERBOSE: Importing cmdlet 'Disable-AzStorageDeleteRetentionPolicy'.
VERBOSE: Importing cmdlet 'Disable-AzStorageStaticWebsite'.
VERBOSE: Importing cmdlet 'Enable-AzStorageDeleteRetentionPolicy'.
VERBOSE: Importing cmdlet 'Enable-AzStorageStaticWebsite'.
VERBOSE: Importing cmdlet 'Get-AzStorageCORSRule'.
VERBOSE: Importing cmdlet 'Get-AzStorageServiceLoggingProperty'.
VERBOSE: Importing cmdlet 'Get-AzStorageServiceMetricsProperty'.
VERBOSE: Importing cmdlet 'Get-AzStorageServiceProperty'.
VERBOSE: Importing cmdlet 'New-AzStorageAccountSASToken'.
VERBOSE: Importing cmdlet 'New-AzStorageContext'.
VERBOSE: Importing cmdlet 'Remove-AzStorageCORSRule'.
VERBOSE: Importing cmdlet 'Set-AzStorageCORSRule'.
VERBOSE: Importing cmdlet 'Set-AzStorageServiceLoggingProperty'.
VERBOSE: Importing cmdlet 'Set-AzStorageServiceMetricsProperty'.
VERBOSE: Importing cmdlet 'Update-AzStorageServiceProperty'.
VERBOSE: Importing cmdlet 'Set-AzStorageContainerAcl'.
VERBOSE: Importing cmdlet 'Remove-AzStorageBlob'.
VERBOSE: Importing cmdlet 'Set-AzStorageBlobContent'.
VERBOSE: Importing cmdlet 'Get-AzStorageBlob'.
VERBOSE: Importing cmdlet 'Get-AzStorageBlobContent'.
VERBOSE: Importing cmdlet 'Get-AzStorageBlobCopyState'.
VERBOSE: Importing cmdlet 'Get-AzStorageContainer'.
VERBOSE: Importing cmdlet 'Get-AzStorageContainerStoredAccessPolicy'.
VERBOSE: Importing cmdlet 'New-AzStorageBlobSASToken'.
VERBOSE: Importing cmdlet 'New-AzStorageContainer'.
VERBOSE: Importing cmdlet 'New-AzStorageContainerSASToken'.
VERBOSE: Importing cmdlet 'New-AzStorageContainerStoredAccessPolicy'.
VERBOSE: Importing cmdlet 'Remove-AzStorageContainer'.
VERBOSE: Importing cmdlet 'Remove-AzStorageContainerStoredAccessPolicy'.
VERBOSE: Importing cmdlet 'Set-AzStorageContainerStoredAccessPolicy'.
VERBOSE: Importing cmdlet 'Start-AzStorageBlobCopy'.
VERBOSE: Importing cmdlet 'Start-AzStorageBlobIncrementalCopy'.
VERBOSE: Importing cmdlet 'Stop-AzStorageBlobCopy'.
VERBOSE: Importing alias 'Disable-AzStorageSoftDelete'.
VERBOSE: Importing alias 'Enable-AzStorageSoftDelete'.
VERBOSE: Importing alias 'Get-AzStorageContainerAcl'.
VERBOSE: Importing alias 'Start-CopyAzureStorageBlob'.
VERBOSE: Importing alias 'Stop-CopyAzureStorageBlob'.
VERBOSE: [09:48:27][Add-LabIsoImageDefinition] The ISO 'C:\LabSources\ISOs\en_windows_server_2019_x64_dvd_4cb967d8.iso' with a size '4843268096' is already in the cache.
VERBOSE: [09:48:27][Add-LabIsoImageDefinition] The ISO 'C:\LabSources\ISOs\en_windows_10_business_edition_version_1809_updated_june_2019_x64_dvd_3e2fb1ea.iso' with a size '4988125184' is already in the cache.
VERBOSE: [09:48:27][Add-LabIsoImageDefinition] The ISO 'C:\LabSources\ISOs\14393.0.160715-1616.RS1_RELEASE_SERVER_VOL_X64FRE_EN-US.ISO' with a size '5129654272' is already in the cache.
VERBOSE: [09:48:27][Add-LabIsoImageDefinition] The ISO 'C:\LabSources\ISOs\en_windows_10_enterprise_ltsc_2019_x64_dvd_5795bb03.iso' with a size '4330432512' is already in the cache.
VERBOSE: [09:48:27][Add-LabIsoImageDefinition] The ISO 'C:\LabSources\ISOs\en_windows_server_2016_updated_feb_2018_x64_dvd_11636692.iso' with a size '6006587392' is already in the cache.
VERBOSE: [09:48:27][Add-LabIsoImageDefinition] The ISO 'C:\LabSources\ISOs\en_sql_server_2016_standard_with_service_pack_2_x64_dvd_12124191.iso' with a size '2970245120' is already in the cache.
VERBOSE: [09:48:27][Add-LabIsoImageDefinition] The ISO 'C:\LabSources\ISOs\en_windows_server_2012_r2_with_update_x64_dvd_6052708.iso' with a size '5397889024' is already in the cache.
VERBOSE: [09:48:27][Add-LabIsoImageDefinition] The ISO 'C:\LabSources\ISOs\ubuntu-19.04-desktop-amd64.iso' with a size '2097152000' is already in the cache.
VERBOSE: [09:48:27][Write-ScreenInfo] Added 'C:\LabSources\ISOs\en_windows_server_2019_x64_dvd_4cb967d8.iso'
VERBOSE: [09:48:27][Write-ScreenInfo] 09:48:27|00:00:09|00:00:08.762|   - Added 'C:\LabSources\ISOs\en_windows_server_2019_x64_dvd_4cb967d8.iso'
09:48:27|00:00:09|00:00:08.762|   - Added 'C:\LabSources\ISOs\en_windows_server_2019_x64_dvd_4cb967d8.iso'
VERBOSE: [09:48:27][Write-ScreenInfo] Added 'C:\LabSources\ISOs\en_windows_10_business_edition_version_1809_updated_june_2019_x64_dvd_3e2fb1ea.iso'
VERBOSE: [09:48:27][Write-ScreenInfo] 09:48:27|00:00:09|00:00:08.784|   - Added 'C:\LabSources\ISOs\en_windows_10_business_edition_version_1809_updated_june_2019_x64_dvd_3e2fb1ea.iso'
09:48:27|00:00:09|00:00:08.784|   - Added 'C:\LabSources\ISOs\en_windows_10_business_edition_version_1809_updated_june_2019_x64_dvd_3e2fb1ea.iso'
VERBOSE: [09:48:27][Write-ScreenInfo] Added 'C:\LabSources\ISOs\14393.0.160715-1616.RS1_RELEASE_SERVER_VOL_X64FRE_EN-US.ISO'
VERBOSE: [09:48:27][Write-ScreenInfo] 09:48:27|00:00:09|00:00:08.793|   - Added 'C:\LabSources\ISOs\14393.0.160715-1616.RS1_RELEASE_SERVER_VOL_X64FRE_EN-US.ISO'
09:48:27|00:00:09|00:00:08.793|   - Added 'C:\LabSources\ISOs\14393.0.160715-1616.RS1_RELEASE_SERVER_VOL_X64FRE_EN-US.ISO'
VERBOSE: [09:48:27][Write-ScreenInfo] Added 'C:\LabSources\ISOs\en_windows_10_enterprise_ltsc_2019_x64_dvd_5795bb03.iso'
VERBOSE: [09:48:27][Write-ScreenInfo] 09:48:27|00:00:09|00:00:08.802|   - Added 'C:\LabSources\ISOs\en_windows_10_enterprise_ltsc_2019_x64_dvd_5795bb03.iso'
09:48:27|00:00:09|00:00:08.802|   - Added 'C:\LabSources\ISOs\en_windows_10_enterprise_ltsc_2019_x64_dvd_5795bb03.iso'
VERBOSE: [09:48:27][Write-ScreenInfo] Added 'C:\LabSources\ISOs\en_windows_server_2016_updated_feb_2018_x64_dvd_11636692.iso'
VERBOSE: [09:48:27][Write-ScreenInfo] 09:48:27|00:00:09|00:00:08.819|   - Added 'C:\LabSources\ISOs\en_windows_server_2016_updated_feb_2018_x64_dvd_11636692.iso'
09:48:27|00:00:09|00:00:08.819|   - Added 'C:\LabSources\ISOs\en_windows_server_2016_updated_feb_2018_x64_dvd_11636692.iso'
VERBOSE: [09:48:27][Write-ScreenInfo] Added 'C:\LabSources\ISOs\en_sql_server_2016_standard_with_service_pack_2_x64_dvd_12124191.iso'
VERBOSE: [09:48:27][Write-ScreenInfo] 09:48:27|00:00:09|00:00:08.833|   - Added 'C:\LabSources\ISOs\en_sql_server_2016_standard_with_service_pack_2_x64_dvd_12124191.iso'
09:48:27|00:00:09|00:00:08.833|   - Added 'C:\LabSources\ISOs\en_sql_server_2016_standard_with_service_pack_2_x64_dvd_12124191.iso'
VERBOSE: [09:48:27][Write-ScreenInfo] Added 'C:\LabSources\ISOs\en_windows_server_2012_r2_with_update_x64_dvd_6052708.iso'
VERBOSE: [09:48:27][Write-ScreenInfo] 09:48:27|00:00:09|00:00:08.846|   - Added 'C:\LabSources\ISOs\en_windows_server_2012_r2_with_update_x64_dvd_6052708.iso'
09:48:27|00:00:09|00:00:08.846|   - Added 'C:\LabSources\ISOs\en_windows_server_2012_r2_with_update_x64_dvd_6052708.iso'
VERBOSE: [09:48:27][Write-ScreenInfo] Added 'C:\LabSources\ISOs\ubuntu-19.04-desktop-amd64.iso'
VERBOSE: [09:48:27][Write-ScreenInfo] 09:48:27|00:00:09|00:00:08.855|   - Added 'C:\LabSources\ISOs\ubuntu-19.04-desktop-amd64.iso'
09:48:27|00:00:09|00:00:08.855|   - Added 'C:\LabSources\ISOs\ubuntu-19.04-desktop-amd64.iso'
VERBOSE: [09:48:27][Add-LabIsoImageDefinition] Final Lab ISO count: 8
VERBOSE: Add-LabIsoImageDefinition...leaving...(Time elapsed: 00:00:08:018)
VERBOSE: [09:48:27][Write-ScreenInfo] Done
VERBOSE: [09:48:27][Write-ScreenInfo] 09:48:27|00:00:09|00:00:08.895|   - Done
09:48:27|00:00:09|00:00:08.895|   - Done
VERBOSE: Get-LabAzureDefaultLocation Entering... (ErrorAction=<null>)
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabAzureDefaultLocation Entering... (ErrorAction=<null>)
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: New-LabDefinition...leaving...(Time elapsed: 00:00:00:060)
VERBOSE: Add-LabVirtualNetworkDefinition Entering... (Name=NLBIISLab,HyperVProperties=System.Collections.Hashtable[](1),AddressSpace=10.0.0.0/16)
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: [09:48:28][Add-LabVirtualNetworkDefinition] Network 'NLBIISLab' added. Lab has 1 network(s) defined
VERBOSE: Add-LabVirtualNetworkDefinition...leaving...(Time elapsed: 00:00:00:118)
VERBOSE: Add-LabDomainDefinition Entering... (Name=contoso.com,AdminUser=Administrator,AdminPassword=P@ssw0rd)
VERBOSE: [09:48:28][Add-LabDomainDefinition] Added domain 'contoso.com'. Lab now has 1 domain(s) defined
VERBOSE: Add-LabDomainDefinition...leaving...(Time elapsed: 00:00:00:019)
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabAzureDefaultLocation Entering... (ErrorAction=<null>)
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Add-LabMachineDefinition Entering... (Name=DC01,Roles=AutomatedLab.Role[](1),IpAddress=10.0.0.1,DomainName=contoso.com,Network=NLBIISLab,Processors=2,Memory=2147483648,OperatingSystem=Windows Server 2016 Standard (Desktop Experience))
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: [09:48:28][Write-ScreenInfo] Adding Hyper-V machine definition 'DC01'        (Roles: RootDC)
VERBOSE: [09:48:28][Write-ScreenInfo] 09:48:28|00:00:09|00:00:00.000| - Adding Hyper-V machine definition 'DC01'        (Roles: RootDC)
09:48:28|00:00:09|00:00:00.000| - Adding Hyper-V machine definition 'DC01'        (Roles: RootDC)
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDomainDefinition Entering... )
VERBOSE: [09:48:28][Add-LabMachineDefinition] Detect if a virtual switch already exists with same name as lab being deployed. If so, use this switch for defining network name and address space.
VERBOSE: Get-LabVirtualNetworkDefinition Entering... )
VERBOSE: [09:48:31][Add-LabMachineDefinition] One or more virtual network(s) has been specified.
VERBOSE: [09:48:31][Add-LabMachineDefinition] Virtual network 'NLBIISLab' specified with address space '10.0.0.0/16'
VERBOSE: [09:48:31][Add-LabMachineDefinition] Address space specified is valid
VERBOSE: Get-LabVirtualNetworkDefinition Entering... (Name=NLBIISLab)
VERBOSE: New-LabNetworkAdapterDefinition Entering... (VirtualSwitch=NLBIISLab,UseDhcp=<null>)
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabVirtualNetworkDefinition Entering... )
VERBOSE: New-LabNetworkAdapterDefinition...leaving...(Time elapsed: 00:00:00:024)
VERBOSE: Get-LabVirtualNetworkDefinition Entering... (Name=NLBIISLab)
VERBOSE: Get-LabMachineDefinition Entering... )
VERBOSE: Get-LabAvailableOperatingSystem Entering... (NoDisplay=True)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: [09:48:31][Get-LabAvailableOperatingSystem] Found 8 ISO files
VERBOSE: [09:48:31][Get-LabAvailableOperatingSystem] Cached data is still up to date
VERBOSE: Get-LabAvailableOperatingSystem...leaving - return value is 'Windows Server 2019 Standard Windows Server 2019 Standard (Desktop Experience) Windows Server 2019 Datacenter Windows Server 2019 Datacenter (Desktop Experience) Windows Server 2016 Standard Windows Server 2016 Standard (Desktop Experience) Windows Server 2016 Datacenter Windows Server 2016 Datacenter (Desktop Experience) Windows 10 Enterprise LTSC Windows 10 Enterprise N LTSC Windows Server 2016 Standard Windows Server 2016 Standard (Desktop Experience) Windows Server 2016 Datacenter Windows Server 2016 Datacenter (Desktop Experience) Windows Server 2012 R2 Standard (Server Core Installation) Windows Server 2012 R2 Standard (Server with a GUI) Windows Server 2012 R2 Datacenter (Server Core Installation) Windows Server 2012 R2 Datacenter (Server with a GUI)'...(Time elapsed: 00:00:00:043)
VERBOSE: [09:48:31][Write-ScreenInfo] The operating system 'Windows Server 2016 Standard (Desktop Experience)' is available multiple times. Choosing the one with the highest version (10.0.14393.1198)
VERBOSE: [09:48:31][Write-ScreenInfo] 09:48:31|00:00:13|00:00:03.535|   - The operating system 'Windows Server 2016 Standard (Desktop Experience)' is available multiple times. Choosing the one with the highest version (10.0.14393.1198)
09:48:31|00:00:13|00:00:03.535|   - The operating system 'Windows Server 2016 Standard (Desktop Experience)' is available multiple times. Choosing the one with the highest version (10.0.14393.1198)
VERBOSE: [09:48:31][Write-ScreenInfo] Done
VERBOSE: [09:48:31][Write-ScreenInfo] 09:48:31|00:00:13|00:00:03.587|   - Done
09:48:31|00:00:13|00:00:03.587|   - Done
VERBOSE: Add-LabMachineDefinition...leaving...(Time elapsed: 00:00:00:115)
VERBOSE: Get-LabAzureDefaultLocation Entering... (ErrorAction=<null>)
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Add-LabMachineDefinition Entering... (Name=CA01,Roles=AutomatedLab.Role[](1),IpAddress=10.0.0.2,DomainName=contoso.com,Network=NLBIISLab,Processors=2,Memory=2147483648,OperatingSystem=Windows Server 2016 Standard (Desktop Experience))
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: [09:48:31][Write-ScreenInfo] Adding Hyper-V machine definition 'CA01'        (Roles: CaRoot)
VERBOSE: [09:48:31][Write-ScreenInfo] 09:48:31|00:00:13|00:00:00.000| - Adding Hyper-V machine definition 'CA01'        (Roles: CaRoot)
09:48:31|00:00:13|00:00:00.000| - Adding Hyper-V machine definition 'CA01'        (Roles: CaRoot)
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDomainDefinition Entering... )
VERBOSE: [09:48:32][Add-LabMachineDefinition] Detect if a virtual switch already exists with same name as lab being deployed. If so, use this switch for defining network name and address space.
VERBOSE: Get-LabVirtualNetworkDefinition Entering... )
VERBOSE: [09:48:32][Add-LabMachineDefinition] One or more virtual network(s) has been specified.
VERBOSE: [09:48:32][Add-LabMachineDefinition] Virtual network 'NLBIISLab' specified with address space '10.0.0.0/16'
VERBOSE: [09:48:32][Add-LabMachineDefinition] Address space specified is valid
VERBOSE: Get-LabVirtualNetworkDefinition Entering... (Name=NLBIISLab)
VERBOSE: New-LabNetworkAdapterDefinition Entering... (VirtualSwitch=NLBIISLab,UseDhcp=<null>)
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabVirtualNetworkDefinition Entering... )
VERBOSE: New-LabNetworkAdapterDefinition...leaving...(Time elapsed: 00:00:00:003)
VERBOSE: Get-LabVirtualNetworkDefinition Entering... (Name=NLBIISLab)
VERBOSE: Get-LabMachineDefinition Entering... )
VERBOSE: Get-LabAvailableOperatingSystem Entering... (NoDisplay=True)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: [09:48:32][Get-LabAvailableOperatingSystem] Found 8 ISO files
VERBOSE: [09:48:32][Get-LabAvailableOperatingSystem] Cached data is still up to date
VERBOSE: Get-LabAvailableOperatingSystem...leaving - return value is 'Windows Server 2019 Standard Windows Server 2019 Standard (Desktop Experience) Windows Server 2019 Datacenter Windows Server 2019 Datacenter (Desktop Experience) Windows Server 2016 Standard Windows Server 2016 Standard (Desktop Experience) Windows Server 2016 Datacenter Windows Server 2016 Datacenter (Desktop Experience) Windows 10 Enterprise LTSC Windows 10 Enterprise N LTSC Windows Server 2016 Standard Windows Server 2016 Standard (Desktop Experience) Windows Server 2016 Datacenter Windows Server 2016 Datacenter (Desktop Experience) Windows Server 2012 R2 Standard (Server Core Installation) Windows Server 2012 R2 Standard (Server with a GUI) Windows Server 2012 R2 Datacenter (Server Core Installation) Windows Server 2012 R2 Datacenter (Server with a GUI)'...(Time elapsed: 00:00:00:029)
VERBOSE: [09:48:32][Write-ScreenInfo] The operating system 'Windows Server 2016 Standard (Desktop Experience)' is available multiple times. Choosing the one with the highest version (10.0.14393.1198)
VERBOSE: [09:48:32][Write-ScreenInfo] 09:48:32|00:00:13|00:00:00.128|   - The operating system 'Windows Server 2016 Standard (Desktop Experience)' is available multiple times. Choosing the one with the highest version (10.0.14393.1198)
09:48:32|00:00:13|00:00:00.128|   - The operating system 'Windows Server 2016 Standard (Desktop Experience)' is available multiple times. Choosing the one with the highest version (10.0.14393.1198)
VERBOSE: [09:48:32][Write-ScreenInfo] Done
VERBOSE: [09:48:32][Write-ScreenInfo] 09:48:32|00:00:13|00:00:00.145|   - Done
09:48:32|00:00:13|00:00:00.145|   - Done
VERBOSE: Add-LabMachineDefinition...leaving...(Time elapsed: 00:00:00:056)
VERBOSE: New-LabNetworkAdapterDefinition Entering... (VirtualSwitch=NLBIISLab,Ipv4Address=AutomatedLab.IPNetwork[](1))
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabVirtualNetworkDefinition Entering... )
VERBOSE: New-LabNetworkAdapterDefinition...leaving...(Time elapsed: 00:00:00:007)
VERBOSE: New-LabNetworkAdapterDefinition Entering... (VirtualSwitch=NLBIISLab,Ipv4Address=AutomatedLab.IPNetwork[](1))
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabVirtualNetworkDefinition Entering... )
VERBOSE: New-LabNetworkAdapterDefinition...leaving...(Time elapsed: 00:00:00:006)
VERBOSE: Get-LabAzureDefaultLocation Entering... (ErrorAction=<null>)
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Add-LabMachineDefinition Entering... (Name=IISNODE01,NetworkAdapter=AutomatedLab.NetworkAdapter[](2),DomainName=contoso.com,Processors=2,Memory=2147483648,OperatingSystem=Windows Server 2016 Standard (Desktop Experience))
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: [09:48:32][Write-ScreenInfo] Adding Hyper-V machine definition 'IISNODE01'
VERBOSE: [09:48:32][Write-ScreenInfo] 09:48:32|00:00:13|00:00:00.001| - Adding Hyper-V machine definition 'IISNODE01'
09:48:32|00:00:13|00:00:00.001| - Adding Hyper-V machine definition 'IISNODE01'
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDomainDefinition Entering... )
VERBOSE: [09:48:32][Add-LabMachineDefinition] Detect if a virtual switch already exists with same name as lab being deployed. If so, use this switch for defining network name and address space.
VERBOSE: Get-LabVirtualNetworkDefinition Entering... )
VERBOSE: [09:48:32][Add-LabMachineDefinition] One or more virtual network(s) has been specified.
VERBOSE: [09:48:32][Add-LabMachineDefinition] Virtual network 'NLBIISLab' specified with address space '10.0.0.0/16'
VERBOSE: [09:48:32][Add-LabMachineDefinition] Address space specified is valid
VERBOSE: Get-LabVirtualNetworkDefinition Entering... (Name=NLBIISLab)
VERBOSE: Get-LabVirtualNetworkDefinition Entering... (Name=NLBIISLab)
VERBOSE: Get-LabMachineDefinition Entering... )
VERBOSE: Get-LabAvailableOperatingSystem Entering... (NoDisplay=True)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: [09:48:32][Get-LabAvailableOperatingSystem] Found 8 ISO files
VERBOSE: [09:48:32][Get-LabAvailableOperatingSystem] Cached data is still up to date
VERBOSE: Get-LabAvailableOperatingSystem...leaving - return value is 'Windows Server 2019 Standard Windows Server 2019 Standard (Desktop Experience) Windows Server 2019 Datacenter Windows Server 2019 Datacenter (Desktop Experience) Windows Server 2016 Standard Windows Server 2016 Standard (Desktop Experience) Windows Server 2016 Datacenter Windows Server 2016 Datacenter (Desktop Experience) Windows 10 Enterprise LTSC Windows 10 Enterprise N LTSC Windows Server 2016 Standard Windows Server 2016 Standard (Desktop Experience) Windows Server 2016 Datacenter Windows Server 2016 Datacenter (Desktop Experience) Windows Server 2012 R2 Standard (Server Core Installation) Windows Server 2012 R2 Standard (Server with a GUI) Windows Server 2012 R2 Datacenter (Server Core Installation) Windows Server 2012 R2 Datacenter (Server with a GUI)'...(Time elapsed: 00:00:00:025)
VERBOSE: [09:48:32][Write-ScreenInfo] The operating system 'Windows Server 2016 Standard (Desktop Experience)' is available multiple times. Choosing the one with the highest version (10.0.14393.1198)
VERBOSE: [09:48:32][Write-ScreenInfo] 09:48:32|00:00:13|00:00:00.109|   - The operating system 'Windows Server 2016 Standard (Desktop Experience)' is available multiple times. Choosing the one with the highest version (10.0.14393.1198)
09:48:32|00:00:13|00:00:00.109|   - The operating system 'Windows Server 2016 Standard (Desktop Experience)' is available multiple times. Choosing the one with the highest version (10.0.14393.1198)
VERBOSE: [09:48:32][Write-ScreenInfo] Done
VERBOSE: [09:48:32][Write-ScreenInfo] 09:48:32|00:00:13|00:00:00.128|   - Done
09:48:32|00:00:13|00:00:00.128|   - Done
VERBOSE: Add-LabMachineDefinition...leaving...(Time elapsed: 00:00:00:056)
VERBOSE: New-LabNetworkAdapterDefinition Entering... (VirtualSwitch=NLBIISLab,Ipv4Address=AutomatedLab.IPNetwork[](1))
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabVirtualNetworkDefinition Entering... )
VERBOSE: New-LabNetworkAdapterDefinition...leaving...(Time elapsed: 00:00:00:003)
VERBOSE: New-LabNetworkAdapterDefinition Entering... (VirtualSwitch=NLBIISLab,Ipv4Address=AutomatedLab.IPNetwork[](1))
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabVirtualNetworkDefinition Entering... )
VERBOSE: New-LabNetworkAdapterDefinition...leaving...(Time elapsed: 00:00:00:008)
VERBOSE: Get-LabAzureDefaultLocation Entering... (ErrorAction=<null>)
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Add-LabMachineDefinition Entering... (Name=IISNODE02,NetworkAdapter=AutomatedLab.NetworkAdapter[](2),DomainName=contoso.com,Processors=2,Memory=2147483648,OperatingSystem=Windows Server 2016 Standard (Desktop Experience))
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: [09:48:32][Write-ScreenInfo] Adding Hyper-V machine definition 'IISNODE02'
VERBOSE: [09:48:32][Write-ScreenInfo] 09:48:32|00:00:13|00:00:00.000| - Adding Hyper-V machine definition 'IISNODE02'
09:48:32|00:00:13|00:00:00.000| - Adding Hyper-V machine definition 'IISNODE02'
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Get-LabDomainDefinition Entering... )
VERBOSE: [09:48:32][Add-LabMachineDefinition] Detect if a virtual switch already exists with same name as lab being deployed. If so, use this switch for defining network name and address space.
VERBOSE: Get-LabVirtualNetworkDefinition Entering... )
VERBOSE: [09:48:32][Add-LabMachineDefinition] One or more virtual network(s) has been specified.
VERBOSE: [09:48:32][Add-LabMachineDefinition] Virtual network 'NLBIISLab' specified with address space '10.0.0.0/16'
VERBOSE: [09:48:32][Add-LabMachineDefinition] Address space specified is valid
VERBOSE: Get-LabVirtualNetworkDefinition Entering... (Name=NLBIISLab)
VERBOSE: Get-LabVirtualNetworkDefinition Entering... (Name=NLBIISLab)
VERBOSE: Get-LabMachineDefinition Entering... )
VERBOSE: Get-LabAvailableOperatingSystem Entering... (NoDisplay=True)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: [09:48:32][Get-LabAvailableOperatingSystem] Found 8 ISO files
VERBOSE: [09:48:32][Get-LabAvailableOperatingSystem] Cached data is still up to date
VERBOSE: Get-LabAvailableOperatingSystem...leaving - return value is 'Windows Server 2019 Standard Windows Server 2019 Standard (Desktop Experience) Windows Server 2019 Datacenter Windows Server 2019 Datacenter (Desktop Experience) Windows Server 2016 Standard Windows Server 2016 Standard (Desktop Experience) Windows Server 2016 Datacenter Windows Server 2016 Datacenter (Desktop Experience) Windows 10 Enterprise LTSC Windows 10 Enterprise N LTSC Windows Server 2016 Standard Windows Server 2016 Standard (Desktop Experience) Windows Server 2016 Datacenter Windows Server 2016 Datacenter (Desktop Experience) Windows Server 2012 R2 Standard (Server Core Installation) Windows Server 2012 R2 Standard (Server with a GUI) Windows Server 2012 R2 Datacenter (Server Core Installation) Windows Server 2012 R2 Datacenter (Server with a GUI)'...(Time elapsed: 00:00:00:039)
VERBOSE: [09:48:32][Write-ScreenInfo] The operating system 'Windows Server 2016 Standard (Desktop Experience)' is available multiple times. Choosing the one with the highest version (10.0.14393.1198)
VERBOSE: [09:48:32][Write-ScreenInfo] 09:48:32|00:00:14|00:00:00.133|   - The operating system 'Windows Server 2016 Standard (Desktop Experience)' is available multiple times. Choosing the one with the highest version (10.0.14393.1198)
09:48:32|00:00:14|00:00:00.133|   - The operating system 'Windows Server 2016 Standard (Desktop Experience)' is available multiple times. Choosing the one with the highest version (10.0.14393.1198)
VERBOSE: [09:48:32][Write-ScreenInfo] Done
VERBOSE: [09:48:32][Write-ScreenInfo] 09:48:32|00:00:14|00:00:00.154|   - Done
09:48:32|00:00:14|00:00:00.154|   - Done
VERBOSE: Add-LabMachineDefinition...leaving...(Time elapsed: 00:00:00:074)
VERBOSE: Install-Lab Entering... )
VERBOSE: Export-LabDefinition Entering... (Force=True,ExportDefaultUnattendedXml=True)
VERBOSE: Get-LabMachineDefinition Entering... )
VERBOSE: Get-LabAvailableOperatingSystem Entering... (NoDisplay=True)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: [09:48:32][Get-LabAvailableOperatingSystem] Found 8 ISO files
VERBOSE: [09:48:32][Get-LabAvailableOperatingSystem] Cached data is still up to date
VERBOSE: Get-LabAvailableOperatingSystem...leaving - return value is 'Windows Server 2019 Standard Windows Server 2019 Standard (Desktop Experience) Windows Server 2019 Datacenter Windows Server 2019 Datacenter (Desktop Experience) Windows Server 2016 Standard Windows Server 2016 Standard (Desktop Experience) Windows Server 2016 Datacenter Windows Server 2016 Datacenter (Desktop Experience) Windows 10 Enterprise LTSC Windows 10 Enterprise N LTSC Windows Server 2016 Standard Windows Server 2016 Standard (Desktop Experience) Windows Server 2016 Datacenter Windows Server 2016 Datacenter (Desktop Experience) Windows Server 2012 R2 Standard (Server Core Installation) Windows Server 2012 R2 Standard (Server with a GUI) Windows Server 2012 R2 Datacenter (Server Core Installation) Windows Server 2012 R2 Datacenter (Server with a GUI)'...(Time elapsed: 00:00:00:032)
VERBOSE: Get-LabVirtualNetworkDefinition Entering... )
VERBOSE: Get-LabMachineDefinition Entering... (Role=RootDC)
VERBOSE: Get-LabMachineDefinition Entering... (Role=Routing)
VERBOSE: Get-LabMachineDefinition Entering... )
VERBOSE: [09:48:32][Export-LabDefinition] Looking for a root DC in the machine's domain 'contoso.com'
VERBOSE: Get-LabMachineDefinition Entering... (Role=RootDC)
VERBOSE: [09:48:32][Export-LabDefinition] RootDC found, using the IP address of 'DC01' for DNS:
VERBOSE: [09:48:32][Export-LabDefinition] Looking for a root DC in the machine's domain 'contoso.com'
VERBOSE: Get-LabMachineDefinition Entering... (Role=RootDC)
VERBOSE: [09:48:32][Export-LabDefinition] RootDC found, using the IP address of 'DC01' for DNS:
VERBOSE: [09:48:32][Export-LabDefinition] Looking for a root DC in the machine's domain 'contoso.com'
VERBOSE: Get-LabMachineDefinition Entering... (Role=RootDC)
VERBOSE: [09:48:32][Export-LabDefinition] RootDC found, using the IP address of 'DC01' for DNS:
VERBOSE: [09:48:32][Export-LabDefinition] Looking for a root DC in the machine's domain 'contoso.com'
VERBOSE: Get-LabMachineDefinition Entering... (Role=RootDC)
VERBOSE: [09:48:32][Export-LabDefinition] RootDC found, using the IP address of 'DC01' for DNS:
VERBOSE: [09:48:32][Export-LabDefinition] Looking for a root DC in the machine's domain 'contoso.com'
VERBOSE: Get-LabMachineDefinition Entering... (Role=RootDC)
VERBOSE: [09:48:32][Export-LabDefinition] RootDC found, using the IP address of 'DC01' for DNS:
VERBOSE: Get-LabMachineDefinition Entering... )
VERBOSE: Get-LabMachineDefinition Entering... )
VERBOSE: Get-LabAvailableOperatingSystem Entering... (NoDisplay=True)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: [09:48:32][Get-LabAvailableOperatingSystem] Found 8 ISO files
VERBOSE: [09:48:32][Get-LabAvailableOperatingSystem] Cached data is still up to date
VERBOSE: Get-LabAvailableOperatingSystem...leaving - return value is 'Windows Server 2019 Standard Windows Server 2019 Standard (Desktop Experience) Windows Server 2019 Datacenter Windows Server 2019 Datacenter (Desktop Experience) Windows Server 2016 Standard Windows Server 2016 Standard (Desktop Experience) Windows Server 2016 Datacenter Windows Server 2016 Datacenter (Desktop Experience) Windows 10 Enterprise LTSC Windows 10 Enterprise N LTSC Windows Server 2016 Standard Windows Server 2016 Standard (Desktop Experience) Windows Server 2016 Datacenter Windows Server 2016 Datacenter (Desktop Experience) Windows Server 2012 R2 Standard (Server Core Installation) Windows Server 2012 R2 Standard (Server with a GUI) Windows Server 2012 R2 Datacenter (Server Core Installation) Windows Server 2012 R2 Datacenter (Server with a GUI)'...(Time elapsed: 00:00:00:033)
VERBOSE: [09:48:32][Export-LabDefinition] Space needed by HyperV base disks:                     28
VERBOSE: [09:48:32][Export-LabDefinition] Space needed by HyperV base disks but already claimed: -28
VERBOSE: [09:48:32][Export-LabDefinition] Space estimated for HyperV data:                       8
VERBOSE: [09:48:33][Write-ScreenInfo] Estimated (additional) local drive space needed for all machines: 8 GB
VERBOSE: [09:48:33][Write-ScreenInfo] 09:48:33|00:00:14|00:00:14.425| Estimated (additional) local drive space needed for all machines: 8 GB
09:48:33|00:00:14|00:00:14.425| Estimated (additional) local drive space needed for all machines: 8 GB
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: [09:48:33][Set-LabLocalVirtualMachineDiskAuto] Read 2 drive infos from the cache
VERBOSE: Importing function 'Clear-StorageDiagnosticInfo'.
VERBOSE: Importing function 'Get-StorageDiagnosticInfoInternal'.
VERBOSE: Importing function 'Get-StorageSubSystem'.
VERBOSE: Importing function 'New-MaskingSet'.
VERBOSE: Importing function 'New-StorageFileServer'.
VERBOSE: Importing function 'New-StoragePool'.
VERBOSE: Importing function 'New-StorageSubsystemVirtualDisk'.
VERBOSE: Importing function 'Start-StorageDiagnosticLog'.
VERBOSE: Importing function 'Stop-StorageDiagnosticLog'.
VERBOSE: Importing alias 'Disable-StorageDiagnosticLog'.
VERBOSE: Importing alias 'Enable-StorageDiagnosticLog'.
VERBOSE: Exporting function 'Get-StorageHealth'.
VERBOSE: Exporting function 'Get-StorageHealthSettingInternal'.
VERBOSE: Exporting function 'Remove-StorageHealthSettingInternal'.
VERBOSE: Exporting function 'Set-StorageHealthSettingInternal'.
VERBOSE: Exporting function 'Clear-StorageDiagnosticInfo'.
VERBOSE: Exporting function 'Get-StorageDiagnosticInfoInternal'.
VERBOSE: Exporting function 'Get-StorageSubSystem'.
VERBOSE: Exporting function 'New-MaskingSet'.
VERBOSE: Exporting function 'New-StorageFileServer'.
VERBOSE: Exporting function 'New-StoragePool'.
VERBOSE: Exporting function 'New-StorageSubsystemVirtualDisk'.
VERBOSE: Exporting function 'Start-StorageDiagnosticLog'.
VERBOSE: Exporting function 'Stop-StorageDiagnosticLog'.
VERBOSE: Exporting function 'CreateErrorRecord'.
VERBOSE: Exporting function 'Get-StorageHistory'.
VERBOSE: Exporting function 'Show-StorageHistory'.
VERBOSE: Exporting function 'Get-PhysicalDisk'.
VERBOSE: Exporting function 'Get-PhysicalExtent'.
VERBOSE: Exporting function 'Get-PhysicalExtentAssociation'.
VERBOSE: Exporting function 'Enable-PhysicalDiskIdentification'.
VERBOSE: Exporting function 'Disable-PhysicalDiskIdentification'.
VERBOSE: Exporting function 'Reset-PhysicalDisk'.
VERBOSE: Exporting function 'Get-StorageFirmwareInformation'.
VERBOSE: Exporting function 'Update-StorageFirmware'.
VERBOSE: Exporting function 'Get-PhysicalDiskStorageNodeView'.
VERBOSE: Exporting function 'Get-DiskStorageNodeView'.
VERBOSE: Exporting function 'Get-StorageEnclosureStorageNodeView'.
VERBOSE: Exporting function 'Get-StorageHealthAction'.
VERBOSE: Exporting function 'Get-StorageFaultDomain'.
VERBOSE: Exporting function 'Get-StorageScaleUnit'.
VERBOSE: Exporting function 'Get-StorageChassis'.
VERBOSE: Exporting function 'Get-StorageRack'.
VERBOSE: Exporting function 'Get-StorageSite'.
VERBOSE: Exporting function 'ValidateFaultDomainsExist'.
VERBOSE: Exporting function 'Add-StorageFaultDomain'.
VERBOSE: Exporting function 'Remove-StorageFaultDomain'.
VERBOSE: Exporting function 'New-Volume'.
VERBOSE: Exporting function 'Get-StorageExtendedStatus'.
VERBOSE: Exporting function 'Get-StorageAdvancedProperty'.
VERBOSE: Exporting function 'Get-StorageHealthReport'.
VERBOSE: Exporting function 'Get-StorageHealthSetting'.
VERBOSE: Exporting function 'Set-StorageHealthSetting'.
VERBOSE: Exporting function 'Remove-StorageHealthSetting'.
VERBOSE: Exporting function 'Debug-StorageSubSystem'.
VERBOSE: Exporting function 'Debug-FileShare'.
VERBOSE: Exporting function 'Debug-Volume'.
VERBOSE: Exporting function 'Enable-StorageMaintenanceMode'.
VERBOSE: Exporting function 'Disable-StorageMaintenanceMode'.
VERBOSE: Exporting function 'Get-StorageDiagnosticInfo'.
VERBOSE: Exporting function 'Remove-StorageHealthIntent'.
VERBOSE: Exporting alias 'Disable-StorageDiagnosticLog'.
VERBOSE: Exporting alias 'Enable-StorageDiagnosticLog'.
VERBOSE: Exporting alias 'Enable-PhysicalDiskIndication'.
VERBOSE: Exporting alias 'Disable-PhysicalDiskIndication'.
VERBOSE: Exporting alias 'Get-PhysicalDiskSNV'.
VERBOSE: Exporting alias 'Get-DiskSNV'.
VERBOSE: Exporting alias 'Get-StorageEnclosureSNV'.
VERBOSE: Operation '' complete.
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = root\cimv2,'className' = Win32_DiskDrive'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: Perform operation 'Query CimInstances' with following parameters, ''queryExpression' = ASSOCIATORS OF {Win32_DiskDrive.DeviceID="\\\\.\\PHYSICALDRIVE0"} WHERE AssocClass=Win32_DiskDriveToDiskPartition,'queryDialect' = WQL,'namespaceName' = root\cimv2'.
VERBOSE: Operation 'Query CimInstances' complete.
VERBOSE: Perform operation 'Query CimInstances' with following parameters, ''queryExpression' = ASSOCIATORS OF {Win32_DiskPartition.DeviceID="Disk #0, Partition #0"} WHERE AssocClass=Win32_LogicalDiskToPartition,'queryDialect' = WQL,'namespaceName' = root\cimv2'.
VERBOSE: Operation 'Query CimInstances' complete.
VERBOSE: Perform operation 'Query CimInstances' with following parameters, ''queryExpression' = ASSOCIATORS OF {Win32_DiskPartition.DeviceID="Disk #0, Partition #1"} WHERE AssocClass=Win32_LogicalDiskToPartition,'queryDialect' = WQL,'namespaceName' = root\cimv2'.
VERBOSE: Operation 'Query CimInstances' complete.
VERBOSE: Perform operation 'Query CimInstances' with following parameters, ''queryExpression' = ASSOCIATORS OF {Win32_DiskPartition.DeviceID="Disk #0, Partition #2"} WHERE AssocClass=Win32_LogicalDiskToPartition,'queryDialect' = WQL,'namespaceName' = root\cimv2'.
VERBOSE: Operation 'Query CimInstances' complete.
VERBOSE: Perform operation 'Query CimInstances' with following parameters, ''queryExpression' = ASSOCIATORS OF {Win32_DiskPartition.DeviceID="Disk #0, Partition #3"} WHERE AssocClass=Win32_LogicalDiskToPartition,'queryDialect' = WQL,'namespaceName' = root\cimv2'.
VERBOSE: Operation 'Query CimInstances' complete.
VERBOSE: Perform operation 'Query CimInstances' with following parameters, ''queryExpression' = ASSOCIATORS OF {Win32_DiskDrive.DeviceID="\\\\.\\PHYSICALDRIVE1"} WHERE AssocClass=Win32_DiskDriveToDiskPartition,'queryDialect' = WQL,'namespaceName' = root\cimv2'.
VERBOSE: Operation 'Query CimInstances' complete.
VERBOSE: Perform operation 'Query CimInstances' with following parameters, ''queryExpression' = ASSOCIATORS OF {Win32_DiskPartition.DeviceID="Disk #1, Partition #0"} WHERE AssocClass=Win32_LogicalDiskToPartition,'queryDialect' = WQL,'namespaceName' = root\cimv2'.
VERBOSE: Operation 'Query CimInstances' complete.
VERBOSE: [09:48:35][Set-LabLocalVirtualMachineDiskAuto] Measuring speed on fixed drives...
VERBOSE: [09:48:35][Set-LabLocalVirtualMachineDiskAuto] (cached) Measurements for drive C: (serial: ) (signature: 0): Read=604 MB/s  Write=1476 MB/s  Total=2080 MB/s
VERBOSE: [09:48:35][Set-LabLocalVirtualMachineDiskAuto] (cached) Measurements for drive E: (serial: ) (signature: 0): Read=15 MB/s  Write=12 MB/s  Total=27 MB/s
VERBOSE: [09:48:35][Set-LabLocalVirtualMachineDiskAuto] Boot drive is drive 'C:'
VERBOSE: [09:48:35][Set-LabLocalVirtualMachineDiskAuto] Selecing drive C for VMs based on speed though this drive is actually the boot drive but is much faster than second fastest drive (E)
VERBOSE: [09:48:35][Set-LabLocalVirtualMachineDiskAuto] Selected system disk, speed of next fastest disk compared to system disk is 1.31%
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: [09:48:35][Write-ScreenInfo] Location of Hyper-V machines will be 'C:\AutomatedLab-VMs'
VERBOSE: [09:48:35][Write-ScreenInfo] 09:48:35|00:00:17|00:00:17.145| Location of Hyper-V machines will be 'C:\AutomatedLab-VMs'
09:48:35|00:00:17|00:00:17.145| Location of Hyper-V machines will be 'C:\AutomatedLab-VMs'
VERBOSE: Export-LabDefinition...leaving...(Time elapsed: 00:00:00:104)
VERBOSE: [09:48:35][Write-ScreenInfo] Done
VERBOSE: [09:48:35][Write-ScreenInfo] 09:48:35|00:00:17|00:00:17.249| Done
09:48:35|00:00:17|00:00:17.249| Done
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Import-Lab Entering... (Path=C:\ProgramData\AutomatedLab\Labs\NLBIISLab\Lab.xml)
VERBOSE: Clear-Lab Entering... )
VERBOSE: Clear-Lab...leaving...(Time elapsed: 00:00:00:005)
VERBOSE: Test-LabHostRemoting Entering... )
VERBOSE: Test-LabHostRemoting...leaving...(Time elapsed: 00:00:00:070)
VERBOSE: [09:48:35][Write-ScreenInfo] Validating lab definition
VERBOSE: [09:48:35][Write-ScreenInfo] 09:48:35|00:00:17|00:00:00.000| Validating lab definition
09:48:35|00:00:17|00:00:00.000| Validating lab definition
VERBOSE: Get-LabMachineDefinition Entering... )
VERBOSE: [09:48:35][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:35][Get-HostFile] File loaded with 30 lines
VERBOSE: [09:48:35][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:35][Get-HostFile] File loaded with 30 lines
VERBOSE: [09:48:35][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:35][Get-HostFile] File loaded with 30 lines
VERBOSE: [09:48:35][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:35][Get-HostFile] File loaded with 30 lines
VERBOSE: Test-LabDefinition Entering... (Path=C:\ProgramData\AutomatedLab\Labs\NLBIISLab\Lab.xml,Quiet=True)
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: [09:48:36][Test-LabDefinition] There are 1 machine XML file referenced in the lab xml file
VERBOSE: [09:48:36][Test-LabDefinition] Starting validation against all xml files
VERBOSE: [09:48:36][Write-ScreenInfo] Could not invoke validator AutomatedLab.UnknownRoleProperties
VERBOSE: [09:48:36][Write-ScreenInfo] 09:48:36|00:00:17|00:00:00.577| - Could not invoke validator AutomatedLab.UnknownRoleProperties
09:48:36|00:00:17|00:00:00.577| - Could not invoke validator AutomatedLab.UnknownRoleProperties
VERBOSE: [09:48:36][Test-LabDefinition] Lab Validation complete, overvall runtime was 00:00:00.5433534
VERBOSE: Test-LabDefinition...leaving...(Time elapsed: 00:00:00:745)
VERBOSE: [09:48:36][Write-ScreenInfo] Success
VERBOSE: [09:48:36][Write-ScreenInfo] 09:48:36|00:00:18|00:00:00.793| - Success
09:48:36|00:00:18|00:00:00.793| - Success
VERBOSE: [09:48:36][Write-ScreenInfo] Lab 'NLBIISLab' hosted on 'HyperV' imported with 4 machines
VERBOSE: [09:48:36][Write-ScreenInfo] 09:48:36|00:00:18|00:00:00.000| Lab 'NLBIISLab' hosted on 'HyperV' imported with 4 machines
09:48:36|00:00:18|00:00:00.000| Lab 'NLBIISLab' hosted on 'HyperV' imported with 4 machines
VERBOSE: Get-LabAzureDefaultLocation Entering... (ErrorAction=<null>)
VERBOSE: Get-LabAzureDefaultLocation Entering... (ErrorAction=<null>)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: Import-Lab...leaving - return value is 'True'...(Time elapsed: 00:00:00:045)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: Unblock-LabSources Entering... )
VERBOSE: [09:48:37][Unblock-LabSources] Imported Cache\Timestamps from regirtry
VERBOSE: [09:48:37][Unblock-LabSources] Last unblock less than 24 hours ago, doing nothing
VERBOSE: Unblock-LabSources...leaving...(Time elapsed: 00:00:00:009)
VERBOSE: Get-LabVM Entering... )
VERBOSE: [09:48:37][Send-ALNotification] Send-ALToastNotification
VERBOSE: Get-LabVM Entering... (All=True,IncludeLinux=True)
VERBOSE: Update-LabMemorySettings Entering... )
VERBOSE: Get-LabVM Entering... (All=True,IncludeLinux=True)
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: Update-LabMemorySettings...leaving...(Time elapsed: 00:00:00:005)
VERBOSE: [09:48:37][Write-ScreenInfo] Creating virtual networks
VERBOSE: [09:48:37][Write-ScreenInfo] 09:48:37|00:00:18|00:00:00.000| Creating virtual networks
09:48:37|00:00:18|00:00:00.000| Creating virtual networks
VERBOSE: New-LabNetworkSwitches Entering... )
VERBOSE: [09:48:37][New-LabNetworkSwitches] Creating network switch ''...
VERBOSE: New-LWHypervNetworkSwitch Entering... (VirtualNetwork=AutomatedLab.VirtualNetwork[](1))
VERBOSE: [09:48:37][Write-ScreenInfo] Creating Hyper-V virtual network 'NLBIISLab'
VERBOSE: [09:48:37][Write-ScreenInfo] 09:48:37|00:00:18|00:00:00.000| - Creating Hyper-V virtual network 'NLBIISLab'
09:48:37|00:00:18|00:00:00.000| - Creating Hyper-V virtual network 'NLBIISLab'
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = root\cimv2,'className' = Win32_NetworkAdapter'.
VERBOSE: Perform operation 'Enumerate Associated CimInstances' with following parameters, ''sourceRole' = ,'sourceInstance' = Win32_NetworkAdapter: [00000030] Hyper-V Virtual Ethernet Adapter (DeviceID = "30"),'associationClassName' = ,'namespaceName' = root/cimv2,'resultClassName' = Win32_NetworkAdapterConfiguration,'resultRole' = '.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: Operation 'Enumerate Associated CimInstances' complete.
VERBOSE: Get-LabMachineDefinition Entering... )
VERBOSE: Get-LabMachineDefinition Entering... )
VERBOSE: Get-LabMachineDefinition Entering... )
VERBOSE: Perform operation 'Invoke CimMethod' with following parameters, ''instance' = Win32_NetworkAdapterConfiguration: [00000030] Hyper-V Virtual Ethernet Adapter (Index = 30),'methodName' = EnableStatic,'namespaceName' = root/cimv2'.
VERBOSE: Operation 'Invoke CimMethod' complete.
VERBOSE: [09:48:41][Write-ScreenInfo] Done
VERBOSE: [09:48:41][Write-ScreenInfo] 09:48:41|00:00:22|00:00:03.782|   - Done
09:48:41|00:00:22|00:00:03.782|   - Done
VERBOSE: New-LWHypervNetworkSwitch...leaving...(Time elapsed: 00:00:00:153)
VERBOSE: [09:48:41][New-LabNetworkSwitches] done
VERBOSE: New-LabNetworkSwitches...leaving...(Time elapsed: 00:00:00:178)
VERBOSE: [09:48:41][Write-ScreenInfo] Done
VERBOSE: [09:48:41][Write-ScreenInfo] 09:48:41|00:00:22|00:00:03.879| - Done
09:48:41|00:00:22|00:00:03.879| - Done
VERBOSE: Get-LabVM Entering... (All=True)
VERBOSE: [09:48:41][Write-ScreenInfo] done
VERBOSE: [09:48:41][Write-ScreenInfo] 09:48:41|00:00:22|00:00:04.364| done
09:48:41|00:00:22|00:00:04.364| done
VERBOSE: [09:48:41][Write-ScreenInfo] Creating base images
VERBOSE: [09:48:41][Write-ScreenInfo] 09:48:41|00:00:22|00:00:00.000| Creating base images
09:48:41|00:00:22|00:00:00.000| Creating base images
VERBOSE: New-LabBaseImages Entering... )
VERBOSE: Get-LabVM Entering... (All=True)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = root\cimv2,'className' = Win32_OperatingSystem'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: [09:48:43][New-LabBaseImages] Host OS version is '10.0.18363' and OS to create disk for is version '10.0.14393.1198'. So, setting partition style to GPT.
VERBOSE: [09:48:43][New-LabBaseImages] The base image C:\AutomatedLab-VMs\BASE_WindowsServer2016Standard(DesktopExperience)_10.0.14393.1198.vhdx already exists
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = root\cimv2,'className' = Win32_OperatingSystem'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: [09:48:43][New-LabBaseImages] Host OS version is '10.0.18363' and OS to create disk for is version '10.0.14393.1198'. So, setting partition style to GPT.
VERBOSE: [09:48:43][New-LabBaseImages] Base disk for operating system 'Windows Server 2016 Standard (Desktop Experience)' already created previously
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = root\cimv2,'className' = Win32_OperatingSystem'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: [09:48:43][New-LabBaseImages] Host OS version is '10.0.18363' and OS to create disk for is version '10.0.14393.1198'. So, setting partition style to GPT.
VERBOSE: [09:48:43][New-LabBaseImages] Base disk for operating system 'Windows Server 2016 Standard (Desktop Experience)' already created previously
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = root\cimv2,'className' = Win32_OperatingSystem'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: [09:48:43][New-LabBaseImages] Host OS version is '10.0.18363' and OS to create disk for is version '10.0.14393.1198'. So, setting partition style to GPT.
VERBOSE: [09:48:43][New-LabBaseImages] Base disk for operating system 'Windows Server 2016 Standard (Desktop Experience)' already created previously
VERBOSE: [09:48:43][Write-ScreenInfo] All base images were created previously
VERBOSE: [09:48:43][Write-ScreenInfo] 09:48:43|00:00:24|00:00:02.174| - All base images were created previously
09:48:43|00:00:24|00:00:02.174| - All base images were created previously
VERBOSE: Start-ShellHWDetectionService Entering... )
VERBOSE: [09:48:43][Start-ShellHWDetectionService] Starting the ShellHWDetection service (Shell Hardware Detection) again.
VERBOSE: Start-ShellHWDetectionService...leaving...(Time elapsed: 00:00:01:286)
VERBOSE: New-LabBaseImages...leaving...(Time elapsed: 00:00:01:291)
VERBOSE: [09:48:44][Write-ScreenInfo] Done
VERBOSE: [09:48:44][Write-ScreenInfo] 09:48:44|00:00:26|00:00:03.481| - Done
09:48:44|00:00:26|00:00:03.481| - Done
VERBOSE: [09:48:44][Write-ScreenInfo] done
VERBOSE: [09:48:44][Write-ScreenInfo] 09:48:44|00:00:26|00:00:07.878| done
09:48:44|00:00:26|00:00:07.878| done
VERBOSE: Get-LabVM Entering... (All=True,IncludeLinux=True)
VERBOSE: [09:48:44][Write-ScreenInfo] Creating Additional Disks
VERBOSE: [09:48:44][Write-ScreenInfo] 09:48:44|00:00:26|00:00:00.000| Creating Additional Disks
09:48:44|00:00:26|00:00:00.000| Creating Additional Disks
VERBOSE: New-LabVHDX Entering... )
VERBOSE: [09:48:44][New-LabVHDX] Stopping the ShellHWDetection service (Shell Hardware Detection) to prevent the OS from responding to the new disks.
VERBOSE: Stop-ShellHWDetectionService Entering... )
VERBOSE: [09:48:44][Stop-ShellHWDetectionService] Stopping the ShellHWDetection service (Shell Hardware Detection) to prevent the OS from responding to the new disks.
VERBOSE: Stop-ShellHWDetectionService...leaving...(Time elapsed: 00:00:01:763)
VERBOSE: [09:48:46][New-LabVHDX] No disks found to create. Either the given name is wrong or there is no disk defined yet
VERBOSE: New-LabVHDX...leaving...(Time elapsed: 00:00:01:768)
VERBOSE: [09:48:46][Write-ScreenInfo] Done
VERBOSE: [09:48:46][Write-ScreenInfo] 09:48:46|00:00:27|00:00:01.794| - Done
09:48:46|00:00:27|00:00:01.794| - Done
VERBOSE: [09:48:46][Write-ScreenInfo] Creating VMs
VERBOSE: [09:48:46][Write-ScreenInfo] 09:48:46|00:00:27|00:00:00.000| Creating VMs
09:48:46|00:00:27|00:00:00.000| Creating VMs
VERBOSE: [09:48:46][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:46][Get-HostFile] File loaded with 30 lines
VERBOSE: [09:48:46][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:46][Get-HostFile] File loaded with 33 lines
VERBOSE: [09:48:46][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:46][Get-HostFile] File loaded with 34 lines
VERBOSE: [09:48:46][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:46][Get-HostFile] File loaded with 35 lines
VERBOSE: [09:48:46][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:46][Get-HostFile] File loaded with 36 lines
VERBOSE: [09:48:46][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:46][Get-HostFile] File loaded with 37 lines
VERBOSE: [09:48:46][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:46][Get-HostFile] File loaded with 38 lines
VERBOSE: [09:48:46][Get-HostFile] Opening file 'C:\WINDOWS\System32\drivers\etc\hosts'
VERBOSE: [09:48:46][Get-HostFile] File loaded with 39 lines
VERBOSE: [09:48:46][Write-ScreenInfo] The hosts file has been added 8 records. Clean them up using 'Remove-Lab' or manually if needed
VERBOSE: [09:48:46][Write-ScreenInfo] 09:48:46|00:00:28|00:00:00.291| - The hosts file has been added 8 records. Clean them up using 'Remove-Lab' or manually if needed
09:48:46|00:00:28|00:00:00.291| - The hosts file has been added 8 records. Clean them up using 'Remove-Lab' or manually if needed
VERBOSE: New-LabVM Entering... (Name=System.Object[],CreateCheckPoints=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=System.Object[],IncludeLinux=True,ErrorAction=Stop)
VERBOSE: [09:48:46][Write-ScreenInfo] Creating HyperV machine 'DC01'
09:48:46|00:00:28|00:00:00.001| - Creating HyperV machine 'DC01'
VERBOSE: [09:48:46][Write-ScreenInfo] 09:48:46|00:00:28|00:00:00.001| - Creating HyperV machine 'DC01'
VERBOSE: New-LWHypervVM Entering... (Machine=DC01,ProgressIndicator=1)
VERBOSE: [09:48:47][New-LWHypervVM] Creating machine with the name 'DC01' in the path ''
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (Role=RootDC, FirstChildDC)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = root\cimv2,'className' = Win32_OperatingSystem'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: [09:48:49][New-LWHypervVM] 	VM Disk path is 'C:\AutomatedLab-VMs\DC01\DC01.vhdx'
VERBOSE: [09:48:49][Write-ScreenInfo] .
.
VERBOSE: [09:48:50][New-LWHypervVM] 	created differencing disk 'C:\AutomatedLab-VMs\DC01\DC01.vhdx' pointing to ''
VERBOSE: [09:48:50][Write-ScreenInfo] .
.
VERBOSE: Set-LWHypervVMDescription Entering... (ComputerName=DC01,Hashtable=System.Collections.Hashtable)
VERBOSE: Set-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:077)
VERBOSE: [09:48:52][New-LWHypervVM] 	Machine '' created
VERBOSE: [09:48:52][Write-ScreenInfo] .
.
VERBOSE: [09:48:53][New-LWHypervVM] 	Disk mounted to drive D:
VERBOSE: [09:48:53][New-LWHypervVM] 	Unattended file copied to VM Disk 'D:\unattend.xml'
VERBOSE: [09:48:53][New-LWHypervVM] Copying AL tools to VHD...
VERBOSE: [09:48:53][New-LWHypervVM] ...done
VERBOSE: [09:48:53][New-LWHypervVM] 	disk image dismounted
VERBOSE: [09:48:53][Write-ScreenInfo] .
.
VERBOSE: [09:48:53][New-LWHypervVM] 	Settings RAM, start and stop actions
VERBOSE: [09:48:53][New-LWHypervVM] 	Settings static memory to 2147483648
VERBOSE: [09:48:54][New-LWHypervVM] Creating snapshot named 'DC01 - post OS Installation'
VERBOSE: [09:48:54][Write-ScreenInfo] .
.
VERBOSE: New-LWHypervVM...leaving...(Time elapsed: 00:00:02:394)
VERBOSE: Start-LabVM Entering... (ComputerName=DC01,NoNewline=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:026)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:032)
VERBOSE: [09:48:54][Start-LabVM] Starting VMs 'DC01'
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMDescription Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:029)
VERBOSE: Start-LWHypervVM...leaving...(Time elapsed: 00:00:00:329)
VERBOSE: Start-LabVM...leaving...(Time elapsed: 00:00:00:340)
VERBOSE: [09:48:54][Write-ScreenInfo] Done
VERBOSE: [09:48:54][Write-ScreenInfo] 09:48:54|00:00:36|00:00:07.901|   - Done
09:48:54|00:00:36|00:00:07.901|   - Done
VERBOSE: [09:48:54][Write-ScreenInfo] Creating HyperV machine 'CA01'
09:48:54|00:00:36|00:00:00.000| - Creating HyperV machine 'CA01'
VERBOSE: [09:48:54][Write-ScreenInfo] 09:48:54|00:00:36|00:00:00.000| - Creating HyperV machine 'CA01'
VERBOSE: New-LWHypervVM Entering... (Machine=CA01,ProgressIndicator=1)
VERBOSE: [09:48:54][New-LWHypervVM] Creating machine with the name 'CA01' in the path ''
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (Role=RootDC, FirstChildDC)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = root\cimv2,'className' = Win32_OperatingSystem'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: [09:48:56][New-LWHypervVM] 	VM Disk path is 'C:\AutomatedLab-VMs\CA01\CA01.vhdx'
VERBOSE: [09:48:56][Write-ScreenInfo] .
.
VERBOSE: [09:48:58][New-LWHypervVM] 	created differencing disk 'C:\AutomatedLab-VMs\CA01\CA01.vhdx' pointing to ''
VERBOSE: [09:48:58][Write-ScreenInfo] .
.
VERBOSE: Set-LWHypervVMDescription Entering... (ComputerName=CA01,Hashtable=System.Collections.Hashtable)
VERBOSE: Set-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:071)
VERBOSE: [09:48:59][New-LWHypervVM] 	Machine '' created
VERBOSE: [09:48:59][Write-ScreenInfo] .
.
VERBOSE: [09:49:00][New-LWHypervVM] 	Disk mounted to drive D:
VERBOSE: [09:49:00][New-LWHypervVM] 	Unattended file copied to VM Disk 'D:\unattend.xml'
VERBOSE: [09:49:00][New-LWHypervVM] Copying AL tools to VHD...
VERBOSE: [09:49:00][New-LWHypervVM] ...done
VERBOSE: [09:49:00][New-LWHypervVM] 	disk image dismounted
VERBOSE: [09:49:00][Write-ScreenInfo] .
.
VERBOSE: [09:49:00][New-LWHypervVM] 	Settings RAM, start and stop actions
VERBOSE: [09:49:00][New-LWHypervVM] 	Settings static memory to 2147483648
VERBOSE: [09:49:01][New-LWHypervVM] Creating snapshot named 'CA01 - post OS Installation'
VERBOSE: [09:49:01][Write-ScreenInfo] .
.
VERBOSE: New-LWHypervVM...leaving...(Time elapsed: 00:00:02:066)
VERBOSE: [09:49:01][Write-ScreenInfo] Done
VERBOSE: [09:49:01][Write-ScreenInfo] 09:49:01|00:00:42|00:00:06.398|   - Done
09:49:01|00:00:42|00:00:06.398|   - Done
VERBOSE: [09:49:01][Write-ScreenInfo] Creating HyperV machine 'IISNODE01'
09:49:01|00:00:42|00:00:00.000| - Creating HyperV machine 'IISNODE01'
VERBOSE: [09:49:01][Write-ScreenInfo] 09:49:01|00:00:42|00:00:00.000| - Creating HyperV machine 'IISNODE01'
VERBOSE: New-LWHypervVM Entering... (Machine=IISNODE01,ProgressIndicator=1)
VERBOSE: [09:49:01][New-LWHypervVM] Creating machine with the name 'IISNODE01' in the path ''
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (Role=RootDC, FirstChildDC)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = root\cimv2,'className' = Win32_OperatingSystem'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: [09:49:03][New-LWHypervVM] 	VM Disk path is 'C:\AutomatedLab-VMs\IISNODE01\IISNODE01.vhdx'
VERBOSE: [09:49:03][Write-ScreenInfo] .
.
VERBOSE: [09:49:04][New-LWHypervVM] 	created differencing disk 'C:\AutomatedLab-VMs\IISNODE01\IISNODE01.vhdx' pointing to ''
VERBOSE: [09:49:04][Write-ScreenInfo] .
.
VERBOSE: Set-LWHypervVMDescription Entering... (ComputerName=IISNODE01,Hashtable=System.Collections.Hashtable)
VERBOSE: Set-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:062)
VERBOSE: [09:49:06][New-LWHypervVM] 	Machine '' created
VERBOSE: [09:49:06][Write-ScreenInfo] .
.
VERBOSE: [09:49:07][New-LWHypervVM] 	Disk mounted to drive D:
VERBOSE: [09:49:07][New-LWHypervVM] 	Unattended file copied to VM Disk 'D:\unattend.xml'
VERBOSE: [09:49:07][New-LWHypervVM] Copying AL tools to VHD...
VERBOSE: [09:49:07][New-LWHypervVM] ...done
VERBOSE: [09:49:07][New-LWHypervVM] 	disk image dismounted
VERBOSE: [09:49:07][Write-ScreenInfo] .
.
VERBOSE: [09:49:07][New-LWHypervVM] 	Settings RAM, start and stop actions
VERBOSE: [09:49:07][New-LWHypervVM] 	Settings static memory to 2147483648
VERBOSE: [09:49:07][New-LWHypervVM] Creating snapshot named 'IISNODE01 - post OS Installation'
VERBOSE: [09:49:07][Write-ScreenInfo] .
.
VERBOSE: New-LWHypervVM...leaving...(Time elapsed: 00:00:01:760)
VERBOSE: [09:49:07][Write-ScreenInfo] Done
VERBOSE: [09:49:07][Write-ScreenInfo] 09:49:07|00:00:49|00:00:06.654|   - Done
09:49:07|00:00:49|00:00:06.654|   - Done
VERBOSE: [09:49:07][Write-ScreenInfo] Creating HyperV machine 'IISNODE02'
09:49:07|00:00:49|00:00:00.000| - Creating HyperV machine 'IISNODE02'
VERBOSE: [09:49:07][Write-ScreenInfo] 09:49:07|00:00:49|00:00:00.000| - Creating HyperV machine 'IISNODE02'
VERBOSE: New-LWHypervVM Entering... (Machine=IISNODE02,ProgressIndicator=1)
VERBOSE: [09:49:07][New-LWHypervVM] Creating machine with the name 'IISNODE02' in the path ''
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (Role=RootDC, FirstChildDC)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = root\cimv2,'className' = Win32_OperatingSystem'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: [09:49:10][New-LWHypervVM] 	VM Disk path is 'C:\AutomatedLab-VMs\IISNODE02\IISNODE02.vhdx'
VERBOSE: [09:49:10][Write-ScreenInfo] .
.
VERBOSE: [09:49:11][New-LWHypervVM] 	created differencing disk 'C:\AutomatedLab-VMs\IISNODE02\IISNODE02.vhdx' pointing to ''
VERBOSE: [09:49:11][Write-ScreenInfo] .
.
VERBOSE: Set-LWHypervVMDescription Entering... (ComputerName=IISNODE02,Hashtable=System.Collections.Hashtable)
VERBOSE: Set-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:060)
VERBOSE: [09:49:13][New-LWHypervVM] 	Machine '' created
VERBOSE: [09:49:13][Write-ScreenInfo] .
.
VERBOSE: [09:49:13][New-LWHypervVM] 	Disk mounted to drive D:
VERBOSE: [09:49:13][New-LWHypervVM] 	Unattended file copied to VM Disk 'D:\unattend.xml'
VERBOSE: [09:49:13][New-LWHypervVM] Copying AL tools to VHD...
VERBOSE: [09:49:13][New-LWHypervVM] ...done
VERBOSE: [09:49:14][New-LWHypervVM] 	disk image dismounted
VERBOSE: [09:49:14][Write-ScreenInfo] .
.
VERBOSE: [09:49:14][New-LWHypervVM] 	Settings RAM, start and stop actions
VERBOSE: [09:49:14][New-LWHypervVM] 	Settings static memory to 2147483648
VERBOSE: [09:49:14][New-LWHypervVM] Creating snapshot named 'IISNODE02 - post OS Installation'
VERBOSE: [09:49:14][Write-ScreenInfo] .
.
VERBOSE: New-LWHypervVM...leaving...(Time elapsed: 00:00:01:694)
VERBOSE: [09:49:14][Write-ScreenInfo] Done
VERBOSE: [09:49:14][Write-ScreenInfo] 09:49:14|00:00:55|00:00:06.452|   - Done
09:49:14|00:00:55|00:00:06.452|   - Done
VERBOSE: [09:49:14][Write-ScreenInfo] Waiting for all machines to finish installing
VERBOSE: [09:49:14][Write-ScreenInfo] 09:49:14|00:00:55|00:00:00.000| - Waiting for all machines to finish installing
09:49:14|00:00:55|00:00:00.000| - Waiting for all machines to finish installing
VERBOSE: [09:49:14][Write-ScreenInfo] Done
VERBOSE: [09:49:14][Write-ScreenInfo] 09:49:14|00:00:55|00:00:00.010|   - Done
09:49:14|00:00:55|00:00:00.010|   - Done
VERBOSE: New-LabVM...leaving...(Time elapsed: 00:00:01:744)
VERBOSE: Export-LabDefinition Entering... (Force=True,ExportDefaultUnattendedXml=True,Silent=True)
VERBOSE: Get-LabMachineDefinition Entering... )
VERBOSE: Get-LabAvailableOperatingSystem Entering... (NoDisplay=True)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: [09:49:14][Get-LabAvailableOperatingSystem] Found 8 ISO files
VERBOSE: [09:49:14][Get-LabAvailableOperatingSystem] Cached data is still up to date
VERBOSE: Get-LabAvailableOperatingSystem...leaving - return value is 'Windows Server 2019 Standard Windows Server 2019 Standard (Desktop Experience) Windows Server 2019 Datacenter Windows Server 2019 Datacenter (Desktop Experience) Windows Server 2016 Standard Windows Server 2016 Standard (Desktop Experience) Windows Server 2016 Datacenter Windows Server 2016 Datacenter (Desktop Experience) Windows 10 Enterprise LTSC Windows 10 Enterprise N LTSC Windows Server 2016 Standard Windows Server 2016 Standard (Desktop Experience) Windows Server 2016 Datacenter Windows Server 2016 Datacenter (Desktop Experience) Windows Server 2012 R2 Standard (Server Core Installation) Windows Server 2012 R2 Standard (Server with a GUI) Windows Server 2012 R2 Datacenter (Server Core Installation) Windows Server 2012 R2 Datacenter (Server with a GUI)'...(Time elapsed: 00:00:00:045)
VERBOSE: Get-LabVirtualNetworkDefinition Entering... )
VERBOSE: Get-LabMachineDefinition Entering... (Role=RootDC)
VERBOSE: Get-LabMachineDefinition Entering... (Role=Routing)
VERBOSE: Get-LabMachineDefinition Entering... )
VERBOSE: Get-LabMachineDefinition Entering... )
VERBOSE: Get-LabMachineDefinition Entering... )
VERBOSE: Get-LabAvailableOperatingSystem Entering... (NoDisplay=True)
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = Root\CIMv2,'className' = Win32_LogicalDisk'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
VERBOSE: [09:49:14][Get-LabAvailableOperatingSystem] Found 8 ISO files
VERBOSE: [09:49:14][Get-LabAvailableOperatingSystem] Cached data is still up to date
VERBOSE: Get-LabAvailableOperatingSystem...leaving - return value is 'Windows Server 2019 Standard Windows Server 2019 Standard (Desktop Experience) Windows Server 2019 Datacenter Windows Server 2019 Datacenter (Desktop Experience) Windows Server 2016 Standard Windows Server 2016 Standard (Desktop Experience) Windows Server 2016 Datacenter Windows Server 2016 Datacenter (Desktop Experience) Windows 10 Enterprise LTSC Windows 10 Enterprise N LTSC Windows Server 2016 Standard Windows Server 2016 Standard (Desktop Experience) Windows Server 2016 Datacenter Windows Server 2016 Datacenter (Desktop Experience) Windows Server 2012 R2 Standard (Server Core Installation) Windows Server 2012 R2 Standard (Server with a GUI) Windows Server 2012 R2 Datacenter (Server Core Installation) Windows Server 2012 R2 Datacenter (Server with a GUI)'...(Time elapsed: 00:00:00:041)
VERBOSE: [09:49:14][Export-LabDefinition] Space needed by HyperV base disks:                     28
VERBOSE: [09:49:14][Export-LabDefinition] Space needed by HyperV base disks but already claimed: -28
VERBOSE: [09:49:14][Export-LabDefinition] Space estimated for HyperV data:                       0
VERBOSE: Get-LabDefinition Entering... )
VERBOSE: [09:49:14][Export-LabDefinition] Calling 'Get-LabFreeDiskSpace' targeting path 'C:\AutomatedLab-VMs'
VERBOSE: [09:49:14][Export-LabDefinition] Free disk space is '86.46GB'
VERBOSE: Export-LabDefinition...leaving...(Time elapsed: 00:00:00:209)
VERBOSE: [09:49:14][Write-ScreenInfo] Done
VERBOSE: [09:49:14][Write-ScreenInfo] 09:49:14|00:00:56|00:00:28.453| - Done
09:49:14|00:00:56|00:00:28.453| - Done
VERBOSE: Get-LabVM Entering... (Role=RootDC)
VERBOSE: [09:49:15][Write-ScreenInfo] Installing Root Domain Controllers
VERBOSE: [09:49:15][Write-ScreenInfo] 09:49:15|00:00:56|00:00:00.000| Installing Root Domain Controllers
09:49:15|00:00:56|00:00:00.000| Installing Root Domain Controllers
VERBOSE: Get-LabVM Entering... (Role=RootDC)
VERBOSE: [09:49:15][Write-ScreenInfo] Machines with RootDC role to be installed: 'DC01'
VERBOSE: [09:49:15][Write-ScreenInfo] 09:49:15|00:00:56|00:00:00.020| - Machines with RootDC role to be installed: 'DC01'
09:49:15|00:00:56|00:00:00.020| - Machines with RootDC role to be installed: 'DC01'
VERBOSE: Install-LabRootDcs Entering... (CreateCheckPoints=<null>)
VERBOSE: Get-LabVM Entering... (Role=RootDC)
VERBOSE: [09:49:15][Write-ScreenInfo] Waiting for machines to start up
09:49:15|00:00:56|00:00:00.115| - Waiting for machines to start up
VERBOSE: [09:49:15][Write-ScreenInfo] 09:49:15|00:00:56|00:00:00.115| - Waiting for machines to start up
VERBOSE: Start-LabVM Entering... (RoleName=RootDC,Wait=True,DoNotUseCredSsp=True,ProgressIndicator=10,PostDelaySeconds=5)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:033)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:038)
VERBOSE: [09:49:15][Start-LabVM] Starting VMs ''
VERBOSE: Wait-LabVM Entering... (ComputerName=DC01,TimeoutInMinutes=60,DoNotUseCredSsp=True,ProgressIndicator=10,NoNewLine=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Remove-LabPSSession Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:49:15][Remove-LabPSSession] Removed 0 PSSessions...
VERBOSE: Remove-LabPSSession...leaving...(Time elapsed: 00:00:00:018)
VERBOSE: Get-LWHypervVMDescription Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:026)
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,UseLocalCredential=True,Retries=1,DoNotUseCredSsp=True,ErrorAction=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:49:15][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:49:15][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:49:15][New-LabPSSession] Testing port 5985 on computer 'DC01'
VERBOSE: Connection Timeout
VERBOSE: [09:49:18][New-LabPSSession] Port was NOT open, cannot create session.
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: '...(Time elapsed: 00:00:07:672)
VERBOSE: [09:49:23][Wait-LabVM] Computer '' was not reachable, waiting...
VERBOSE: [09:49:23][Wait-LabVM] Waiting for 1 machines to respond in timeout (60 minute(s))
VERBOSE: Wait-LWLabJob Entering... (Job=System.Management.Automation.Job[](1),ProgressIndicator=10,NoNewLine=True,NoDisplay=True,Timeout=60)
VERBOSE: [09:49:23][Write-ScreenInfo] .
.
VERBOSE: [09:49:33][Write-ScreenInfo] .
.
VERBOSE: [09:49:43][Write-ScreenInfo] .
.
VERBOSE: [09:49:53][Write-ScreenInfo] .
.
VERBOSE: Wait-LWLabJob...leaving...(Time elapsed: 00:00:36:168)
VERBOSE: [09:49:59][Wait-LabVM] The following machines are ready: DC01
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMDescription Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:047)
VERBOSE: Set-LWHypervVMDescription Entering... (Hashtable=System.Collections.Hashtable,ComputerName=DC01)
VERBOSE: Set-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:278)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ScriptBlock=

                        if ($PSVersionTable.PSVersion.Major -eq 2)
                        {
                            $d = "{0:HH:mm}" -f (Get-Date).AddMinutes(1)
                            $jobName = "AL_EnableCredSsp"
                            $Path = 'PowerShell'
                            $CommandLine = '-Command Enable-WSManCredSSP -Role Server -Force
VERBOSE: [09:50:00][Invoke-LabCommand] Executing lab command activity '<unnamed>' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:040)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:048)
VERBOSE: [09:50:00][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:50:00][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:50:00][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:50:00][New-LabPSSession] Testing port 5985 on computer 'DC01'
VERBOSE: [09:50:01][New-LabPSSession] Port was open, trying to create the session
VERBOSE: [09:50:01][New-LabPSSession] Session to computer 'DC01' created
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 1'...(Time elapsed: 00:00:00:009)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=

                        if ($PSVersionTable.PSVersion.Major -eq 2)
                        {
                            $d = "{0:HH:mm}" -f (Get-Date).AddMinutes(1)
                            $jobName = "AL_EnableCredSsp"
                            $Path = 'PowerShell'
                            $CommandLine = '-Command Enable-WSManCredSSP -Role Server -Force
VERBOSE: [09:50:01][Invoke-LWCommand] Starting Activity '<unnamed>'
VERBOSE: [09:50:02][Invoke-LWCommand] Finished Installation Activity '<unnamed>'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:731)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:740)
VERBOSE: Set-LWHypervVMDescription Entering... (Hashtable=System.Collections.Hashtable,ComputerName=DC01)
VERBOSE: Set-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:066)
VERBOSE: Wait-LabVM...leaving...(Time elapsed: 00:00:00:081)
VERBOSE: [09:50:02][Write-ScreenInfo] .
.
VERBOSE: Start-LabVM...leaving...(Time elapsed: 00:00:00:111)
VERBOSE: Test-LabADReady Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=GetAdwsServiceStatus,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,DoNotUseCredSsp=True,PassThru=True,NoDisplay=True,ErrorAction=<null>)
VERBOSE: [09:50:02][Invoke-LabCommand] Executing lab command activity 'GetAdwsServiceStatus' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:023)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:029)
VERBOSE: [09:50:02][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:50:03][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:50:03][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:50:03][New-LabPSSession] Session DC01_2f534a9c-9eba-4c33-8af0-5fdaa540c26d is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 1'...(Time elapsed: 00:00:00:068)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=GetAdwsServiceStatus)
VERBOSE: [09:50:03][Invoke-LWCommand] Starting Activity 'GetAdwsServiceStatus'
Cannot find any service with service name 'ADWS'.
    + CategoryInfo          : ObjectNotFound: (ADWS:String) [Get-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.GetServiceCommand
    + PSComputerName        : DC01
Cannot find any service with service name 'ADWS'.
    + CategoryInfo          : ObjectNotFound: (ADWS:String) [Get-Service], ServiceCommandException
    + FullyQualifiedErrorId : NoServiceFoundForGivenName,Microsoft.PowerShell.Commands.GetServiceCommand
    + PSComputerName        : DC01

VERBOSE: [09:50:03][Invoke-LWCommand] Finished Installation Activity 'GetAdwsServiceStatus'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:486)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:514)
VERBOSE: Test-LabADReady...leaving...(Time elapsed: 00:00:00:519)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=Create folder 'C:\DeployDebug' for debug info,NoDisplay=True,ScriptBlock=
            New-Item -ItemType Directory -Path 'c:\DeployDebug' -ErrorAction SilentlyContinue | Out-Null

            $acl = Get-Acl -Path C:\DeployDebug
            $rule = New-Object System.Security.AccessControl.FileSystemAccessRule('Everyone', 'Read', 'ObjectInherit', 'None', 'Allow')
            $acl.AddAccessRule($rule)
            Set-Acl -Path C:\DeployDebug -AclObject $acl
        ,DoNotUseCredSsp=True)
VERBOSE: [09:50:03][Invoke-LabCommand] Executing lab command activity 'Create folder 'C:\DeployDebug' for debug info' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:030)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:042)
VERBOSE: [09:50:03][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:50:03][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:50:03][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:50:03][New-LabPSSession] Session DC01_2f534a9c-9eba-4c33-8af0-5fdaa540c26d is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 1'...(Time elapsed: 00:00:00:022)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=<null>,ScriptBlock=
            New-Item -ItemType Directory -Path 'c:\DeployDebug' -ErrorAction SilentlyContinue | Out-Null

            $acl = Get-Acl -Path C:\DeployDebug
            $rule = New-Object System.Security.AccessControl.FileSystemAccessRule('Everyone', 'Read', 'ObjectInherit', 'None', 'Allow')
            $acl.AddAccessRule($rule)
            Set-Acl -Path C:\DeployDebug -AclObject $acl
        ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=Create folder 'C:\DeployDebug' for debug info)
VERBOSE: [09:50:03][Invoke-LWCommand] Starting Activity 'Create folder 'C:\DeployDebug' for debug info'
VERBOSE: [09:50:04][Invoke-LWCommand] The Output of the task on machine 'DC01' will be available in the variable 'AL_67249a50-702f-41b3-82ce-5a1558ac71ac'
VERBOSE: [09:50:04][Invoke-LWCommand] Finished Installation Activity 'Create folder 'C:\DeployDebug' for debug info'
VERBOSE: Invoke-LWCommand...leaving - return value is 'System.Management.Automation.PSVariable'...(Time elapsed: 00:00:00:166)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:177)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=Install Root DC (DC01),AsJob=True,UseLocalCredential=True,DoNotUseCredSsp=True,PassThru=True,NoDisplay=True,ScriptBlock=
    param (
        [string]$DomainName,
        [string]$Password,
        [string]$ForestFunctionalLevel,
        [string]$DomainFunctionalLevel,
        [string]$NetBiosDomainName,
        [string]$DatabasePath,
        [string]$LogPath,
        [string]$SysvolPath,
        [string]$DsrmPassword
    )

    $VerbosePreference = $using:VerbosePreference

    Start-Transcript -Path C:\DeployDebug\ALDCPromo.log

    ([WMIClass]'Win32_NetworkAdapterConfiguration').SetDNSSuffixSearchOrder($DomainName) | Out-Null

    Write-Verbose -Message "Starting installation of Root Domain Controller on '$(HOSTNAME.EXE)'"

    Write-Verbose -Message 'Installing AD-Domain-Services windows feature'
    $result = Install-WindowsFeature AD-Domain-Services, DNS -IncludeManagementTools
    if (-not $result.Success)
    {
        throw 'Could not install AD-Domain-Services windows feature'
    }
    else
    {
        Write-Verbose -Message 'AD-Domain-Services windows feature installed successfully'
    }

    $safeDsrmPassword = ConvertTo-SecureString -String $DsrmPassword -AsPlainText -Force

    Write-Verbose -Message "Creating a new forest named '$DomainName' on the machine '$(HOSTNAME.EXE)'"
    $result = Install-ADDSForest -DomainName $DomainName `
    -SafeModeAdministratorPassword $safeDsrmPassword `
    -InstallDNS `
    -DomainMode $DomainFunctionalLevel `
    -Force `
    -ForestMode $ForestFunctionalLevel `
    -DomainNetbiosName $NetBiosDomainName `
    -SysvolPath $SysvolPath `
    -DatabasePath $DatabasePath `
    -LogPath $LogPath

    if ($result.Status -eq 'Error')
    {
        throw 'Could not install new domain'
    }
    else
    {
        Write-Verbose -Message 'AD-Domain-Services windows feature installed successfully'
    }

    Set-ItemProperty -Path Microsoft.PowerShell.Core\Registry::HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\NTDS\Parameters -Name 'Repl Perform Initial Synchronizations' -Value 0 -Type DWord

    Write-Verbose -Message 'finished installing the Root Domain Controller'
,ArgumentList=System.Object[])
VERBOSE: [09:50:04][Invoke-LabCommand] Executing lab command activity 'Install Root DC (DC01)' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:029)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:037)
VERBOSE: [09:50:04][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=True,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:50:04][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:50:04][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:50:04][New-LabPSSession] Session DC01_2f534a9c-9eba-4c33-8af0-5fdaa540c26d is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 1'...(Time elapsed: 00:00:00:014)
VERBOSE: Invoke-LWCommand Entering... (PassThru=True,AsJob=True,Verbose=True,ComputerName=DC01,Retries=3,ArgumentList=System.Object[],ScriptBlock=
    param (
        [string]$DomainName,
        [string]$Password,
        [string]$ForestFunctionalLevel,
        [string]$DomainFunctionalLevel,
        [string]$NetBiosDomainName,
        [string]$DatabasePath,
        [string]$LogPath,
        [string]$SysvolPath,
        [string]$DsrmPassword
    )

    $VerbosePreference = $using:VerbosePreference

    Start-Transcript -Path C:\DeployDebug\ALDCPromo.log

    ([WMIClass]'Win32_NetworkAdapterConfiguration').SetDNSSuffixSearchOrder($DomainName) | Out-Null

    Write-Verbose -Message "Starting installation of Root Domain Controller on '$(HOSTNAME.EXE)'"

    Write-Verbose -Message 'Installing AD-Domain-Services windows feature'
    $result = Install-WindowsFeature AD-Domain-Services, DNS -IncludeManagementTools
    if (-not $result.Success)
    {
        throw 'Could not install AD-Domain-Services windows feature'
    }
    else
    {
        Write-Verbose -Message 'AD-Domain-Services windows feature installed successfully'
    }

    $safeDsrmPassword = ConvertTo-SecureString -String $DsrmPassword -AsPlainText -Force

    Write-Verbose -Message "Creating a new forest named '$DomainName' on the machine '$(HOSTNAME.EXE)'"
    $result = Install-ADDSForest -DomainName $DomainName `
    -SafeModeAdministratorPassword $safeDsrmPassword `
    -InstallDNS `
    -DomainMode $DomainFunctionalLevel `
    -Force `
    -ForestMode $ForestFunctionalLevel `
    -DomainNetbiosName $NetBiosDomainName `
    -SysvolPath $SysvolPath `
    -DatabasePath $DatabasePath `
    -LogPath $LogPath

    if ($result.Status -eq 'Error')
    {
        throw 'Could not install new domain'
    }
    else
    {
        Write-Verbose -Message 'AD-Domain-Services windows feature installed successfully'
    }

    Set-ItemProperty -Path Microsoft.PowerShell.Core\Registry::HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\NTDS\Parameters -Name 'Repl Perform Initial Synchronizations' -Value 0 -Type DWord

    Write-Verbose -Message 'finished installing the Root Domain Controller'
,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=Install Root DC (DC01))
VERBOSE: [09:50:04][Invoke-LWCommand] Starting Activity 'Install Root DC (DC01)'
VERBOSE: [09:50:04][Invoke-LWCommand] Finished Installation Activity 'Install Root DC (DC01)'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:027)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:040)
VERBOSE: [09:50:04][Write-ScreenInfo] Waiting for Root Domain Controllers to complete installation of Active Directory and restart
09:50:04|00:01:45|00:00:49.371| - Waiting for Root Domain Controllers to complete installation of Active Directory and restart
VERBOSE: [09:50:04][Write-ScreenInfo] 09:50:04|00:01:45|00:00:49.371| - Waiting for Root Domain Controllers to complete installation of Active Directory and restart
VERBOSE: Get-LabVM Entering... (Role=FirstChildDC, DC)
VERBOSE: Get-LabVM Entering... (Role=Routing)
VERBOSE: Get-LabVM Entering... )
VERBOSE: Wait-LabVMRestart Entering... (ComputerName=DC01,StartMachinesWhileWaiting=<null>,DoNotUseCredSsp=True,ProgressIndicator=30,TimeoutInMinutes=60,ErrorAction=Stop,MonitorJob=System.Object[](1),NoNewLine=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Wait-LWHypervVMRestart Entering... (ComputerName=DC01,TimeoutInMinutes=60,ProgressIndicator=30,NoNewLine=True,StartMachinesWhileWaiting=<null>,ErrorAction=<null>,ErrorVariable=hypervWaitError,MonitorJob=System.Management.Automation.Job[](1))
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: [09:50:37][Write-ScreenInfo] .
.
VERBOSE: [09:51:09][Write-ScreenInfo] .
.
VERBOSE: [09:51:42][Write-ScreenInfo] .
.
VERBOSE: [09:52:14][Write-ScreenInfo] .
.
VERBOSE: [09:52:46][Write-ScreenInfo] .
.
VERBOSE: [09:53:19][Write-ScreenInfo] .
.
VERBOSE: [09:53:41][Wait-LWHypervVMRestart] Machine 'DC01' is now stopped
VERBOSE: [09:53:43][Wait-LWHypervVMRestart] All machines have stopped: (DC01)
VERBOSE: Wait-LabVM Entering... (ComputerName=DC01,ProgressIndicator=30,TimeoutInMinutes=56.354251575,NoNewLine=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Remove-LabPSSession Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:53:49][Remove-LabPSSession] Removed 1 PSSessions...
VERBOSE: Remove-LabPSSession...leaving...(Time elapsed: 00:00:06:029)
VERBOSE: Get-LWHypervVMDescription Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:030)
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,UseLocalCredential=True,Retries=1,DoNotUseCredSsp=<null>,ErrorAction=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:53:49][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:53:49][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: [09:53:49][New-LabPSSession] Testing port 5985 on computer 'DC01'
VERBOSE: Connection Timeout
VERBOSE: [09:53:52][New-LabPSSession] Port was NOT open, cannot create session.
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: '...(Time elapsed: 00:00:07:568)
VERBOSE: [09:53:57][Wait-LabVM] Computer '' was not reachable, waiting...
VERBOSE: [09:53:57][Wait-LabVM] Waiting for 1 machines to respond in timeout (56.354251575 minute(s))
VERBOSE: Wait-LWLabJob Entering... (Job=System.Management.Automation.Job[](1),ProgressIndicator=30,NoNewLine=True,NoDisplay=True,Timeout=56)
VERBOSE: [09:53:57][Write-ScreenInfo] .
.
VERBOSE: Wait-LWLabJob...leaving...(Time elapsed: 00:00:23:045)
VERBOSE: [09:54:20][Wait-LabVM] The following machines are ready: DC01
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMDescription Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:031)
VERBOSE: Wait-LabVM...leaving...(Time elapsed: 00:00:00:035)
VERBOSE: Wait-LWHypervVMRestart...leaving...(Time elapsed: 00:00:00:039)
VERBOSE: Wait-LabVMRestart...leaving...(Time elapsed: 00:00:00:056)
VERBOSE: [09:54:20][Write-ScreenInfo] done
done
VERBOSE: [09:54:20][Write-ScreenInfo] Root Domain Controllers have now restarted. Waiting for Active Directory to start up
09:54:20|00:06:02|00:05:05.641| - Root Domain Controllers have now restarted. Waiting for Active Directory to start up
VERBOSE: [09:54:20][Write-ScreenInfo] 09:54:20|00:06:02|00:05:05.641| - Root Domain Controllers have now restarted. Waiting for Active Directory to start up
VERBOSE: Wait-LabVM Entering... (ComputerName=DC01,DoNotUseCredSsp=True,TimeoutInMinutes=30,ProgressIndicator=30,NoNewLine=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Remove-LabPSSession Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:54:20][Remove-LabPSSession] Removed 0 PSSessions...
VERBOSE: Remove-LabPSSession...leaving...(Time elapsed: 00:00:00:016)
VERBOSE: Get-LWHypervVMDescription Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:021)
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,UseLocalCredential=True,Retries=1,DoNotUseCredSsp=True,ErrorAction=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:54:20][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:54:20][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:54:20][New-LabPSSession] Testing port 5985 on computer 'DC01'
VERBOSE: [09:54:21][New-LabPSSession] Port was open, trying to create the session
VERBOSE: [09:54:21][New-LabPSSession] Session to computer 'DC01' created
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 2'...(Time elapsed: 00:00:00:003)
VERBOSE: [09:54:21][Wait-LabVM] Computer 'DC01' was reachable
VERBOSE: [09:54:21][Wait-LabVM] Waiting for 1 machines to respond in timeout (30 minute(s))
VERBOSE: Wait-LWLabJob Entering... (Job=System.Management.Automation.Job[](1),ProgressIndicator=30,NoNewLine=True,NoDisplay=True,Timeout=30)
VERBOSE: [09:54:21][Write-ScreenInfo] .
.
VERBOSE: Wait-LWLabJob...leaving...(Time elapsed: 00:00:01:022)
VERBOSE: [09:54:22][Wait-LabVM] The following machines are ready: DC01
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMDescription Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:022)
VERBOSE: Wait-LabVM...leaving...(Time elapsed: 00:00:00:026)
VERBOSE: Wait-LabADReady Entering... (ComputerName=DC01,TimeoutInMinutes=20,ErrorAction=Stop,ProgressIndicator=30,NoNewLine=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Test-LabADReady Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=GetAdwsServiceStatus,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,DoNotUseCredSsp=True,PassThru=True,NoDisplay=True,ErrorAction=<null>)
VERBOSE: [09:54:22][Invoke-LabCommand] Executing lab command activity 'GetAdwsServiceStatus' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:029)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:034)
VERBOSE: [09:54:22][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:54:22][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:54:22][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:54:22][New-LabPSSession] Session DC01_bd0cbfaf-f27c-4543-9da9-acb815882f05 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 2'...(Time elapsed: 00:00:00:014)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=GetAdwsServiceStatus)
VERBOSE: [09:54:22][Invoke-LWCommand] Starting Activity 'GetAdwsServiceStatus'
VERBOSE: [09:54:25][Invoke-LWCommand] Finished Installation Activity 'GetAdwsServiceStatus'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:03:038)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:03:047)
VERBOSE: Test-LabADReady...leaving...(Time elapsed: 00:00:03:052)
VERBOSE: Test-LabADReady Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=GetAdwsServiceStatus,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,DoNotUseCredSsp=True,PassThru=True,NoDisplay=True,ErrorAction=<null>)
VERBOSE: [09:54:29][Invoke-LabCommand] Executing lab command activity 'GetAdwsServiceStatus' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:039)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:044)
VERBOSE: [09:54:29][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:54:29][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:54:29][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:54:29][New-LabPSSession] Session DC01_bd0cbfaf-f27c-4543-9da9-acb815882f05 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 2'...(Time elapsed: 00:00:00:016)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=GetAdwsServiceStatus)
VERBOSE: [09:54:29][Invoke-LWCommand] Starting Activity 'GetAdwsServiceStatus'
VERBOSE: [09:54:29][Invoke-LWCommand] Finished Installation Activity 'GetAdwsServiceStatus'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:052)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:063)
VERBOSE: Test-LabADReady...leaving...(Time elapsed: 00:00:00:076)
VERBOSE: Test-LabADReady Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=GetAdwsServiceStatus,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,DoNotUseCredSsp=True,PassThru=True,NoDisplay=True,ErrorAction=<null>)
VERBOSE: [09:54:32][Invoke-LabCommand] Executing lab command activity 'GetAdwsServiceStatus' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:024)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:029)
VERBOSE: [09:54:32][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:54:32][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:54:32][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:54:32][New-LabPSSession] Session DC01_bd0cbfaf-f27c-4543-9da9-acb815882f05 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 2'...(Time elapsed: 00:00:00:014)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=GetAdwsServiceStatus)
VERBOSE: [09:54:32][Invoke-LWCommand] Starting Activity 'GetAdwsServiceStatus'
VERBOSE: [09:54:32][Invoke-LWCommand] Finished Installation Activity 'GetAdwsServiceStatus'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:032)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:041)
VERBOSE: Test-LabADReady...leaving...(Time elapsed: 00:00:00:054)
VERBOSE: Test-LabADReady Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=GetAdwsServiceStatus,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,DoNotUseCredSsp=True,PassThru=True,NoDisplay=True,ErrorAction=<null>)
VERBOSE: [09:54:35][Invoke-LabCommand] Executing lab command activity 'GetAdwsServiceStatus' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:035)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:039)
VERBOSE: [09:54:35][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:54:35][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:54:35][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:54:35][New-LabPSSession] Session DC01_bd0cbfaf-f27c-4543-9da9-acb815882f05 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 2'...(Time elapsed: 00:00:00:013)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=GetAdwsServiceStatus)
VERBOSE: [09:54:35][Invoke-LWCommand] Starting Activity 'GetAdwsServiceStatus'
VERBOSE: [09:54:35][Invoke-LWCommand] Finished Installation Activity 'GetAdwsServiceStatus'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:043)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:051)
VERBOSE: Test-LabADReady...leaving...(Time elapsed: 00:00:00:055)
VERBOSE: Test-LabADReady Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=GetAdwsServiceStatus,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,DoNotUseCredSsp=True,PassThru=True,NoDisplay=True,ErrorAction=<null>)
VERBOSE: [09:54:38][Invoke-LabCommand] Executing lab command activity 'GetAdwsServiceStatus' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:020)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:024)
VERBOSE: [09:54:38][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:54:38][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:54:38][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:54:38][New-LabPSSession] Session DC01_bd0cbfaf-f27c-4543-9da9-acb815882f05 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 2'...(Time elapsed: 00:00:00:015)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=GetAdwsServiceStatus)
VERBOSE: [09:54:38][Invoke-LWCommand] Starting Activity 'GetAdwsServiceStatus'
VERBOSE: [09:54:39][Invoke-LWCommand] Finished Installation Activity 'GetAdwsServiceStatus'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:035)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:043)
VERBOSE: Test-LabADReady...leaving...(Time elapsed: 00:00:00:054)
VERBOSE: Test-LabADReady Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=GetAdwsServiceStatus,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,DoNotUseCredSsp=True,PassThru=True,NoDisplay=True,ErrorAction=<null>)
VERBOSE: [09:54:42][Invoke-LabCommand] Executing lab command activity 'GetAdwsServiceStatus' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:036)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:040)
VERBOSE: [09:54:42][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:54:42][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:54:42][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:54:42][New-LabPSSession] Session DC01_bd0cbfaf-f27c-4543-9da9-acb815882f05 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 2'...(Time elapsed: 00:00:00:019)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=GetAdwsServiceStatus)
VERBOSE: [09:54:42][Invoke-LWCommand] Starting Activity 'GetAdwsServiceStatus'
VERBOSE: [09:54:42][Invoke-LWCommand] Finished Installation Activity 'GetAdwsServiceStatus'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:032)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:048)
VERBOSE: Test-LabADReady...leaving...(Time elapsed: 00:00:00:054)
VERBOSE: Test-LabADReady Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=GetAdwsServiceStatus,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,DoNotUseCredSsp=True,PassThru=True,NoDisplay=True,ErrorAction=<null>)
VERBOSE: [09:54:45][Invoke-LabCommand] Executing lab command activity 'GetAdwsServiceStatus' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:020)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:025)
VERBOSE: [09:54:45][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:54:45][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:54:45][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:54:45][New-LabPSSession] Session DC01_bd0cbfaf-f27c-4543-9da9-acb815882f05 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 2'...(Time elapsed: 00:00:00:015)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=GetAdwsServiceStatus)
VERBOSE: [09:54:45][Invoke-LWCommand] Starting Activity 'GetAdwsServiceStatus'
VERBOSE: [09:54:45][Invoke-LWCommand] Finished Installation Activity 'GetAdwsServiceStatus'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:025)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:031)
VERBOSE: Test-LabADReady...leaving...(Time elapsed: 00:00:00:035)
VERBOSE: Test-LabADReady Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=GetAdwsServiceStatus,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,DoNotUseCredSsp=True,PassThru=True,NoDisplay=True,ErrorAction=<null>)
VERBOSE: [09:54:48][Invoke-LabCommand] Executing lab command activity 'GetAdwsServiceStatus' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:042)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:054)
VERBOSE: [09:54:48][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:54:48][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:54:48][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:54:48][New-LabPSSession] Session DC01_bd0cbfaf-f27c-4543-9da9-acb815882f05 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 2'...(Time elapsed: 00:00:00:017)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=GetAdwsServiceStatus)
VERBOSE: [09:54:48][Invoke-LWCommand] Starting Activity 'GetAdwsServiceStatus'
VERBOSE: [09:54:48][Invoke-LWCommand] Finished Installation Activity 'GetAdwsServiceStatus'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:052)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:075)
VERBOSE: Test-LabADReady...leaving...(Time elapsed: 00:00:00:081)
VERBOSE: Test-LabADReady Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=GetAdwsServiceStatus,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,DoNotUseCredSsp=True,PassThru=True,NoDisplay=True,ErrorAction=<null>)
VERBOSE: [09:54:51][Invoke-LabCommand] Executing lab command activity 'GetAdwsServiceStatus' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:022)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:027)
VERBOSE: [09:54:51][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:54:52][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:54:52][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:54:52][New-LabPSSession] Session DC01_bd0cbfaf-f27c-4543-9da9-acb815882f05 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 2'...(Time elapsed: 00:00:00:013)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=GetAdwsServiceStatus)
VERBOSE: [09:54:52][Invoke-LWCommand] Starting Activity 'GetAdwsServiceStatus'
VERBOSE: [09:54:52][Invoke-LWCommand] Finished Installation Activity 'GetAdwsServiceStatus'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:032)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:043)
VERBOSE: Test-LabADReady...leaving...(Time elapsed: 00:00:00:046)
VERBOSE: Test-LabADReady Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=GetAdwsServiceStatus,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,DoNotUseCredSsp=True,PassThru=True,NoDisplay=True,ErrorAction=<null>)
VERBOSE: [09:54:55][Invoke-LabCommand] Executing lab command activity 'GetAdwsServiceStatus' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:037)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:044)
VERBOSE: [09:54:55][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:54:55][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:54:55][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:54:55][New-LabPSSession] Session DC01_bd0cbfaf-f27c-4543-9da9-acb815882f05 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 2'...(Time elapsed: 00:00:00:020)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=GetAdwsServiceStatus)
VERBOSE: [09:54:55][Invoke-LWCommand] Starting Activity 'GetAdwsServiceStatus'
VERBOSE: [09:54:55][Invoke-LWCommand] Finished Installation Activity 'GetAdwsServiceStatus'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:033)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:044)
VERBOSE: Test-LabADReady...leaving...(Time elapsed: 00:00:00:047)
VERBOSE: [09:54:55][Write-ScreenInfo] .
.
VERBOSE: Test-LabADReady Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=GetAdwsServiceStatus,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,DoNotUseCredSsp=True,PassThru=True,NoDisplay=True,ErrorAction=<null>)
VERBOSE: [09:54:58][Invoke-LabCommand] Executing lab command activity 'GetAdwsServiceStatus' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:021)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:025)
VERBOSE: [09:54:58][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:54:58][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:54:58][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:54:58][New-LabPSSession] Session DC01_bd0cbfaf-f27c-4543-9da9-acb815882f05 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 2'...(Time elapsed: 00:00:00:014)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=GetAdwsServiceStatus)
VERBOSE: [09:54:58][Invoke-LWCommand] Starting Activity 'GetAdwsServiceStatus'
VERBOSE: [09:54:58][Invoke-LWCommand] Finished Installation Activity 'GetAdwsServiceStatus'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:035)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:043)
VERBOSE: Test-LabADReady...leaving...(Time elapsed: 00:00:00:047)
VERBOSE: Test-LabADReady Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=GetAdwsServiceStatus,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,DoNotUseCredSsp=True,PassThru=True,NoDisplay=True,ErrorAction=<null>)
VERBOSE: [09:55:01][Invoke-LabCommand] Executing lab command activity 'GetAdwsServiceStatus' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:042)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:045)
VERBOSE: [09:55:01][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:55:01][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:55:01][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:55:01][New-LabPSSession] Session DC01_bd0cbfaf-f27c-4543-9da9-acb815882f05 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 2'...(Time elapsed: 00:00:00:019)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=GetAdwsServiceStatus)
VERBOSE: [09:55:01][Invoke-LWCommand] Starting Activity 'GetAdwsServiceStatus'
VERBOSE: [09:55:01][Invoke-LWCommand] Finished Installation Activity 'GetAdwsServiceStatus'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:029)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:035)
VERBOSE: Test-LabADReady...leaving...(Time elapsed: 00:00:00:048)
VERBOSE: Test-LabADReady Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=GetAdwsServiceStatus,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,DoNotUseCredSsp=True,PassThru=True,NoDisplay=True,ErrorAction=<null>)
VERBOSE: [09:55:04][Invoke-LabCommand] Executing lab command activity 'GetAdwsServiceStatus' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:028)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:033)
VERBOSE: [09:55:05][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:55:05][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:55:05][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:55:05][New-LabPSSession] Session DC01_bd0cbfaf-f27c-4543-9da9-acb815882f05 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 2'...(Time elapsed: 00:00:00:012)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=GetAdwsServiceStatus)
VERBOSE: [09:55:05][Invoke-LWCommand] Starting Activity 'GetAdwsServiceStatus'
VERBOSE: [09:55:05][Invoke-LWCommand] Finished Installation Activity 'GetAdwsServiceStatus'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:033)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:043)
VERBOSE: Test-LabADReady...leaving...(Time elapsed: 00:00:00:047)
VERBOSE: Test-LabADReady Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=GetAdwsServiceStatus,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,DoNotUseCredSsp=True,PassThru=True,NoDisplay=True,ErrorAction=<null>)
VERBOSE: [09:55:08][Invoke-LabCommand] Executing lab command activity 'GetAdwsServiceStatus' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:038)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:043)
VERBOSE: [09:55:08][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:55:08][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:55:08][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:55:08][New-LabPSSession] Session DC01_bd0cbfaf-f27c-4543-9da9-acb815882f05 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 2'...(Time elapsed: 00:00:00:011)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=GetAdwsServiceStatus)
VERBOSE: [09:55:08][Invoke-LWCommand] Starting Activity 'GetAdwsServiceStatus'
VERBOSE: [09:55:08][Invoke-LWCommand] Finished Installation Activity 'GetAdwsServiceStatus'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:031)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:040)
VERBOSE: Test-LabADReady...leaving...(Time elapsed: 00:00:00:043)
VERBOSE: Test-LabADReady Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=GetAdwsServiceStatus,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,DoNotUseCredSsp=True,PassThru=True,NoDisplay=True,ErrorAction=<null>)
VERBOSE: [09:55:11][Invoke-LabCommand] Executing lab command activity 'GetAdwsServiceStatus' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:020)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:025)
VERBOSE: [09:55:11][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:55:11][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:55:11][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:55:11][New-LabPSSession] Session DC01_bd0cbfaf-f27c-4543-9da9-acb815882f05 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 2'...(Time elapsed: 00:00:00:014)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=GetAdwsServiceStatus)
VERBOSE: [09:55:11][Invoke-LWCommand] Starting Activity 'GetAdwsServiceStatus'
VERBOSE: [09:55:13][Invoke-LWCommand] Finished Installation Activity 'GetAdwsServiceStatus'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:02:309)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:02:317)
VERBOSE: Test-LabADReady...leaving...(Time elapsed: 00:00:02:320)
VERBOSE: Test-LabADReady Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=GetAdwsServiceStatus,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,DoNotUseCredSsp=True,PassThru=True,NoDisplay=True,ErrorAction=<null>)
VERBOSE: [09:55:16][Invoke-LabCommand] Executing lab command activity 'GetAdwsServiceStatus' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:035)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:042)
VERBOSE: [09:55:17][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:55:17][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:55:17][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:55:17][New-LabPSSession] Session DC01_bd0cbfaf-f27c-4543-9da9-acb815882f05 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 2'...(Time elapsed: 00:00:00:011)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=GetAdwsServiceStatus)
VERBOSE: [09:55:17][Invoke-LWCommand] Starting Activity 'GetAdwsServiceStatus'
VERBOSE: [09:55:17][Invoke-LWCommand] Finished Installation Activity 'GetAdwsServiceStatus'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:667)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:676)
VERBOSE: Test-LabADReady...leaving...(Time elapsed: 00:00:00:679)
VERBOSE: Test-LabADReady Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=GetAdwsServiceStatus,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,DoNotUseCredSsp=True,PassThru=True,NoDisplay=True,ErrorAction=<null>)
VERBOSE: [09:55:20][Invoke-LabCommand] Executing lab command activity 'GetAdwsServiceStatus' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:025)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:031)
VERBOSE: [09:55:20][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:55:21][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:55:21][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:55:21][New-LabPSSession] Session DC01_bd0cbfaf-f27c-4543-9da9-acb815882f05 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 2'...(Time elapsed: 00:00:00:014)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=

        if ((Get-Service -Name ADWS).Status -eq 'Running')
        {
            try
            {
                $env:ADPS_LoadDefaultDrive = 0
                $WarningPreference = 'SilentlyContinue'
                Import-Module -Name ActiveDirectory -ErrorAction Stop
                [bool](Get-ADDomainController -Server $env:COMPUTERNAME -ErrorAction SilentlyContinue)
            }
            catch
            {
                $false
            }
        }

    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=GetAdwsServiceStatus)
VERBOSE: [09:55:21][Invoke-LWCommand] Starting Activity 'GetAdwsServiceStatus'
VERBOSE: [09:55:21][Invoke-LWCommand] Finished Installation Activity 'GetAdwsServiceStatus'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:050)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:056)
VERBOSE: Test-LabADReady...leaving...(Time elapsed: 00:00:00:062)
VERBOSE: [09:55:21][Wait-LabADReady] Active Directory is now ready on Domain Controller 'DC01'
VERBOSE: [09:55:21][Wait-LabADReady] Domain Controllers specified are now ready:
VERBOSE: [09:55:21][Wait-LabADReady] DC01
VERBOSE: Wait-LabADReady...leaving...(Time elapsed: 00:00:00:068)
VERBOSE: Get-LabVirtualNetworkDefinition Entering... )
VERBOSE: Invoke-LabCommand Entering... (ActivityName=Create reverse lookup zone,ComputerName=DC01,ScriptBlock=
                param
                (
                    [string]$ip
                )

                $zoneName = "$($ip.split('.')[2]).$($ip.split('.')[1]).$($ip.split('.')[0]).in-addr.arpa"
                dnscmd . /ZoneAdd "$zoneName" /DsPrimary /DP /forest
                dnscmd . /Config "$zoneName" /AllowUpdate 2
                ipconfig.exe -registerdns
            ,ArgumentList=10.0.0.0,NoDisplay=True)
VERBOSE: [09:55:21][Invoke-LabCommand] Executing lab command activity 'Create reverse lookup zone' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:022)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:032)
VERBOSE: [09:55:21][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=<null>,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:55:21][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:55:21][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: [09:55:21][New-LabPSSession] Testing port 5985 on computer 'DC01'
VERBOSE: [09:55:21][New-LabPSSession] Port was open, trying to create the session
VERBOSE: [09:55:22][New-LabPSSession] Session to computer 'DC01' created
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 3'...(Time elapsed: 00:00:00:004)
VERBOSE: Invoke-LWCommand Entering... (PassThru=<null>,AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,ArgumentList=10.0.0.0,ScriptBlock=
                param
                (
                    [string]$ip
                )

                $zoneName = "$($ip.split('.')[2]).$($ip.split('.')[1]).$($ip.split('.')[0]).in-addr.arpa"
                dnscmd . /ZoneAdd "$zoneName" /DsPrimary /DP /forest
                dnscmd . /Config "$zoneName" /AllowUpdate 2
                ipconfig.exe -registerdns
            ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=Create reverse lookup zone)
VERBOSE: [09:55:22][Invoke-LWCommand] Starting Activity 'Create reverse lookup zone'
VERBOSE: [09:55:25][Invoke-LWCommand] The Output of the task on machine 'DC01' will be available in the variable 'AL_27a90b31-5f10-4c33-a0f7-f1761456838a'
VERBOSE: [09:55:25][Invoke-LWCommand] Finished Installation Activity 'Create reverse lookup zone'
VERBOSE: Invoke-LWCommand...leaving - return value is 'System.Management.Automation.PSVariable'...(Time elapsed: 00:00:03:219)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:03:227)
VERBOSE: Invoke-LabCommand Entering... (ActivityName=Make installation user Domain Admin,ComputerName=DC01,ScriptBlock=
            $PSDefaultParameterValues = @{
                '*-AD*:Server' = $env:COMPUTERNAME
            }

            $user = Get-ADUser -Identity ([System.Security.Principal.WindowsIdentity]::GetCurrent().User) -Server localhost

            Add-ADGroupMember -Identity 'Domain Admins' -Members $user -Server localhost
            Add-ADGroupMember -Identity 'Enterprise Admins' -Members $user -Server localhost
            Add-ADGroupMember -Identity 'Schema Admins' -Members $user -Server localhost
        ,NoDisplay=True,ErrorAction=<null>)
VERBOSE: [09:55:25][Invoke-LabCommand] Executing lab command activity 'Make installation user Domain Admin' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:039)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:044)
VERBOSE: [09:55:25][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=<null>,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:55:25][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:55:25][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: [09:55:25][New-LabPSSession] Session DC01_d11a9015-67ca-43a5-9376-141094e7d374 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 3'...(Time elapsed: 00:00:00:005)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=<null>,ScriptBlock=
            $PSDefaultParameterValues = @{
                '*-AD*:Server' = $env:COMPUTERNAME
            }

            $user = Get-ADUser -Identity ([System.Security.Principal.WindowsIdentity]::GetCurrent().User) -Server localhost

            Add-ADGroupMember -Identity 'Domain Admins' -Members $user -Server localhost
            Add-ADGroupMember -Identity 'Enterprise Admins' -Members $user -Server localhost
            Add-ADGroupMember -Identity 'Schema Admins' -Members $user -Server localhost
        ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=Make installation user Domain Admin)
VERBOSE: [09:55:25][Invoke-LWCommand] Starting Activity 'Make installation user Domain Admin'
VERBOSE: [09:55:26][Invoke-LWCommand] The Output of the task on machine 'DC01' will be available in the variable 'AL_a1b630c6-69be-4a4e-8724-325263219f81'
VERBOSE: [09:55:26][Invoke-LWCommand] Finished Installation Activity 'Make installation user Domain Admin'
VERBOSE: Invoke-LWCommand...leaving - return value is 'System.Management.Automation.PSVariable'...(Time elapsed: 00:00:00:615)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:623)
VERBOSE: Get-LabVM Entering... (All=True,IncludeLinux=True)
VERBOSE: Invoke-LabCommand Entering... (ActivityName=Register non domain joined machines in DNS,ComputerName=DC01,ScriptBlock=Restart-Service -Name DNS -WarningAction SilentlyContinue
,NoDisplay=True)
VERBOSE: [09:55:26][Invoke-LabCommand] Executing lab command activity 'Register non domain joined machines in DNS' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:024)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:028)
VERBOSE: [09:55:26][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=<null>,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:55:26][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:55:26][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: [09:55:26][New-LabPSSession] Session DC01_d11a9015-67ca-43a5-9376-141094e7d374 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 3'...(Time elapsed: 00:00:00:005)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=<null>,ScriptBlock=Restart-Service -Name DNS -WarningAction SilentlyContinue
,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=Register non domain joined machines in DNS)
VERBOSE: [09:55:26][Invoke-LWCommand] Starting Activity 'Register non domain joined machines in DNS'
VERBOSE: [09:55:26][Invoke-LWCommand] The Output of the task on machine 'DC01' will be available in the variable 'AL_67244c33-86ed-431c-998f-a4aae5d71a27'
VERBOSE: [09:55:26][Invoke-LWCommand] Finished Installation Activity 'Register non domain joined machines in DNS'
VERBOSE: Invoke-LWCommand...leaving - return value is 'System.Management.Automation.PSVariable'...(Time elapsed: 00:00:00:600)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:607)
VERBOSE: Invoke-LabCommand Entering... (ActivityName=Add flat domain name DNS record to speed up start of gpsvc in 2016,ComputerName=DC01,ScriptBlock=
            $machine = $args[0] | Where-Object { $_.Name -eq $env:COMPUTERNAME }
            dnscmd localhost /recordadd $env:USERDNSDOMAIN $env:USERDOMAIN A $machine.IpV4Address
        ,ArgumentList=System.Object[](1),NoDisplay=True)
VERBOSE: [09:55:26][Invoke-LabCommand] Executing lab command activity 'Add flat domain name DNS record to speed up start of gpsvc in 2016' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:021)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:027)
VERBOSE: [09:55:26][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=<null>,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:55:27][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:55:27][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: [09:55:27][New-LabPSSession] Session DC01_d11a9015-67ca-43a5-9376-141094e7d374 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 3'...(Time elapsed: 00:00:00:010)
VERBOSE: Invoke-LWCommand Entering... (PassThru=<null>,AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,ArgumentList=System.Object[](1),ScriptBlock=
            $machine = $args[0] | Where-Object { $_.Name -eq $env:COMPUTERNAME }
            dnscmd localhost /recordadd $env:USERDNSDOMAIN $env:USERDOMAIN A $machine.IpV4Address
        ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=Add flat domain name DNS record to speed up start of gpsvc in 2016)
VERBOSE: [09:55:27][Invoke-LWCommand] Starting Activity 'Add flat domain name DNS record to speed up start of gpsvc in 2016'
VERBOSE: Perform operation 'Query CimInstances' with following parameters, ''queryExpression' = SELECT * FROM Win32_LogicalDisk WHERE DeviceId='C:','queryDialect' = WQL,'namespaceName' = root\cimv2'.
VERBOSE: Operation 'Query CimInstances' complete.
VERBOSE: Perform operation 'Query CimInstances' with following parameters, ''queryExpression' = SELECT * FROM Win32_LogicalDisk WHERE DeviceId='C:','queryDialect' = WQL,'namespaceName' = root\cimv2'.
VERBOSE: Operation 'Query CimInstances' complete.
VERBOSE: [09:55:27][Invoke-LWCommand] The Output of the task on machine 'DC01' will be available in the variable 'AL_0c2d05db-8c4c-41ab-9dde-b483af9b92d1'
VERBOSE: [09:55:27][Invoke-LWCommand] Finished Installation Activity 'Add flat domain name DNS record to speed up start of gpsvc in 2016'
VERBOSE: Invoke-LWCommand...leaving - return value is 'System.Management.Automation.PSVariable'...(Time elapsed: 00:00:00:148)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:154)
VERBOSE: Get-LabVM Entering... (All=True,IncludeLinux=True)
VERBOSE: Enable-LabVMRemoting Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... )
VERBOSE: Get-LabVM Entering... (All=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=SetLabVMRemoting,ScriptBlock=
        param ($DomainName, $UserName, $Password)
        
        $RegPath = 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon'
        
        Set-ItemProperty -Path $RegPath -Name AutoAdminLogon -Value 1 -ErrorAction SilentlyContinue
        Set-ItemProperty -Path $RegPath -Name DefaultUserName -Value $UserName -ErrorAction SilentlyContinue
        Set-ItemProperty -Path $RegPath -Name DefaultPassword -Value $Password -ErrorAction SilentlyContinue
        Set-ItemProperty -Path $RegPath -Name DefaultDomainName -Value $DomainName -ErrorAction SilentlyContinue
        
        Enable-WSManCredSSP -Role Server -Force | Out-Null
    ,DoNotUseCredSsp=True,NoDisplay=True,ArgumentList=System.Object[],ErrorAction=Stop)
VERBOSE: [09:55:27][Invoke-LabCommand] Executing lab command activity 'SetLabVMRemoting' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:023)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:028)
VERBOSE: [09:55:27][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:55:27][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:55:27][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:55:27][New-LabPSSession] Session DC01_bd0cbfaf-f27c-4543-9da9-acb815882f05 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 2'...(Time elapsed: 00:00:00:016)
VERBOSE: Invoke-LWCommand Entering... (PassThru=<null>,AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,ArgumentList=System.Object[],ScriptBlock=
        param ($DomainName, $UserName, $Password)
        
        $RegPath = 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon'
        
        Set-ItemProperty -Path $RegPath -Name AutoAdminLogon -Value 1 -ErrorAction SilentlyContinue
        Set-ItemProperty -Path $RegPath -Name DefaultUserName -Value $UserName -ErrorAction SilentlyContinue
        Set-ItemProperty -Path $RegPath -Name DefaultPassword -Value $Password -ErrorAction SilentlyContinue
        Set-ItemProperty -Path $RegPath -Name DefaultDomainName -Value $DomainName -ErrorAction SilentlyContinue
        
        Enable-WSManCredSSP -Role Server -Force | Out-Null
    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=SetLabVMRemoting)
VERBOSE: [09:55:27][Invoke-LWCommand] Starting Activity 'SetLabVMRemoting'
VERBOSE: [09:55:27][Invoke-LWCommand] The Output of the task on machine 'DC01' will be available in the variable 'AL_30939ea3-2fdc-4c96-bf0c-67e36950840b'
VERBOSE: [09:55:27][Invoke-LWCommand] Finished Installation Activity 'SetLabVMRemoting'
VERBOSE: Invoke-LWCommand...leaving - return value is 'System.Management.Automation.PSVariable'...(Time elapsed: 00:00:00:370)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:376)
VERBOSE: Enable-LabVMRemoting...leaving...(Time elapsed: 00:00:00:382)
VERBOSE: Restart-ServiceResilient Entering... (ComputerName=DC01,ServiceName=nlasvc,NoNewLine=True)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,AsJob=True,PassThru=True,NoDisplay=True,ActivityName=Restart service 'nlasvc' on computers 'DC01',ScriptBlock=
        param
        (
            [string]$ServiceName
        )

        function Get-ServiceRestartInfo
        {
            param
            (
                [string]$ServiceName,
                [switch]$WasStopped,
                [switch]$WasStarted,
                [double]$Index
            )

            $serviceDisplayName = (Get-Service $ServiceName).DisplayName

            $newestEvent = "($((Get-EventLog -LogName System -newest 1).Index)) " + (Get-EventLog -LogName System -newest 1).Message
            Write-Debug -Message "$(Get-Date -Format 'mm:dd:ss') - Get-ServiceRestartInfo - ServiceName: $ServiceName ($serviceDisplayName) - WasStopped: $WasStopped - WasStarted:$WasStarted - Index: $Index - Newest event: $newestEvent"


            $result = $true

            if ($WasStopped)
            {
                $events = @(Get-EventLog -LogName System -Index ($Index..($Index+10000)) | Where-Object {$_.Message -like "*$serviceDisplayName*entered*stopped*"})
                Write-Debug -Message "$(Get-Date -Format 'mm:dd:ss') - Events found: $($events.count)"
                $result = ($events.count -gt 0)
            }
            if ($WasStarted)
            {
                $events = @(Get-EventLog -LogName System -Index ($Index..($Index+10000)) | Where-Object {$_.Message -like "*$serviceDisplayName*entered*running*"})
                Write-Debug -Message "$(Get-Date -Format 'mm:dd:ss') - Events found: $($events.count)"
                $result = ($events.count -gt 0)
            }

            Write-Debug -Message "$(Get-Date -Format 'mm:dd:ss') - Result:$result"
            $result
        }


        $BackupVerbosePreference = $VerbosePreference
        $BackupDebugPreference   = $DebugPreference
        $VerbosePreference = 'Continue'
        $DebugPreference   = 'Continue'

        $ServiceName = 'nlasvc'

        $dependentServices = Get-Service -Name $ServiceName -DependentServices | Where-Object {$_.Status -eq 'Running'} | Select-Object -ExpandProperty Name
        Write-Verbose -Message "$(Get-Date -Format 'mm:dd:ss') - Dependent services: '$($dependentServices -join ',')'"


        $serviceDisplayName = (Get-Service $ServiceName).DisplayName
        if ((Get-Service -Name "$ServiceName").Status -eq 'Running')
        {
            $newestEventLogIndex = (Get-EventLog -LogName System -Newest 1).Index
            $retries = 5
            do
            {
                Write-Verbose -Message "$(Get-Date -Format 'mm:dd:ss') - Trying to stop service '$ServiceName'"
                $EAPbackup = $ErrorActionPreference
                $WAPbackup = $WarningPreference

                $ErrorActionPreference = 'SilentlyContinue'
                $WarningPreference     = 'SilentlyContinue'
                Stop-Service -Name $ServiceName -Force
                $ErrorActionPreference = $EAPbackup
                $WarningPreference = $WAPbackup

                $retries--
                Start-Sleep -Seconds 1
            }
            until ((Get-ServiceRestartInfo -ServiceName $ServiceName -WasStopped -Index $newestEventLogIndex) -or $retries -le 0)
        }

        if ($retries -gt 0)
        {
            Write-Verbose -Message "$(Get-Date -Format 'mm:dd:ss') - Service '$ServiceName' has been stopped"
        }
        else
        {
            Write-Verbose -Message "$(Get-Date -Format 'mm:dd:ss') - Service '$ServiceName' could NOT be stopped"
            return
        }


        if (-not (Get-ServiceRestartInfo -ServiceName $ServiceName -WasStarted -Index $newestEventLogIndex))
        {
            #if service did not start by itself
            $newestEventLogIndex = (Get-EventLog -LogName System -Newest 1).Index
            $retries = 5
            do
            {
                Write-Verbose -Message "$(Get-Date -Format 'mm:dd:ss') - Trying to start service '$ServiceName'"
                Start-Service -Name $ServiceName -ErrorAction SilentlyContinue
                $retries--
                if (-not (Get-ServiceRestartInfo -ServiceName $ServiceName -WasStarted -Index $newestEventLogIndex))
                {
                    Start-Sleep -Seconds 1
                }
            }
            until ((Get-ServiceRestartInfo -ServiceName $ServiceName -WasStarted -Index $newestEventLogIndex) -or $retries -le 0)
        }


        if ($retries -gt 0)
        {
            Write-Verbose -Message "$(Get-Date -Format 'mm:dd:ss') - Service '$ServiceName' was started"
        }
        else
        {
            Write-Verbose -Message "$(Get-Date -Format 'mm:dd:ss') - Service '$ServiceName' could NOT be started"
            return
        }

        foreach ($dependentService in $dependentServices)
        {
            if (Get-ServiceRestartInfo -ServiceName $dependentService -WasStarted -Index $newestEventLogIndex)
            {
                Write-Debug -Message "$(Get-Date -Format 'mm:dd:ss') - Dependent service '$dependentService' has already auto-started"
            }
            else
            {
                $newestEventLogIndex = (Get-EventLog -LogName System -Newest 1).Index
                $retries = 5
                do
                {
                    Write-Debug -Message "$(Get-Date -Format 'mm:dd:ss') - Trying to start depending service '$dependentService'"
                    Start-Service $dependentService -ErrorAction SilentlyContinue
                    $retries--
                }
                until ((Get-ServiceRestartInfo -ServiceName $ServiceName -WasStarted -Index $newestEventLogIndex) -or $retries -le 0)

                if (Get-ServiceRestartInfo -ServiceName $ServiceName -WasStarted -Index $newestEventLogIndex)
                {
                    Write-Debug -Message "$(Get-Date -Format 'mm:dd:ss') - Dependent service '$ServiceName' was started"
                }
                else
                {
                    Write-Debug -Message "$(Get-Date -Format 'mm:dd:ss') - Dependent service '$ServiceName' could NOT be started"
                }
            }
        }

        $VerbosePreference = $BackupVerbosePreference
        $DebugPreference   = $BackupDebugPreference
    ,ArgumentList=nlasvc)
VERBOSE: [09:55:27][Invoke-LabCommand] Executing lab command activity 'Restart service 'nlasvc' on computers 'DC01'' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:022)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:026)
VERBOSE: [09:55:27][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=<null>,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:55:27][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:55:27][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: [09:55:28][New-LabPSSession] Session DC01_d11a9015-67ca-43a5-9376-141094e7d374 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 3'...(Time elapsed: 00:00:00:007)
VERBOSE: Invoke-LWCommand Entering... (PassThru=True,AsJob=True,Verbose=True,ComputerName=DC01,Retries=3,ArgumentList=nlasvc,ScriptBlock=
        param
        (
            [string]$ServiceName
        )

        function Get-ServiceRestartInfo
        {
            param
            (
                [string]$ServiceName,
                [switch]$WasStopped,
                [switch]$WasStarted,
                [double]$Index
            )

            $serviceDisplayName = (Get-Service $ServiceName).DisplayName

            $newestEvent = "($((Get-EventLog -LogName System -newest 1).Index)) " + (Get-EventLog -LogName System -newest 1).Message
            Write-Debug -Message "$(Get-Date -Format 'mm:dd:ss') - Get-ServiceRestartInfo - ServiceName: $ServiceName ($serviceDisplayName) - WasStopped: $WasStopped - WasStarted:$WasStarted - Index: $Index - Newest event: $newestEvent"


            $result = $true

            if ($WasStopped)
            {
                $events = @(Get-EventLog -LogName System -Index ($Index..($Index+10000)) | Where-Object {$_.Message -like "*$serviceDisplayName*entered*stopped*"})
                Write-Debug -Message "$(Get-Date -Format 'mm:dd:ss') - Events found: $($events.count)"
                $result = ($events.count -gt 0)
            }
            if ($WasStarted)
            {
                $events = @(Get-EventLog -LogName System -Index ($Index..($Index+10000)) | Where-Object {$_.Message -like "*$serviceDisplayName*entered*running*"})
                Write-Debug -Message "$(Get-Date -Format 'mm:dd:ss') - Events found: $($events.count)"
                $result = ($events.count -gt 0)
            }

            Write-Debug -Message "$(Get-Date -Format 'mm:dd:ss') - Result:$result"
            $result
        }


        $BackupVerbosePreference = $VerbosePreference
        $BackupDebugPreference   = $DebugPreference
        $VerbosePreference = 'Continue'
        $DebugPreference   = 'Continue'

        $ServiceName = 'nlasvc'

        $dependentServices = Get-Service -Name $ServiceName -DependentServices | Where-Object {$_.Status -eq 'Running'} | Select-Object -ExpandProperty Name
        Write-Verbose -Message "$(Get-Date -Format 'mm:dd:ss') - Dependent services: '$($dependentServices -join ',')'"


        $serviceDisplayName = (Get-Service $ServiceName).DisplayName
        if ((Get-Service -Name "$ServiceName").Status -eq 'Running')
        {
            $newestEventLogIndex = (Get-EventLog -LogName System -Newest 1).Index
            $retries = 5
            do
            {
                Write-Verbose -Message "$(Get-Date -Format 'mm:dd:ss') - Trying to stop service '$ServiceName'"
                $EAPbackup = $ErrorActionPreference
                $WAPbackup = $WarningPreference

                $ErrorActionPreference = 'SilentlyContinue'
                $WarningPreference     = 'SilentlyContinue'
                Stop-Service -Name $ServiceName -Force
                $ErrorActionPreference = $EAPbackup
                $WarningPreference = $WAPbackup

                $retries--
                Start-Sleep -Seconds 1
            }
            until ((Get-ServiceRestartInfo -ServiceName $ServiceName -WasStopped -Index $newestEventLogIndex) -or $retries -le 0)
        }

        if ($retries -gt 0)
        {
            Write-Verbose -Message "$(Get-Date -Format 'mm:dd:ss') - Service '$ServiceName' has been stopped"
        }
        else
        {
            Write-Verbose -Message "$(Get-Date -Format 'mm:dd:ss') - Service '$ServiceName' could NOT be stopped"
            return
        }


        if (-not (Get-ServiceRestartInfo -ServiceName $ServiceName -WasStarted -Index $newestEventLogIndex))
        {
            #if service did not start by itself
            $newestEventLogIndex = (Get-EventLog -LogName System -Newest 1).Index
            $retries = 5
            do
            {
                Write-Verbose -Message "$(Get-Date -Format 'mm:dd:ss') - Trying to start service '$ServiceName'"
                Start-Service -Name $ServiceName -ErrorAction SilentlyContinue
                $retries--
                if (-not (Get-ServiceRestartInfo -ServiceName $ServiceName -WasStarted -Index $newestEventLogIndex))
                {
                    Start-Sleep -Seconds 1
                }
            }
            until ((Get-ServiceRestartInfo -ServiceName $ServiceName -WasStarted -Index $newestEventLogIndex) -or $retries -le 0)
        }


        if ($retries -gt 0)
        {
            Write-Verbose -Message "$(Get-Date -Format 'mm:dd:ss') - Service '$ServiceName' was started"
        }
        else
        {
            Write-Verbose -Message "$(Get-Date -Format 'mm:dd:ss') - Service '$ServiceName' could NOT be started"
            return
        }

        foreach ($dependentService in $dependentServices)
        {
            if (Get-ServiceRestartInfo -ServiceName $dependentService -WasStarted -Index $newestEventLogIndex)
            {
                Write-Debug -Message "$(Get-Date -Format 'mm:dd:ss') - Dependent service '$dependentService' has already auto-started"
            }
            else
            {
                $newestEventLogIndex = (Get-EventLog -LogName System -Newest 1).Index
                $retries = 5
                do
                {
                    Write-Debug -Message "$(Get-Date -Format 'mm:dd:ss') - Trying to start depending service '$dependentService'"
                    Start-Service $dependentService -ErrorAction SilentlyContinue
                    $retries--
                }
                until ((Get-ServiceRestartInfo -ServiceName $ServiceName -WasStarted -Index $newestEventLogIndex) -or $retries -le 0)

                if (Get-ServiceRestartInfo -ServiceName $ServiceName -WasStarted -Index $newestEventLogIndex)
                {
                    Write-Debug -Message "$(Get-Date -Format 'mm:dd:ss') - Dependent service '$ServiceName' was started"
                }
                else
                {
                    Write-Debug -Message "$(Get-Date -Format 'mm:dd:ss') - Dependent service '$ServiceName' could NOT be started"
                }
            }
        }

        $VerbosePreference = $BackupVerbosePreference
        $DebugPreference   = $BackupDebugPreference
    ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=Restart service 'nlasvc' on computers 'DC01')
VERBOSE: [09:55:28][Invoke-LWCommand] Starting Activity 'Restart service 'nlasvc' on computers 'DC01''
VERBOSE: [09:55:28][Invoke-LWCommand] Finished Installation Activity 'Restart service 'nlasvc' on computers 'DC01''
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:023)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:032)
VERBOSE: Wait-LWLabJob Entering... (Job=System.Management.Automation.Job[](1),NoDisplay=True,Timeout=30,NoNewLine=True,ProgressIndicator=10)
VERBOSE: [09:55:28][Write-ScreenInfo] .
.
VERBOSE: Wait-LWLabJob...leaving...(Time elapsed: 00:00:04:022)
VERBOSE: Restart-ServiceResilient...leaving...(Time elapsed: 00:00:04:027)
VERBOSE: Get-LabVM Entering... (Role=RootDC)
VERBOSE: Reset-DNSConfiguration Entering... (ComputerName=DC01,ProgressIndicator=30,NoNewLine=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=DC01,ActivityName=Reset DNS client configuration to match specified DNS configuration,ScriptBlock=
            param
            (
                $DnsServers
            )
            $AdapterNames = (Get-WmiObject -Namespace Root\CIMv2 -Class Win32_NetworkAdapter | Where-Object {$_.PhysicalAdapter}).NetConnectionID
            foreach ($AdapterName in $AdapterNames)
            {
                netsh.exe interface ipv4 set dnsservers "$AdapterName" static $DnsServers primary

                "netsh interface ipv6 delete dnsservers '$AdapterName' all"
                netsh.exe interface ipv6 delete dnsservers "$AdapterName" all
            }
        ,AsJob=True,PassThru=True,NoDisplay=True,ArgumentList=<null>)
VERBOSE: [09:55:32][Invoke-LabCommand] Executing lab command activity 'Reset DNS client configuration to match specified DNS configuration' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:035)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:039)
VERBOSE: [09:55:32][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=<null>,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:55:32][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:55:32][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: [09:55:32][New-LabPSSession] Session DC01_d11a9015-67ca-43a5-9376-141094e7d374 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 3'...(Time elapsed: 00:00:00:006)
VERBOSE: Invoke-LWCommand Entering... (AsJob=True,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=
            param
            (
                $DnsServers
            )
            $AdapterNames = (Get-WmiObject -Namespace Root\CIMv2 -Class Win32_NetworkAdapter | Where-Object {$_.PhysicalAdapter}).NetConnectionID
            foreach ($AdapterName in $AdapterNames)
            {
                netsh.exe interface ipv4 set dnsservers "$AdapterName" static $DnsServers primary

                "netsh interface ipv6 delete dnsservers '$AdapterName' all"
                netsh.exe interface ipv6 delete dnsservers "$AdapterName" all
            }
        ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=Reset DNS client configuration to match specified DNS configuration)
VERBOSE: [09:55:32][Invoke-LWCommand] Starting Activity 'Reset DNS client configuration to match specified DNS configuration'
VERBOSE: [09:55:32][Invoke-LWCommand] Finished Installation Activity 'Reset DNS client configuration to match specified DNS configuration'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:010)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:018)
VERBOSE: Wait-LWLabJob Entering... (Job=System.Management.Automation.Job[](1),NoDisplay=True,Timeout=30,ProgressIndicator=30,NoNewLine=True)
VERBOSE: [09:55:32][Write-ScreenInfo] .
.
VERBOSE: Wait-LWLabJob...leaving...(Time elapsed: 00:00:01:018)
VERBOSE: Reset-DNSConfiguration...leaving...(Time elapsed: 00:00:01:026)
VERBOSE: [09:55:33][Install-LabRootDcs] Restarting DNS and Netlogon service on Root Domain Controllers
VERBOSE: Get-LabVM Entering... (Role=RootDC)
VERBOSE: Sync-LabActiveDirectory Entering... (ComputerName=DC01,ProgressIndicator=5,AsJob=True,Passthru=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: Invoke-LabCommand Entering... (ActivityName=Performing ipconfig /registerdns on 'DC01',ComputerName=DC01,ScriptBlock= ipconfig.exe /registerdns ,NoDisplay=True)
VERBOSE: [09:55:33][Invoke-LabCommand] Executing lab command activity 'Performing ipconfig /registerdns on 'DC01'' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:039)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:045)
VERBOSE: [09:55:33][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=<null>,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:55:33][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:55:33][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: [09:55:33][New-LabPSSession] Session DC01_d11a9015-67ca-43a5-9376-141094e7d374 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 3'...(Time elapsed: 00:00:00:006)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=DC01,Retries=3,PassThru=<null>,ScriptBlock= ipconfig.exe /registerdns ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=Performing ipconfig /registerdns on 'DC01')
VERBOSE: [09:55:33][Invoke-LWCommand] Starting Activity 'Performing ipconfig /registerdns on 'DC01''
VERBOSE: [09:55:36][Invoke-LWCommand] The Output of the task on machine 'DC01' will be available in the variable 'AL_0a58f66c-929b-4018-933a-6a5fb57a3c75'
VERBOSE: [09:55:36][Invoke-LWCommand] Finished Installation Activity 'Performing ipconfig /registerdns on 'DC01''
VERBOSE: Invoke-LWCommand...leaving - return value is 'System.Management.Automation.PSVariable'...(Time elapsed: 00:00:03:045)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:03:054)
VERBOSE: Invoke-LabCommand Entering... (ActivityName=Triggering replication on 'DC01',ComputerName=DC01,ScriptBlock=
            $VerbosePreference = $using:VerbosePreference

            ipconfig.exe -flushdns

            Write-Verbose -Message 'Getting list of DCs'
            $dcs = repadmin.exe /viewlist *
            Write-Verbose -Message "List: '$($dcs -join ', ')'"
            (Get-Date -Format 'yyyy-MM-dd hh:mm:ss') | Add-Content -Path c:\DeployDebug\DCList.log -Force
            $dcs | Add-Content -Path c:\DeployDebug\DCList.log

            foreach ($dc in $dcs)
            {
                if ($dc)
                {
                    $dcName = $dc.Split()[2]
                    Write-Verbose -Message "Executing 'repadmin.exe /SyncAll /Ae $dcname'"
                    $result = repadmin.exe /SyncAll /Ae $dcName
                    (Get-Date -Format 'yyyy-MM-dd hh:mm:ss') | Add-Content -Path "c:\DeployDebug\Syncs-$($dcName).log" -Force
                    $result | Add-Content -Path "c:\DeployDebug\Syncs-$($dcName).log"
                }
            }
            Write-Verbose -Message "Executing 'repadmin.exe /ReplSum'"
            $result = repadmin.exe /ReplSum
            $result | Add-Content -Path c:\DeployDebug\repadmin.exeResult.log

            Restart-Service -Name DNS -WarningAction SilentlyContinue

            ipconfig.exe /registerdns

            Write-Verbose -Message 'Getting list of DCs'
            $dcs = repadmin.exe /viewlist *
            Write-Verbose -Message "List: '$($dcs -join ', ')'"
            (Get-Date -Format 'yyyy-MM-dd hh:mm:ss') | Add-Content -Path c:\DeployDebug\DCList.log -Force
            $dcs | Add-Content -Path c:\DeployDebug\DCList.log
            foreach ($dc in $dcs)
            {
                if ($dc)
                {
                    $dcName = $dc.Split()[2]
                    Write-Verbose -Message "Executing 'repadmin.exe /SyncAll /Ae $dcname'"
                    $result = repadmin.exe /SyncAll /Ae $dcName
                    (Get-Date -Format 'yyyy-MM-dd hh:mm:ss') | Add-Content -Path "c:\DeployDebug\Syncs-$($dcName).log" -Force
                    $result | Add-Content -Path "c:\DeployDebug\Syncs-$($dcName).log"
                }
            }
            Write-Verbose -Message "Executing 'repadmin.exe /ReplSum'"
            $result = repadmin.exe /ReplSum
            $result | Add-Content -Path c:\DeployDebug\repadmin.exeResult.log

            ipconfig.exe /registerdns

            Restart-Service -Name DNS -WarningAction SilentlyContinue

            #for debugging
            #dnscmd /zoneexport $env:USERDNSDOMAIN "c:\DeployDebug\$($env:USERDNSDOMAIN).txt"
        ,AsJob=True,PassThru=True,NoDisplay=True)
VERBOSE: [09:55:36][Invoke-LabCommand] Executing lab command activity 'Triggering replication on 'DC01'' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:026)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:030)
VERBOSE: [09:55:36][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=<null>,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [09:55:36][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [09:55:36][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: [09:55:36][New-LabPSSession] Session DC01_d11a9015-67ca-43a5-9376-141094e7d374 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 3'...(Time elapsed: 00:00:00:009)
VERBOSE: Invoke-LWCommand Entering... (AsJob=True,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=
            $VerbosePreference = $using:VerbosePreference

            ipconfig.exe -flushdns

            Write-Verbose -Message 'Getting list of DCs'
            $dcs = repadmin.exe /viewlist *
            Write-Verbose -Message "List: '$($dcs -join ', ')'"
            (Get-Date -Format 'yyyy-MM-dd hh:mm:ss') | Add-Content -Path c:\DeployDebug\DCList.log -Force
            $dcs | Add-Content -Path c:\DeployDebug\DCList.log

            foreach ($dc in $dcs)
            {
                if ($dc)
                {
                    $dcName = $dc.Split()[2]
                    Write-Verbose -Message "Executing 'repadmin.exe /SyncAll /Ae $dcname'"
                    $result = repadmin.exe /SyncAll /Ae $dcName
                    (Get-Date -Format 'yyyy-MM-dd hh:mm:ss') | Add-Content -Path "c:\DeployDebug\Syncs-$($dcName).log" -Force
                    $result | Add-Content -Path "c:\DeployDebug\Syncs-$($dcName).log"
                }
            }
            Write-Verbose -Message "Executing 'repadmin.exe /ReplSum'"
            $result = repadmin.exe /ReplSum
            $result | Add-Content -Path c:\DeployDebug\repadmin.exeResult.log

            Restart-Service -Name DNS -WarningAction SilentlyContinue

            ipconfig.exe /registerdns

            Write-Verbose -Message 'Getting list of DCs'
            $dcs = repadmin.exe /viewlist *
            Write-Verbose -Message "List: '$($dcs -join ', ')'"
            (Get-Date -Format 'yyyy-MM-dd hh:mm:ss') | Add-Content -Path c:\DeployDebug\DCList.log -Force
            $dcs | Add-Content -Path c:\DeployDebug\DCList.log
            foreach ($dc in $dcs)
            {
                if ($dc)
                {
                    $dcName = $dc.Split()[2]
                    Write-Verbose -Message "Executing 'repadmin.exe /SyncAll /Ae $dcname'"
                    $result = repadmin.exe /SyncAll /Ae $dcName
                    (Get-Date -Format 'yyyy-MM-dd hh:mm:ss') | Add-Content -Path "c:\DeployDebug\Syncs-$($dcName).log" -Force
                    $result | Add-Content -Path "c:\DeployDebug\Syncs-$($dcName).log"
                }
            }
            Write-Verbose -Message "Executing 'repadmin.exe /ReplSum'"
            $result = repadmin.exe /ReplSum
            $result | Add-Content -Path c:\DeployDebug\repadmin.exeResult.log

            ipconfig.exe /registerdns

            Restart-Service -Name DNS -WarningAction SilentlyContinue

            #for debugging
            #dnscmd /zoneexport $env:USERDNSDOMAIN "c:\DeployDebug\$($env:USERDNSDOMAIN).txt"
        ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=Triggering replication on 'DC01')
VERBOSE: [09:55:36][Invoke-LWCommand] Starting Activity 'Triggering replication on 'DC01''
VERBOSE: [09:55:36][Invoke-LWCommand] Finished Installation Activity 'Triggering replication on 'DC01''
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:018)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:028)
VERBOSE: Sync-LabActiveDirectory...leaving...(Time elapsed: 00:00:00:043)
VERBOSE: Wait-LWLabJob Entering... (Job=System.Management.Automation.Job[](1),ProgressIndicator=5,NoDisplay=True,NoNewLine=True)
VERBOSE: [09:55:37][Write-ScreenInfo] .
.
VERBOSE: [09:55:42][Write-ScreenInfo] .
.
VERBOSE: Wait-LWLabJob...leaving...(Time elapsed: 00:00:08:055)
VERBOSE: Get-LabVM Entering... )
VERBOSE: [09:55:45][Write-ScreenInfo] .
.
VERBOSE: Install-LabRootDcs...leaving...(Time elapsed: 00:00:00:029)
VERBOSE: [09:55:45][Write-ScreenInfo] Done
VERBOSE: [09:55:45][Write-ScreenInfo] 09:55:45|00:07:26|00:06:30.131| - Done
09:55:45|00:07:26|00:06:30.131| - Done
VERBOSE: Get-LabVM Entering... (Role=Routing)
VERBOSE: Get-LabVM Entering... (Role=DHCP)
VERBOSE: Get-LabVM Entering... (Role=FirstChildDC)
VERBOSE: Get-LabVM Entering... (Role=DC)
VERBOSE: Get-LabVM Entering... (Role=RootDC)
VERBOSE: Get-LabVM Entering... (Role=CaRoot, CaSubordinate)
VERBOSE: [09:55:45][Write-ScreenInfo] Installing Certificate Servers
VERBOSE: [09:55:45][Write-ScreenInfo] 09:55:45|00:07:26|00:00:00.000| Installing Certificate Servers
09:55:45|00:07:26|00:00:00.000| Installing Certificate Servers
VERBOSE: Install-LabCA Entering... (CreateCheckPoints=<null>)
VERBOSE: Get-LabVM Entering... (Role=CaRoot, CaSubordinate)
VERBOSE: Get-LabVM Entering... (Role=CaRoot)
VERBOSE: Get-LabVM Entering... (Role=CaRoot)
VERBOSE: Get-LabVM Entering... (Role=CaRoot)
VERBOSE: [09:55:45][Write-ScreenInfo] Machines with Root CA role to be installed: 'CA01'
VERBOSE: [09:55:45][Write-ScreenInfo] 09:55:45|00:07:26|00:00:00.000| - Machines with Root CA role to be installed: 'CA01'
09:55:45|00:07:26|00:00:00.000| - Machines with Root CA role to be installed: 'CA01'
VERBOSE: [09:55:45][Write-ScreenInfo] Waiting for machines to start up
09:55:45|00:07:26|00:00:00.006|   - Waiting for machines to start up
VERBOSE: [09:55:45][Write-ScreenInfo] 09:55:45|00:07:26|00:00:00.006|   - Waiting for machines to start up
VERBOSE: Start-LabVM Entering... (RoleName=CaRoot, CaSubordinate,Wait=True,ProgressIndicator=15)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=CA01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:051)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:064)
VERBOSE: [09:55:45][Start-LabVM] Starting VMs 'CA01'
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMDescription Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:024)
VERBOSE: Start-LWHypervVM...leaving...(Time elapsed: 00:00:00:337)
VERBOSE: Wait-LabVM Entering... (ComputerName=CA01,TimeoutInMinutes=60,DoNotUseCredSsp=<null>,ProgressIndicator=15,NoNewLine=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Remove-LabPSSession Entering... (ComputerName=CA01)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: [09:55:45][Remove-LabPSSession] Removed 0 PSSessions...
VERBOSE: Remove-LabPSSession...leaving...(Time elapsed: 00:00:00:017)
VERBOSE: Get-LWHypervVMDescription Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:023)
VERBOSE: Wait-LabVM Entering... (ComputerName=CA01,TimeoutInMinutes=60,PostDelaySeconds=<null>,ProgressIndicator=15,DoNotUseCredSsp=True,NoNewLine=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Remove-LabPSSession Entering... (ComputerName=CA01)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: [09:55:45][Remove-LabPSSession] Removed 0 PSSessions...
VERBOSE: Remove-LabPSSession...leaving...(Time elapsed: 00:00:00:009)
VERBOSE: Get-LWHypervVMDescription Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:023)
VERBOSE: New-LabPSSession Entering... (ComputerName=CA01,UseLocalCredential=True,Retries=1,DoNotUseCredSsp=True,ErrorAction=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: [09:55:46][New-LabPSSession] Connecting to machine 'CA01' using the DNS name 'CA01'
VERBOSE: [09:55:46][New-LabPSSession] Creating a new PSSession to machine 'CA01:5985' (UserName='CA01\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:55:46][New-LabPSSession] Testing port 5985 on computer 'CA01'
VERBOSE: Connection Timeout
VERBOSE: [09:55:48][New-LabPSSession] Port was NOT open, cannot create session.
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: '...(Time elapsed: 00:00:07:574)
VERBOSE: [09:55:53][Wait-LabVM] Computer '' was not reachable, waiting...
VERBOSE: [09:55:53][Wait-LabVM] Waiting for 1 machines to respond in timeout (60 minute(s))
VERBOSE: Wait-LWLabJob Entering... (Job=System.Management.Automation.Job[](1),ProgressIndicator=15,NoNewLine=True,NoDisplay=True,Timeout=60)
VERBOSE: [09:55:53][Write-ScreenInfo] .
.
VERBOSE: [09:56:08][Write-ScreenInfo] .
.
VERBOSE: [09:56:23][Write-ScreenInfo] .
.
VERBOSE: [09:56:38][Write-ScreenInfo] .
.
VERBOSE: [09:56:53][Write-ScreenInfo] .
.
VERBOSE: [09:57:08][Write-ScreenInfo] .
.
VERBOSE: [09:57:23][Write-ScreenInfo] .
.
VERBOSE: [09:57:38][Write-ScreenInfo] .
.
VERBOSE: [09:57:53][Write-ScreenInfo] .
.
VERBOSE: [09:58:08][Write-ScreenInfo] .
.
VERBOSE: [09:58:23][Write-ScreenInfo] .
.
VERBOSE: [09:58:38][Write-ScreenInfo] .
.
VERBOSE: [09:58:54][Write-ScreenInfo] .
.
VERBOSE: [09:59:09][Write-ScreenInfo] .
.
VERBOSE: [09:59:24][Write-ScreenInfo] .
.
VERBOSE: [09:59:39][Write-ScreenInfo] .
.
VERBOSE: Wait-LWLabJob...leaving...(Time elapsed: 00:03:54:263)
VERBOSE: [09:59:48][Wait-LabVM] The following machines are ready: CA01
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMDescription Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:076)
VERBOSE: Set-LWHypervVMDescription Entering... (Hashtable=System.Collections.Hashtable,ComputerName=CA01)
VERBOSE: Set-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:345)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=CA01,ScriptBlock=

                        if ($PSVersionTable.PSVersion.Major -eq 2)
                        {
                            $d = "{0:HH:mm}" -f (Get-Date).AddMinutes(1)
                            $jobName = "AL_EnableCredSsp"
                            $Path = 'PowerShell'
                            $CommandLine = '-Command Enable-WSManCredSSP -Role Server -Force
VERBOSE: [09:59:49][Invoke-LabCommand] Executing lab command activity '<unnamed>' on machines 'CA01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=CA01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:031)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:036)
VERBOSE: [09:59:49][Invoke-LabCommand] Creating session to computer(s) 'CA01'
VERBOSE: New-LabPSSession Entering... (ComputerName=CA01,DoNotUseCredSsp=True,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: [09:59:49][New-LabPSSession] Connecting to machine 'CA01' using the DNS name 'CA01'
VERBOSE: [09:59:49][New-LabPSSession] Creating a new PSSession to machine 'CA01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='True')
VERBOSE: [09:59:49][New-LabPSSession] Testing port 5985 on computer 'CA01'
VERBOSE: [09:59:49][New-LabPSSession] Port was open, trying to create the session
VERBOSE: [09:59:50][New-LabPSSession] Session to computer 'CA01' created
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 4'...(Time elapsed: 00:00:00:004)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=CA01,Retries=3,PassThru=True,ScriptBlock=

                        if ($PSVersionTable.PSVersion.Major -eq 2)
                        {
                            $d = "{0:HH:mm}" -f (Get-Date).AddMinutes(1)
                            $jobName = "AL_EnableCredSsp"
                            $Path = 'PowerShell'
                            $CommandLine = '-Command Enable-WSManCredSSP -Role Server -Force
VERBOSE: [09:59:50][Invoke-LWCommand] Starting Activity '<unnamed>'
VERBOSE: [09:59:51][Invoke-LWCommand] Finished Installation Activity '<unnamed>'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:01:075)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:01:089)
VERBOSE: Set-LWHypervVMDescription Entering... (Hashtable=System.Collections.Hashtable,ComputerName=CA01)
VERBOSE: Set-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:084)
VERBOSE: Wait-LabVM...leaving...(Time elapsed: 00:00:00:093)
VERBOSE: New-LabPSSession Entering... (ComputerName=CA01,UseLocalCredential=True,Retries=1,DoNotUseCredSsp=<null>,ErrorAction=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: [09:59:52][New-LabPSSession] Connecting to machine 'CA01' using the DNS name 'CA01'
VERBOSE: [09:59:52][New-LabPSSession] Creating a new PSSession to machine 'CA01:5985' (UserName='CA01\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: [09:59:52][New-LabPSSession] Testing port 5985 on computer 'CA01'
VERBOSE: [09:59:52][New-LabPSSession] Port was open, trying to create the session
VERBOSE: [09:59:53][New-LabPSSession] Session to computer 'CA01' created
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 5'...(Time elapsed: 00:00:00:005)
VERBOSE: [09:59:53][Wait-LabVM] Computer 'CA01' was reachable
VERBOSE: [09:59:53][Wait-LabVM] Waiting for 1 machines to respond in timeout (60 minute(s))
VERBOSE: Wait-LWLabJob Entering... (Job=System.Management.Automation.Job[](1),ProgressIndicator=15,NoNewLine=True,NoDisplay=True,Timeout=60)
VERBOSE: [09:59:53][Write-ScreenInfo] .
.
VERBOSE: Wait-LWLabJob...leaving...(Time elapsed: 00:00:01:036)
VERBOSE: [09:59:54][Wait-LabVM] The following machines are ready: CA01
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMDescription Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:040)
VERBOSE: Wait-LabVM...leaving...(Time elapsed: 00:00:00:049)
VERBOSE: [09:59:54][Write-ScreenInfo] .
.
VERBOSE: Start-LabVM...leaving...(Time elapsed: 00:00:00:064)
VERBOSE: Get-LabVM Entering... (Role=CaRoot,IsRunning=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=CA01)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:040)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:056)
VERBOSE: Get-LabVM Entering... (Role=CaRoot)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=CA01,ActivityName=Check if CA is already installed on 'CA01',ScriptBlock= (Get-WindowsFeature -Name 'ADCS-Cert-Authority') ,PassThru=True,NoDisplay=True)
VERBOSE: [09:59:54][Invoke-LabCommand] Executing lab command activity 'Check if CA is already installed on 'CA01'' on machines 'CA01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=CA01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:029)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:039)
VERBOSE: [09:59:55][Invoke-LabCommand] Creating session to computer(s) 'CA01'
VERBOSE: New-LabPSSession Entering... (ComputerName=CA01,DoNotUseCredSsp=<null>,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: [09:59:55][New-LabPSSession] Connecting to machine 'CA01' using the DNS name 'CA01'
VERBOSE: [09:59:55][New-LabPSSession] Creating a new PSSession to machine 'CA01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: [09:59:55][New-LabPSSession] Testing port 5985 on computer 'CA01'
VERBOSE: [09:59:55][New-LabPSSession] Port was open, trying to create the session
VERBOSE: [09:59:56][New-LabPSSession] Session to computer 'CA01' created
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 6'...(Time elapsed: 00:00:00:006)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=CA01,Retries=3,PassThru=True,ScriptBlock= (Get-WindowsFeature -Name 'ADCS-Cert-Authority') ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=Check if CA is already installed on 'CA01')
VERBOSE: [09:59:56][Invoke-LWCommand] Starting Activity 'Check if CA is already installed on 'CA01''
VERBOSE: [09:59:59][Invoke-LWCommand] Finished Installation Activity 'Check if CA is already installed on 'CA01''
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:02:988)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:03:008)
VERBOSE: Install-LabCAMachine Entering... (Machine=CA01,PassThru=True,PreDelaySeconds=<null>)
VERBOSE: [09:59:59][Install-LabCAMachine] ****************************************************
VERBOSE: [09:59:59][Install-LabCAMachine] Starting installation of machine: CA01
VERBOSE: [09:59:59][Install-LabCAMachine] ****************************************************
VERBOSE: Get-LabVM Entering... (Role=RootDC)
VERBOSE: [09:59:59][Write-ScreenInfo] Parameter "CAType" is not specified. Automatically setting CAtype to "EnterpriseRootCA" since machine is domain joined and Root CA role is specified
VERBOSE: [09:59:59][Write-ScreenInfo] 09:59:59|00:11:41|00:04:14.567|   - Parameter "CAType" is not specified. Automatically setting CAtype to "EnterpriseRootCA" since machine is domain joined and Root CA role is specified
09:59:59|00:11:41|00:04:14.567|   - Parameter "CAType" is not specified. Automatically setting CAtype to "EnterpriseRootCA" since machine is domain joined and Root CA role is specified
VERBOSE: Get-LabVM Entering... (Role=CaRoot)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=CA01,ScriptBlock=
            $name = certutil.exe -getreg CA\CommonName | Where-Object { $_ -match 'CommonName REG' }
            if ($name)
            {
                $name.Split('=')[1].Trim()
            }
        ,NoDisplay=True,PassThru=True)
VERBOSE: [09:59:59][Invoke-LabCommand] Executing lab command activity '<unnamed>' on machines 'CA01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=CA01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:052)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:060)
VERBOSE: [10:00:00][Invoke-LabCommand] Creating session to computer(s) 'CA01'
VERBOSE: New-LabPSSession Entering... (ComputerName=CA01,DoNotUseCredSsp=<null>,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: [10:00:00][New-LabPSSession] Connecting to machine 'CA01' using the DNS name 'CA01'
VERBOSE: [10:00:00][New-LabPSSession] Creating a new PSSession to machine 'CA01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: [10:00:00][New-LabPSSession] Session CA01_3e5e3767-ae50-4e2e-906d-7c84d1144ab3 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 6'...(Time elapsed: 00:00:00:006)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=CA01,Retries=3,PassThru=True,ScriptBlock=
            $name = certutil.exe -getreg CA\CommonName | Where-Object { $_ -match 'CommonName REG' }
            if ($name)
            {
                $name.Split('=')[1].Trim()
            }
        ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=<unnamed>)
VERBOSE: [10:00:00][Invoke-LWCommand] Starting Activity '<unnamed>'
VERBOSE: [10:00:00][Invoke-LWCommand] Finished Installation Activity '<unnamed>'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:685)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:697)
VERBOSE: Get-LabVM Entering... )
VERBOSE: [10:00:00][Write-ScreenInfo] Adding parameter 'CertsValidityPeriodUnits' with value of '5' to machine roles properties of machine CA01
VERBOSE: [10:00:00][Write-ScreenInfo] 10:00:00|00:11:42|00:04:15.711|   - Adding parameter 'CertsValidityPeriodUnits' with value of '5' to machine roles properties of machine CA01
10:00:00|00:11:42|00:04:15.711|   - Adding parameter 'CertsValidityPeriodUnits' with value of '5' to machine roles properties of machine CA01
VERBOSE: [10:00:00][Write-ScreenInfo] Adding parameter 'CertsValidityPeriod' with value of 'Years' to machine roles properties of machine CA01
VERBOSE: [10:00:00][Write-ScreenInfo] 10:00:00|00:11:42|00:04:15.719|   - Adding parameter 'CertsValidityPeriod' with value of 'Years' to machine roles properties of machine CA01
10:00:00|00:11:42|00:04:15.719|   - Adding parameter 'CertsValidityPeriod' with value of 'Years' to machine roles properties of machine CA01
VERBOSE: Get-LabVM Entering... (Role=CaSubordinate,ErrorAction=<null>)
VERBOSE: Get-LabVM Entering... (Role=FirstChildDC)
VERBOSE: Wait-LWLabJob Entering... (Job=<null>,Timeout=15,NoDisplay=True,ProgressIndicator=10)
VERBOSE: [10:00:01][Write-ScreenInfo] .
10:00:01|00:11:42|00:04:15.764|   - .
VERBOSE: [10:00:01][Write-ScreenInfo] 10:00:01|00:11:42|00:04:15.764|   - .
VERBOSE: [10:00:01][Wait-LWLabJob] There is no job to wait for
VERBOSE: Wait-LWLabJob...leaving...(Time elapsed: 00:00:00:023)
VERBOSE: Get-LabVM Entering... (Role=DC)
VERBOSE: Wait-LWLabJob Entering... (Job=<null>,Timeout=15,NoDisplay=True,ProgressIndicator=10)
VERBOSE: [10:00:01][Write-ScreenInfo] .
.
VERBOSE: [10:00:01][Wait-LWLabJob] There is no job to wait for
VERBOSE: Wait-LWLabJob...leaving...(Time elapsed: 00:00:00:011)
VERBOSE: [10:00:01][Install-LabCAMachine] Starting install of EnterpriseRootCA role on machine 'CA01'
VERBOSE: Install-LWLabCAServers Entering... (UserName=contoso.com\Administrator,Password=P@ssw0rd,ForestAdminUserName=contoso\Administrator,ForestAdminPassword=P@ssw0rd,ComputerName=CA01,DomainName=contoso.com,CACommonName=LabRootCA1,CAType=EnterpriseRootCA,KeyLength=4096,CryptoProviderName=RSA#Microsoft Software Key Storage Provider,HashAlgorithmName=SHA256,DatabaseDirectory=<null>,LogDirectory=<null>,ValidityPeriod=Years,ValidityPeriodUnits=10,CertsValidityPeriod=Years,CertsValidityPeriodUnits=5,CRLPeriod=Months,CRLPeriodUnits=15,CRLOverlapPeriod=Weeks,CRLOverlapUnits=16,CRLDeltaPeriod=Days,CRLDeltaPeriodUnits=228,UseLDAPAIA=True,UseHTTPAia=<null>,AIAHTTPURL01=<null>,AiaHttpUrl02=<null>,AIAHTTPURL01UploadLocation=<null>,AiaHttpUrl02UploadLocation=<null>,UseLDAPCRL=True,UseHTTPCRL=<null>,CDPHTTPURL01=<null>,CDPHTTPURL02=<null>,CDPHTTPURL01UploadLocation=<null>,CDPHTTPURL02UploadLocation=<null>,InstallWebEnrollment=<null>,InstallWebRole=<null>,CpsUrl=http://CA01.contoso.com/cps/cps.html,CpsText=Certification Practice Statement,InstallOCSP=<null>,OCSPHttpUrl01=<null>,OCSPHttpUrl02=<null>,DoNotLoadDefaultTemplates=<null>,PreDelaySeconds=<null>)
VERBOSE: Install-LabWindowsFeature Entering... (ComputerName=CA01,FeatureName=RSAT-AD-Tools,IncludeAllSubFeature=True,NoDisplay=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=CA01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:034)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:040)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: Mount-LabIsoImage Entering... (ComputerName=CA01,IsoPath=C:\LabSources\ISOs\en_windows_server_2016_updated_feb_2018_x64_dvd_11636692.iso,SupressOutput=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: [10:00:01][Mount-LWIsoImage] Adding DVD drive 'C:\LabSources\ISOs\en_windows_server_2016_updated_feb_2018_x64_dvd_11636692.iso' to machine 'CA01'
VERBOSE: Invoke-LabCommand Entering... (ComputerName=CA01,ScriptBlock=
            Get-WmiObject -Class Win32_LogicalDisk -Filter 'DriveType = 5 AND FileSystem LIKE "%"' | Select-Object -ExpandProperty DeviceID
        ,PassThru=True,NoDisplay=True)
VERBOSE: [10:00:01][Invoke-LabCommand] Executing lab command activity '<unnamed>' on machines 'CA01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=CA01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:032)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:037)
VERBOSE: [10:00:01][Invoke-LabCommand] Creating session to computer(s) 'CA01'
VERBOSE: New-LabPSSession Entering... (ComputerName=CA01,DoNotUseCredSsp=<null>,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: [10:00:01][New-LabPSSession] Connecting to machine 'CA01' using the DNS name 'CA01'
VERBOSE: [10:00:01][New-LabPSSession] Creating a new PSSession to machine 'CA01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: [10:00:01][New-LabPSSession] Session CA01_3e5e3767-ae50-4e2e-906d-7c84d1144ab3 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 6'...(Time elapsed: 00:00:00:010)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=CA01,Retries=3,PassThru=True,ScriptBlock=
            Get-WmiObject -Class Win32_LogicalDisk -Filter 'DriveType = 5 AND FileSystem LIKE "%"' | Select-Object -ExpandProperty DeviceID
        ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=<unnamed>)
VERBOSE: [10:00:01][Invoke-LWCommand] Starting Activity '<unnamed>'
VERBOSE: [10:00:01][Invoke-LWCommand] Finished Installation Activity '<unnamed>'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:097)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:114)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=CA01,ScriptBlock=
            Get-WmiObject -Class Win32_LogicalDisk -Filter 'DriveType = 5 AND FileSystem LIKE "%"' | Select-Object -ExpandProperty DeviceID
        ,PassThru=True,NoDisplay=True)
VERBOSE: [10:00:08][Invoke-LabCommand] Executing lab command activity '<unnamed>' on machines 'CA01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=CA01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:032)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:038)
VERBOSE: [10:00:08][Invoke-LabCommand] Creating session to computer(s) 'CA01'
VERBOSE: New-LabPSSession Entering... (ComputerName=CA01,DoNotUseCredSsp=<null>,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: [10:00:08][New-LabPSSession] Connecting to machine 'CA01' using the DNS name 'CA01'
VERBOSE: [10:00:08][New-LabPSSession] Creating a new PSSession to machine 'CA01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: [10:00:08][New-LabPSSession] Session CA01_3e5e3767-ae50-4e2e-906d-7c84d1144ab3 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 6'...(Time elapsed: 00:00:00:012)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=CA01,Retries=3,PassThru=True,ScriptBlock=
            Get-WmiObject -Class Win32_LogicalDisk -Filter 'DriveType = 5 AND FileSystem LIKE "%"' | Select-Object -ExpandProperty DeviceID
        ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=<unnamed>)
VERBOSE: [10:00:08][Invoke-LWCommand] Starting Activity '<unnamed>'
VERBOSE: [10:00:09][Invoke-LWCommand] Finished Installation Activity '<unnamed>'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:035)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:047)
VERBOSE: Mount-LabIsoImage...leaving...(Time elapsed: 00:00:00:065)
VERBOSE: Install-LWHypervWindowsFeature Entering... (Machine=AutomatedLab.Machine[](1),FeatureName=RSAT-AD-Tools,UseLocalCredential=<null>,IncludeAllSubFeature=True,IncludeManagementTools=<null>,AsJob=<null>,PassThru=<null>)
VERBOSE: Invoke-LabCommand Entering... (ComputerName=CA01,ActivityName=Install Windows Feature(s): 'RSAT-AD-Tools',NoDisplay=True,ScriptBlock=Install-WindowsFeature RSAT-AD-Tools -Source "$(@(Get-WmiObject -Class Win32_CDRomDrive)[-1].Drive)\sources\sxs" -IncludeAllSubFeature:$True -IncludeManagementTools:$False -WarningAction SilentlyContinue,UseLocalCredential=<null>,AsJob=<null>,PassThru=<null>)
VERBOSE: [10:00:09][Invoke-LabCommand] Executing lab command activity 'Install Windows Feature(s): 'RSAT-AD-Tools'' on machines 'CA01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=CA01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:020)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:026)
VERBOSE: [10:00:09][Invoke-LabCommand] Creating session to computer(s) 'CA01'
VERBOSE: New-LabPSSession Entering... (ComputerName=CA01,DoNotUseCredSsp=<null>,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: [10:00:09][New-LabPSSession] Connecting to machine 'CA01' using the DNS name 'CA01'
VERBOSE: [10:00:09][New-LabPSSession] Creating a new PSSession to machine 'CA01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: [10:00:09][New-LabPSSession] Session CA01_3e5e3767-ae50-4e2e-906d-7c84d1144ab3 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 6'...(Time elapsed: 00:00:00:006)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=CA01,Retries=3,PassThru=<null>,ScriptBlock=Install-WindowsFeature RSAT-AD-Tools -Source "$(@(Get-WmiObject -Class Win32_CDRomDrive)[-1].Drive)\sources\sxs" -IncludeAllSubFeature:$True -IncludeManagementTools:$False -WarningAction SilentlyContinue,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=Install Windows Feature(s): 'RSAT-AD-Tools')
VERBOSE: [10:00:09][Invoke-LWCommand] Starting Activity 'Install Windows Feature(s): 'RSAT-AD-Tools''
VERBOSE: [10:00:29][Invoke-LWCommand] The Output of the task on machine 'CA01' will be available in the variable 'AL_afb46c88-29a3-459d-9cd8-f465b6632777'
VERBOSE: [10:00:29][Invoke-LWCommand] Finished Installation Activity 'Install Windows Feature(s): 'RSAT-AD-Tools''
VERBOSE: Invoke-LWCommand...leaving - return value is 'System.Management.Automation.PSVariable'...(Time elapsed: 00:00:19:943)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:19:953)
VERBOSE: Install-LWHypervWindowsFeature...leaving...(Time elapsed: 00:00:19:961)
VERBOSE: Dismount-LabIsoImage Entering... (ComputerName=CA01,SupressOutput=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: [10:00:29][Dismount-LWIsoImage] Removing DVD drive for machine 'CA01'
VERBOSE: Dismount-LabIsoImage...leaving...(Time elapsed: 00:00:00:542)
VERBOSE: Install-LabWindowsFeature...leaving...(Time elapsed: 00:00:00:549)
VERBOSE: [10:00:29][Install-LWLabCAServers] Performing installation of EnterpriseRootCA on 'CA01'
VERBOSE: Invoke-LabCommand Entering... (ActivityName=Install CA on 'CA01',ComputerName=CA01,ScriptBlock=

        param ($param)
        
        $param | Export-Clixml C:\DeployDebug\CaParams.xml

        #Make semi-sure that each install of CA server is not done at the same time
        Start-Sleep -Seconds $param.PreDelaySeconds

        Import-Module -Name ServerManager

        #region - Check if CA is already installed
        if ((Get-WindowsFeature -Name 'ADCS-Cert-Authority').Installed)
        {
            Write-Output "A Certificate Authority is already installed on '$($param.ComputerName)'. Skipping installation."
            return
        }
        #endregion

        #region - Create CAPolicy file        
        $caPolicyFileName = "$Env:Windir\CAPolicy.inf"
        if (-not (Test-Path -Path $caPolicyFileName))
        {
            Write-Verbose -Message 'Create CAPolicy.inf file'
            Set-Content $caPolicyFileName -Force -Value '
VERBOSE: [10:00:29][Invoke-LabCommand] Executing lab command activity 'Install CA on 'CA01'' on machines 'CA01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=CA01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:032)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:039)
VERBOSE: [10:00:29][Invoke-LabCommand] Creating session to computer(s) 'CA01'
VERBOSE: New-LabPSSession Entering... (ComputerName=CA01,DoNotUseCredSsp=<null>,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: [10:00:29][New-LabPSSession] Connecting to machine 'CA01' using the DNS name 'CA01'
VERBOSE: [10:00:29][New-LabPSSession] Creating a new PSSession to machine 'CA01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: [10:00:29][New-LabPSSession] Session CA01_3e5e3767-ae50-4e2e-906d-7c84d1144ab3 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 6'...(Time elapsed: 00:00:00:008)
VERBOSE: Invoke-LWCommand Entering... (PassThru=True,AsJob=True,Verbose=True,ComputerName=CA01,Retries=3,ArgumentList=System.Object[](1),ScriptBlock=

        param ($param)
        
        $param | Export-Clixml C:\DeployDebug\CaParams.xml

        #Make semi-sure that each install of CA server is not done at the same time
        Start-Sleep -Seconds $param.PreDelaySeconds

        Import-Module -Name ServerManager

        #region - Check if CA is already installed
        if ((Get-WindowsFeature -Name 'ADCS-Cert-Authority').Installed)
        {
            Write-Output "A Certificate Authority is already installed on '$($param.ComputerName)'. Skipping installation."
            return
        }
        #endregion

        #region - Create CAPolicy file        
        $caPolicyFileName = "$Env:Windir\CAPolicy.inf"
        if (-not (Test-Path -Path $caPolicyFileName))
        {
            Write-Verbose -Message 'Create CAPolicy.inf file'
            Set-Content $caPolicyFileName -Force -Value '
VERBOSE: [10:00:30][Invoke-LWCommand] Starting Activity 'Install CA on 'CA01''
VERBOSE: [10:00:30][Invoke-LWCommand] Finished Installation Activity 'Install CA on 'CA01''
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:015)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:023)
VERBOSE: Install-LWLabCAServers...leaving...(Time elapsed: 00:00:00:030)
VERBOSE: Install-LabCAMachine...leaving...(Time elapsed: 00:00:00:037)
VERBOSE: [10:00:30][Write-ScreenInfo] Waiting for Root CA(s) to complete installation
Waiting for Root CA(s) to complete installation
VERBOSE: Wait-LWLabJob Entering... (Job=System.Management.Automation.Job[](1),ProgressIndicator=10,NoDisplay=True)
VERBOSE: [10:00:30][Write-ScreenInfo] .
.
VERBOSE: [10:00:40][Write-ScreenInfo] .
.
VERBOSE: [10:00:50][Write-ScreenInfo] .
.
VERBOSE: [10:01:00][Write-ScreenInfo] .
.
VERBOSE: [10:01:10][Write-ScreenInfo] .
.
VERBOSE: [10:01:20][Write-ScreenInfo] .
.
VERBOSE: [10:01:30][Write-ScreenInfo] .
.
VERBOSE: [10:01:36][Write-ScreenInfo] .
.
VERBOSE: Wait-LWLabJob...leaving...(Time elapsed: 00:01:06:114)
VERBOSE: [10:01:36][Install-LabCA] Getting certificates from Root CA servers and placing them in '<labfolder>\Certs' on host machine
VERBOSE: Get-LabVM Entering... (Role=CaRoot)
VERBOSE: Get-LabCAInstallCertificates Entering... )
VERBOSE: Invoke-LabCommand Entering... (ComputerName=CA01,ScriptBlock=
                (Get-Item -Path 'C:\Windows\System32\CertSrv\CertEnroll\*.crt' |
                    Sort-Object -Property LastWritten -Descending |
                Select-Object -First 1).FullName
            ,PassThru=True,NoDisplay=True)
VERBOSE: [10:01:36][Invoke-LabCommand] Executing lab command activity '<unnamed>' on machines 'CA01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=CA01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:060)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:066)
VERBOSE: [10:01:36][Invoke-LabCommand] Creating session to computer(s) 'CA01'
VERBOSE: New-LabPSSession Entering... (ComputerName=CA01,DoNotUseCredSsp=<null>,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: [10:01:36][New-LabPSSession] Connecting to machine 'CA01' using the DNS name 'CA01'
VERBOSE: [10:01:36][New-LabPSSession] Creating a new PSSession to machine 'CA01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: [10:01:36][New-LabPSSession] Session CA01_3e5e3767-ae50-4e2e-906d-7c84d1144ab3 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 6'...(Time elapsed: 00:00:00:008)
VERBOSE: Invoke-LWCommand Entering... (AsJob=<null>,Verbose=True,ComputerName=CA01,Retries=3,PassThru=True,ScriptBlock=
                (Get-Item -Path 'C:\Windows\System32\CertSrv\CertEnroll\*.crt' |
                    Sort-Object -Property LastWritten -Descending |
                Select-Object -First 1).FullName
            ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=<unnamed>)
VERBOSE: [10:01:36][Invoke-LWCommand] Starting Activity '<unnamed>'
VERBOSE: [10:01:36][Invoke-LWCommand] Finished Installation Activity '<unnamed>'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:037)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:045)
VERBOSE: New-LabPSSession Entering... (ComputerName=CA01)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: [10:01:36][New-LabPSSession] Connecting to machine 'CA01' using the DNS name 'CA01'
VERBOSE: [10:01:36][New-LabPSSession] Creating a new PSSession to machine 'CA01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: [10:01:36][New-LabPSSession] Session CA01_3e5e3767-ae50-4e2e-906d-7c84d1144ab3 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 6'...(Time elapsed: 00:00:00:004)
VERBOSE: PSFileTransfer: Receiving file C:\Windows\System32\CertSrv\CertEnroll\CA01.contoso.com_LabRootCA1.crt to C:\ProgramData\AutomatedLab\Labs\NLBIISLab\Certificates\CA01.crt from CA01 (1 MB chunks)
VERBOSE: PSFileTransfer: Finished receiving file C:\Windows\System32\CertSrv\CertEnroll\CA01.contoso.com_LabRootCA1.crt
VERBOSE: Get-LabCAInstallCertificates...leaving...(Time elapsed: 00:00:00:231)
VERBOSE: [10:01:36][Write-ScreenInfo] Publishing certificates from CA servers to all online machines
10:01:36|00:13:18|00:05:51.543|   - Publishing certificates from CA servers to all online machines
VERBOSE: [10:01:36][Write-ScreenInfo] 10:01:36|00:13:18|00:05:51.543|   - Publishing certificates from CA servers to all online machines
VERBOSE: Publish-LabCAInstallCertificates Entering... (PassThru=True)
VERBOSE: Get-LabVM Entering... (All=True,IsRunning=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=System.Object[])
VERBOSE: Get-LabVM Entering... (ComputerName=System.Object[],IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=System.Object[])
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:073)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:080)
VERBOSE: Get-LabVM Entering... (All=True,IsRunning=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=System.Object[])
VERBOSE: Get-LabVM Entering... (ComputerName=System.Object[],IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=System.Object[])
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:036)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:041)
VERBOSE: [10:01:37][Publish-LabCAInstallCertificates] Target machines for publishing: 'DC01'
VERBOSE: Get-LabVM Entering... (All=True)
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [10:01:37][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [10:01:37][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: [10:01:37][New-LabPSSession] Testing port 5985 on computer 'DC01'
VERBOSE: [10:01:37][New-LabPSSession] Port was open, trying to create the session
VERBOSE: [10:01:37][New-LabPSSession] Session to computer 'DC01' created
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 7'...(Time elapsed: 00:00:00:004)
VERBOSE: [10:01:37][Publish-LabCAInstallCertificates] Send file 'C:\ProgramData\AutomatedLab\Labs\NLBIISLab\Certificates\CA01.crt' to 'C:\Windows\CA01.crt'
VERBOSE: PSFileTransfer: Sending file C:\ProgramData\AutomatedLab\Labs\NLBIISLab\Certificates\CA01.crt to C:\Windows on DC01 (1 MB chunks)
VERBOSE: PSFileTransfer: Finished sending file C:\ProgramData\AutomatedLab\Labs\NLBIISLab\Certificates\CA01.crt
VERBOSE: Invoke-LabCommand Entering... (ActivityName=Publish Lab CA(s) and install certificates,ComputerName=DC01,ScriptBlock=
            foreach ($certfile in (Get-ChildItem -Path 'C:\Windows\*.crt'))
            {
                Write-Verbose -Message "Install certificate ($((Get-PfxCertificate $certfile.FullName).Subject)) on machine $(hostname)"
                #If workgroup, publish to local store
                if ((Get-WmiObject -Namespace root\cimv2 -Class Win32_ComputerSystem).DomainRole -eq 2)
                {
                    Write-Verbose -Message '  Machine is not domain joined. Publishing certificate to local store'

                    $Cert = Get-PfxCertificate $certfile.FullName
                    if ($Cert.GetNameInfo('SimpleName', $false) -eq $Cert.GetNameInfo('SimpleName', $true))
                    {
                        $targetStore = 'Root'
                    }
                    else
                    {
                        $targetStore = 'CA'
                    }

                    if (-not (Get-ChildItem -Path "Cert:\LocalMachine\$targetStore" | Where-Object { $_.ThumbPrint -eq (Get-PfxCertificate $($certfile.FullName)).ThumbPrint }))
                    {
                        $result = Invoke-Expression -Command "certutil -addstore -f $targetStore c:\Windows\$($certfile.BaseName).crt"

                        if ($result | Where-Object { $_ -like '*already in store*' })
                        {
                            Write-Verbose -Message "  Certificate ($((Get-PfxCertificate $certfile.FullName).Subject)) is already in local store on $(hostname)"
                        }
                        elseif ($result | Where-Object { $_ -like '*added to store.' })
                        {
                            Write-Verbose -Message "  Certificate ($((Get-PfxCertificate $certfile.FullName).Subject)) added to local store on $(hostname)"
                        }
                        else
                        {
                            Write-Error -Message "Certificate ($((Get-PfxCertificate $certfile.FullName).Subject)) was not added to local store on $(hostname)"
                        }
                    }
                    else
                    {
                        Write-Verbose -Message "  Certificate ($((Get-PfxCertificate $certfile.FullName).Subject)) is already in local store on $(hostname)"
                    }
                }
                else #If domain joined, publish to AD Enterprise store
                {
                    Write-Verbose -Message '  Machine is domain controller. Publishing certificate to AD Enterprise store'

                    if (((Get-PfxCertificate $($certfile.FullName)).Subject) -like '*root*')
                    {
                        $dsPublishStoreName = 'RootCA'
                        $readStoreName = 'Root'
                    }
                    else
                    {
                        $dsPublishStoreName = 'SubCA'
                        $readStoreName = 'CA'
                    }


                    if (-not (Get-ChildItem "Cert:\LocalMachine\$readStoreName" | Where-Object { $_.ThumbPrint -eq (Get-PfxCertificate $($certfile.FullName)).ThumbPrint }))
                    {
                        $result = Invoke-Expression -Command "certutil -f -dspublish c:\Windows\$($certfile.BaseName).crt $dsPublishStoreName"

                        if ($result | Where-Object { $_ -like '*Certificate added to DS store*' })
                        {
                            Write-Verbose -Message "  Certificate ($((Get-PfxCertificate $certfile.FullName).Subject)) added to DS store on $(hostname)"
                        }
                        elseif ($result | Where-Object { $_ -like '*Certificate already in DS store*' })
                        {
                            Write-Verbose -Message "  Certificate ($((Get-PfxCertificate $certfile.FullName).Subject)) is already in DS store on $(hostname)"
                        }
                        else
                        {
                            Write-Error -Message "Certificate ($((Get-PfxCertificate $certfile.FullName).Subject)) was not added to DS store on $(hostname)"
                        }
                    }
                    else
                    {
                        Write-Verbose -Message "  Certificate ($((Get-PfxCertificate $certfile.FullName).Subject)) is already in DS store on $(hostname)"
                    }
                }
            }
        ,NoDisplay=True,AsJob=True,PassThru=True)
VERBOSE: [10:01:38][Invoke-LabCommand] Executing lab command activity 'Publish Lab CA(s) and install certificates' on machines 'DC01'
VERBOSE: Get-LabVM Entering... (IncludeLinux=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=DC01,AsHashTable=True)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:019)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:024)
VERBOSE: [10:01:38][Invoke-LabCommand] Creating session to computer(s) 'DC01'
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,DoNotUseCredSsp=<null>,UseLocalCredential=<null>,Credential=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [10:01:38][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [10:01:38][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: [10:01:38][New-LabPSSession] Session DC01_5ef9fceb-e880-42db-9435-d85331eb1d53 is available and will be reused
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 7'...(Time elapsed: 00:00:00:005)
VERBOSE: Invoke-LWCommand Entering... (AsJob=True,Verbose=True,ComputerName=DC01,Retries=3,PassThru=True,ScriptBlock=
            foreach ($certfile in (Get-ChildItem -Path 'C:\Windows\*.crt'))
            {
                Write-Verbose -Message "Install certificate ($((Get-PfxCertificate $certfile.FullName).Subject)) on machine $(hostname)"
                #If workgroup, publish to local store
                if ((Get-WmiObject -Namespace root\cimv2 -Class Win32_ComputerSystem).DomainRole -eq 2)
                {
                    Write-Verbose -Message '  Machine is not domain joined. Publishing certificate to local store'

                    $Cert = Get-PfxCertificate $certfile.FullName
                    if ($Cert.GetNameInfo('SimpleName', $false) -eq $Cert.GetNameInfo('SimpleName', $true))
                    {
                        $targetStore = 'Root'
                    }
                    else
                    {
                        $targetStore = 'CA'
                    }

                    if (-not (Get-ChildItem -Path "Cert:\LocalMachine\$targetStore" | Where-Object { $_.ThumbPrint -eq (Get-PfxCertificate $($certfile.FullName)).ThumbPrint }))
                    {
                        $result = Invoke-Expression -Command "certutil -addstore -f $targetStore c:\Windows\$($certfile.BaseName).crt"

                        if ($result | Where-Object { $_ -like '*already in store*' })
                        {
                            Write-Verbose -Message "  Certificate ($((Get-PfxCertificate $certfile.FullName).Subject)) is already in local store on $(hostname)"
                        }
                        elseif ($result | Where-Object { $_ -like '*added to store.' })
                        {
                            Write-Verbose -Message "  Certificate ($((Get-PfxCertificate $certfile.FullName).Subject)) added to local store on $(hostname)"
                        }
                        else
                        {
                            Write-Error -Message "Certificate ($((Get-PfxCertificate $certfile.FullName).Subject)) was not added to local store on $(hostname)"
                        }
                    }
                    else
                    {
                        Write-Verbose -Message "  Certificate ($((Get-PfxCertificate $certfile.FullName).Subject)) is already in local store on $(hostname)"
                    }
                }
                else #If domain joined, publish to AD Enterprise store
                {
                    Write-Verbose -Message '  Machine is domain controller. Publishing certificate to AD Enterprise store'

                    if (((Get-PfxCertificate $($certfile.FullName)).Subject) -like '*root*')
                    {
                        $dsPublishStoreName = 'RootCA'
                        $readStoreName = 'Root'
                    }
                    else
                    {
                        $dsPublishStoreName = 'SubCA'
                        $readStoreName = 'CA'
                    }


                    if (-not (Get-ChildItem "Cert:\LocalMachine\$readStoreName" | Where-Object { $_.ThumbPrint -eq (Get-PfxCertificate $($certfile.FullName)).ThumbPrint }))
                    {
                        $result = Invoke-Expression -Command "certutil -f -dspublish c:\Windows\$($certfile.BaseName).crt $dsPublishStoreName"

                        if ($result | Where-Object { $_ -like '*Certificate added to DS store*' })
                        {
                            Write-Verbose -Message "  Certificate ($((Get-PfxCertificate $certfile.FullName).Subject)) added to DS store on $(hostname)"
                        }
                        elseif ($result | Where-Object { $_ -like '*Certificate already in DS store*' })
                        {
                            Write-Verbose -Message "  Certificate ($((Get-PfxCertificate $certfile.FullName).Subject)) is already in DS store on $(hostname)"
                        }
                        else
                        {
                            Write-Error -Message "Certificate ($((Get-PfxCertificate $certfile.FullName).Subject)) was not added to DS store on $(hostname)"
                        }
                    }
                    else
                    {
                        Write-Verbose -Message "  Certificate ($((Get-PfxCertificate $certfile.FullName).Subject)) is already in DS store on $(hostname)"
                    }
                }
            }
        ,Session=System.Management.Automation.Runspaces.PSSession[](1),RetryIntervalInSeconds=10,ActivityName=Publish Lab CA(s) and install certificates)
VERBOSE: [10:01:38][Invoke-LWCommand] Starting Activity 'Publish Lab CA(s) and install certificates'
VERBOSE: [10:01:38][Invoke-LWCommand] Finished Installation Activity 'Publish Lab CA(s) and install certificates'
VERBOSE: Invoke-LWCommand...leaving...(Time elapsed: 00:00:00:021)
VERBOSE: Invoke-LabCommand...leaving...(Time elapsed: 00:00:00:035)
VERBOSE: Publish-LabCAInstallCertificates...leaving...(Time elapsed: 00:00:00:041)
VERBOSE: Wait-LWLabJob Entering... (Job=System.Management.Automation.Job[](1),ProgressIndicator=20,Timeout=30,NoNewLine=True,NoDisplay=True)
VERBOSE: [10:01:38][Write-ScreenInfo] .
.
VERBOSE: Wait-LWLabJob...leaving...(Time elapsed: 00:00:01:042)
VERBOSE: [10:01:39][Install-LabCA] Waiting for all running machines to be contactable
VERBOSE: Get-LabVM Entering... (All=True,IsRunning=True)
VERBOSE: Get-LabVMStatus Entering... (ComputerName=System.Object[])
VERBOSE: Get-LabVM Entering... (ComputerName=System.Object[],IncludeLinux=True)
VERBOSE: Get-LWHypervVMStatus Entering... (ComputerName=System.Object[])
VERBOSE: Get-LWHypervVMStatus...leaving...(Time elapsed: 00:00:00:040)
VERBOSE: Get-LabVMStatus...leaving...(Time elapsed: 00:00:00:044)
VERBOSE: Wait-LabVM Entering... (ComputerName=System.Object[],ProgressIndicator=20,NoNewLine=True)
VERBOSE: Get-LabVM Entering... (ComputerName=System.Object[],IncludeLinux=True)
VERBOSE: Remove-LabPSSession Entering... (ComputerName=DC01)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [10:01:39][Remove-LabPSSession] Removed 1 PSSessions...
VERBOSE: Remove-LabPSSession...leaving...(Time elapsed: 00:00:00:047)
VERBOSE: Get-LWHypervVMDescription Entering... (ComputerName=DC01)
VERBOSE: Get-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:024)
VERBOSE: New-LabPSSession Entering... (ComputerName=DC01,UseLocalCredential=True,Retries=1,DoNotUseCredSsp=<null>,ErrorAction=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=DC01,IncludeLinux=True)
VERBOSE: [10:01:39][New-LabPSSession] Connecting to machine 'DC01' using the DNS name 'DC01'
VERBOSE: [10:01:39][New-LabPSSession] Creating a new PSSession to machine 'DC01:5985' (UserName='contoso.com\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: [10:01:39][New-LabPSSession] Testing port 5985 on computer 'DC01'
VERBOSE: [10:01:40][New-LabPSSession] Port was open, trying to create the session
VERBOSE: [10:01:40][New-LabPSSession] Session to computer 'DC01' created
VERBOSE: Get-LabVM Entering... (ComputerName=DC01)
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 8'...(Time elapsed: 00:00:00:008)
VERBOSE: [10:01:40][Wait-LabVM] Computer 'DC01' was reachable
VERBOSE: Remove-LabPSSession Entering... (ComputerName=CA01)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: [10:01:40][Remove-LabPSSession] Removed 3 PSSessions...
VERBOSE: Remove-LabPSSession...leaving...(Time elapsed: 00:00:00:100)
VERBOSE: Get-LWHypervVMDescription Entering... (ComputerName=CA01)
VERBOSE: Get-LWHypervVMDescription...leaving...(Time elapsed: 00:00:00:018)
VERBOSE: New-LabPSSession Entering... (ComputerName=CA01,UseLocalCredential=True,Retries=1,DoNotUseCredSsp=<null>,ErrorAction=<null>)
VERBOSE: Get-LabVM Entering... (ComputerName=CA01,IncludeLinux=True)
VERBOSE: [10:01:40][New-LabPSSession] Connecting to machine 'CA01' using the DNS name 'CA01'
VERBOSE: [10:01:40][New-LabPSSession] Creating a new PSSession to machine 'CA01:5985' (UserName='CA01\Administrator', Password='P@ssw0rd', DoNotUseCredSsp='False')
VERBOSE: [10:01:40][New-LabPSSession] Testing port 5985 on computer 'CA01'
VERBOSE: [10:01:41][New-LabPSSession] Port was open, trying to create the session
VERBOSE: [10:01:41][New-LabPSSession] Session to computer 'CA01' created
VERBOSE: Get-LabVM Entering... (ComputerName=CA01)
VERBOSE: New-LabPSSession...leaving - return value is 'Session IDs: 9'...(Time elapsed: 00:00:00:003)
VERBOSE: [10:01:41][Wait-LabVM] Computer 'CA01' was reachable
VERBOSE: [10:01:41][Wait-LabVM] Waiting for 2 machines to respond in timeout (60 minute(s))
VERBOSE: Wait-LWLabJob Entering... (Job=System.Management.Automation.Job[](2),ProgressIndicator=20,NoNewLine=True,NoDisplay=True,Timeout=60)
VERBOSE: [10:01:41][Write-ScreenInfo] .
.
